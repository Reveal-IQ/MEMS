{"version":3,"file":"js/5348.541620ee.js","mappings":"w1GAoOA,MAAMA,GAAQC,EAAAA,EAAAA,MAERC,GAAWC,EAAAA,EAAAA,KAAS,IAAMH,EAAMI,MAAMC,YAAYC,WAElDC,GAAiBC,IACrBR,EAAMS,SAAS,gBAAiBD,IAI5BE,IAAYC,EAAAA,EAAAA,IAAI,IAChBC,IAAmBD,EAAAA,EAAAA,IAAI,IACvBE,IAAaF,EAAAA,EAAAA,IAAI,IAKjBG,GAAaC,UACjB,IACER,GAAc,CACZS,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,cACLC,cAAc,EACdC,SAAU,IACVC,KAAM,CACJC,WAAY,QACZC,QAAS,CACP,CACEC,WAAY,iBACZF,WAAY,eACZG,aAAc,MACdC,GAAI,iBAGRC,WAAY,CACVC,IAAK,EACLC,iBAAkB,iCAClBC,UAAW,EACXC,WAAY,MAKpBC,SAAWC,IACQ,aAAbA,EAAInB,MACNoB,QAAQC,IAAI,yBAAuBF,EAAIG,UACvC9B,GAAU+B,MAAQJ,EAAIG,SAASE,SACtBL,EAAInB,QASnB,MAAOyB,GACPL,QAAQC,IAAII,KAIVC,GAAoB7B,UACxB,IACER,GAAc,CACZS,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,cACLC,cAAc,EACdC,SAAU,IACVC,KAAM,CACJC,WAAY,eACZK,WAAY,CACVC,IAAK,EACLC,iBAAkB,MAK1BG,SAAWC,IACQ,aAAbA,EAAInB,MACNoB,QAAQC,IAAI,yBAAuBF,EAAIG,UACvC5B,GAAiB6B,MAAQJ,EAAIG,SAASE,SAC7BL,EAAInB,QASnB,MAAOyB,GACPL,QAAQC,IAAII,KAIVE,GAAc9B,UAClB,IACER,GAAc,CACZS,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,cACLC,cAAc,EACdC,SAAU,IACVC,KAAM,CACJC,WAAY,SACZC,QAAS,CACP,CACEC,WAAY,gCACZF,WAAY,eACZG,aAAc,MACdC,GAAI,iBAGRC,WAAY,CACVC,IAAK,EACLC,iBAAkB,iCAClBa,aAAc,iCACdC,WAAY,MAKpBX,SAAWC,IACQ,aAAbA,EAAInB,MACNoB,QAAQC,IAAI,yBAAuBF,EAAIG,UACvC3B,GAAW4B,MAAQJ,EAAIG,SAASE,SACvBL,EAAInB,QASnB,MAAOyB,GACPL,QAAQC,IAAII,KASVK,GAAajC,MAAOkC,EAAMC,KAC9BC,EAAK,aAAcF,EAAMC,I,OAG3BE,EAAAA,EAAAA,KAAU,KACRtC,KACA8B,KACAC,Q,q5ICnYF,MAAMQ,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,W,urBC6CA,IAAIC,EAAOJ,EAAMI,K,+jBC/CjB,MAAMD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD.vue?d97c","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-ToastGlobal.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-ToastGlobal.vue?902d"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('dashboard')\">Dashboard</small>\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('assetInfo')\">New Asset</small>\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('vendorInfo')\">New Vendor</small>\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('departmentInfo')\">Department</small>\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('manufacturerInfo')\">Manufacturer</small>\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('siteDescription')\">Facility</small>\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('reportsPage')\">Reports</small>\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-1\">Dashboard</span>\r\n      <span class=\"sub-title fs-6 fw-normal\">Snapshot for medical equipment inventory</span>\r\n    </div>\r\n\r\n    <div class=\"rounded mt-4 p-2\" style=\"background-color: #e3f6f5\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\" style=\"color: #298a85\">\r\n          Welcome {{ userName.User_First_Name }}!\r\n        </h5>\r\n        <p class=\"card-text\">\r\n          <small class=\"text-muted\">This is your dashboard of medical equipment assigned to you and\r\n            your team</small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Site Inventory Dashboard -->\r\n    <div class=\"row p-2 mt-4\">\r\n      <div class=\"col-sm-12 col-lg-9 col-12\">\r\n        <div class=\"mb-5\">\r\n          <div class=\"\">\r\n            <span class=\"card-title fw-normal fs-4\">Site Inventory</span>\r\n            <p class=\"card-text\">\r\n              <small class=\"text-muted\">Summary of all the asset models</small>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"mb-2 mt-2\" v-if=\"modelList == 0\">\r\n            <UIToastGlobal message=\"Assets have not been assigned\"\r\n              message2=\"Use New Vendor to create new Models and Manufacturers.\" :icon=\"'exclamation-triangle'\"\r\n              backgroundColor=\"#FFF0DA\">\r\n              <UIBtn2 BtnName=\"New Model\" backgroundColor=\"#FFFFFF\" class=\"text-success btn-sm\"\r\n                @click=\"changePage('vendorInfo')\" />\r\n            </UIToastGlobal>\r\n          </div>\r\n          <div v-else v-for=\"model in modelList\" :key=\"model.index\"\r\n            class=\"g-3 mb-2 mt-2 rounded container py-2 align-middle\" style=\"background-color: #f5f6f6\" @click=\"\r\n              changePage('dashboardModel', {\r\n                modelName: model.modelName,\r\n                manufacturerID: model.manufacturerID,\r\n                commonName: model.commonName,\r\n                manufacturerName: model.manufacturerName,\r\n                modelID: model._id,\r\n              })\r\n              \">\r\n            <div class=\"\" style=\"cursor: pointer\">\r\n              <div class=\"row\">\r\n                <td class=\"col-3\">\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">Model</small>\r\n                    <small class=\"fw-normal\">{{ model.modelName }}</small>\r\n                  </div>\r\n                </td>\r\n                <td class=\"col-3\">\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">Manufacturer</small>\r\n                    <small>{{ model.manufacturerName }}</small>\r\n                  </div>\r\n                </td>\r\n                <td class=\"col-2\">\r\n                  <div class=\"d-flex flex-column justify-content-center text-center\">\r\n                    <small class=\"text-secondary fsXs\">Quantity</small>\r\n                    <!-- <small>---</small> -->\r\n                  </div>\r\n                </td>\r\n                <td class=\"col-2\">\r\n                  <div class=\"d-flex flex-column justify-content-center text-center\">\r\n                    <small class=\"text-secondary fsXs\">Active</small>\r\n                    <!-- <small>6</small> -->\r\n                  </div>\r\n                </td>\r\n                <td class=\"col-2\">\r\n                  <div class=\"d-flex flex-column justify-content-end text-center\">\r\n                    <small class=\"text-secondary fsXs\">In-Service</small>\r\n                    <!-- <small>4</small> -->\r\n                  </div>\r\n                </td>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Manufacturer Dashboard -->\r\n    <div class=\"row p-2 mb-5\">\r\n      <div class=\"col-sm-12 col-lg-9 col-12\">\r\n        <div class=\"\">\r\n          <span class=\"card-title fw-normal fs-4\">Manufacturer</span>\r\n          <p class=\"card-text\">\r\n            <small class=\"text-muted\">Profile of Manufacturers and Models</small>\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mb-5 mt-2\" v-if=\"manufacturerList == 0\">\r\n          <UIToastGlobal message=\"Manufacturer has not been added\" message2=\"Create a new Manufacturer.\"\r\n            :icon=\"'exclamation-triangle'\" backgroundColor=\"#FFF0DA\">\r\n            <UIBtn2 BtnName=\"New Model\" backgroundColor=\"#FFFFFF\" class=\"text-success btn-sm\"\r\n              @click=\"changePage('manufacturerInfo')\" />\r\n          </UIToastGlobal>\r\n        </div>\r\n        <div v-else>\r\n          <div v-for=\"manufacturer in manufacturerList\" :key=\"manufacturer.index\"\r\n            class=\"g-3 mb-2 mt-2 rounded container py-2 align-middle\" style=\"background-color: #f5f6f6\" @click=\"\r\n              changePage('dashboardManufacturerProfile', {\r\n                manufacturerName: manufacturer.manufacturerName,\r\n                manufacturerID: manufacturer._id,\r\n              })\r\n              \">\r\n            <div class=\"\" style=\"cursor: pointer\">\r\n              <div class=\"row\">\r\n                <td class=\"col-4\">\r\n                  <small class=\"text-secondary fsXs\">Manufacturer Name</small>\r\n                  <div class=\"\">\r\n                    <small class=\"fw-normal\">{{ manufacturer.manufacturerName }}\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td class=\"col-4\">\r\n                  <small class=\"text-secondary fsXs\">Model</small>\r\n                  <div class=\"\">\r\n                    <span v-for=\"model in modelList\" :key=\"model.index\" class=\"\">\r\n                      <small class=\"\" v-if=\"\r\n                        model.manufacturerName ===\r\n                        manufacturer.manufacturerName\r\n                      \">\r\n                        | {{ model.modelName }}\r\n                      </small>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vendor Dashboard -->\r\n    <div class=\"row p-2 mb-5\">\r\n      <div class=\"col-sm-12 col-lg-9 col-12\">\r\n        <div class=\"\">\r\n          <span class=\"card-title fw-normal fs-4\">Vendors</span>\r\n          <p class=\"card-text\">\r\n            <small class=\"text-muted\">Profile of Manufacturer and Models</small>\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mb-5 mt-2\" v-if=\"vendorList == 0\">\r\n          <UIToastGlobal message=\"Vendor has not been added\"\r\n            message2=\"Use New Vendor to create new Models and Manufacturers.\" :icon=\"'exclamation-triangle'\"\r\n            backgroundColor=\"#FFF0DA\">\r\n            <UIBtn2 BtnName=\"New Vendor\" backgroundColor=\"#FFFFFF\" class=\"text-success btn-sm\"\r\n              @click=\"changePage('vendorInfo')\" />\r\n          </UIToastGlobal>\r\n        </div>\r\n        <div v-else>\r\n          <div v-for=\"vendor in vendorList\" :key=\"vendor.index\"\r\n            class=\"g-3 mb-2 mt-2 rounded container py-2 align-middle\" style=\"background-color: #f5f6f6\" @click=\"\r\n              changePage('dashboardManufacturerProfile', {\r\n                manufacturerName: manufacturer.manufacturerName,\r\n                manufacturerID: manufacturer._id,\r\n              })\r\n              \">\r\n            <div class=\"\" style=\"cursor: pointer\">\r\n              <div class=\"row\">\r\n                <td class=\"col-4\">\r\n                  <small class=\"text-secondary fsXs\">Manufacturer Name</small>\r\n                  <div class=\"\">\r\n                    <small class=\"fw-normal\">{{ vendor.vendorName }}\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td class=\"col-4\">\r\n                  <small class=\"text-secondary fsXs\">Manufacturer</small>\r\n                  <div class=\"\">\r\n                    <span v-for=\"manufacturer in manufacturerList\" :key=\"manufacturer.index\" class=\"\">\r\n                      <small class=\"\" v-if=\"\r\n                        manufacturer.manufacturerName ===\r\n                        vendor.manufacturerName\r\n                      \">\r\n                        | {{ manufacturer.manufacturerName }}\r\n                      </small>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <!-- <td class=\"col\">\r\n                  <small class=\"text-secondary fsXs\">Vendor</small>\r\n                  <div class=\"\">\r\n                    <span v-for=\"vendor in vendorList\" :key=\"vendor.index\">\r\n                      <small\r\n                        v-if=\"\r\n                          vendor.manufacturer === manufacturer.manufacturerName\r\n                        \"\r\n                        >{{ vendor.vendorName }} |\r\n                      </small>\r\n                    </span>\r\n                  </div>\r\n                </td> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport UIToastGlobal from \"../BIOMD-UI/UI-ToastGlobal.vue\";\r\nimport UIBtn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\n\r\nconst store = useStore();\r\n\r\nconst userName = computed(() => store.state.globalStore.UserInfo);\r\n\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\n//Variables\r\nconst modelList = ref([]);\r\nconst manufacturerList = ref([]);\r\nconst vendorList = ref([]);\r\n\r\n//Functions\r\n\r\n//Fetch Model Information\r\nconst fetchModel = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Model\",\r\n            lookups: [\r\n              {\r\n                localField: \"manufacturerID\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              modelName: 1,\r\n              commonName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          modelList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n//Fetch Manufacturer Information\r\nconst fetchManufacturer = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Manufacturer\",\r\n            projection: {\r\n              _id: 1,\r\n              manufacturerName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          manufacturerList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n// Fetch Vendor Information\r\nconst fetchVendor = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Vendor\",\r\n            lookups: [\r\n              {\r\n                localField: \"manufacturerList.manufacturer\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              manufacturer: \"$Manufacturer.manufacturerName\",\r\n              vendorName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          vendorList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//Lifecycle Hook\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\n\r\nonMounted(() => {\r\n  fetchModel();\r\n  fetchManufacturer();\r\n  fetchVendor();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./DASHBOARD.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DASHBOARD.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DASHBOARD.vue?vue&type=style&index=0&id=73fddf7c&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-73fddf7c\"]])\n\nexport default __exports__","<template>\r\n  <section\r\n    class=\"col-lg-12 col-md-12 col-sm-12 col-12 border-1 toastBackground rounded-3 border border-warning\"\r\n    :class=\"props.class\"\r\n    :style=\"'--color:' + props.backgroundColor\"\r\n  >\r\n    <div class=\"row align-items-center my-2\">\r\n      <div\r\n        class=\"col-sm-2 d-flex justify-content-md-center justify-content-center\"\r\n      >\r\n        <font-awesome-icon\r\n          class=\"iconColor text-warning text-sm-start text-center\"\r\n          :icon=\"icon\"\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"col-sm-7 col d-flex flex-column justify-content-sm-start justify-content-center my-4 text-center text-sm-start text-secondary\"\r\n      >\r\n        <span class=\"fs-6\">{{ props.message }}</span>\r\n        <span class=\"fsXs fw-light\">{{ props.message2 }}</span>\r\n      </div>\r\n      <div\r\n        class=\"col-sm-3 d-flex justify-content-center justify-content-lg-center\"\r\n      >\r\n        <slot />\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  message: {\r\n    type: String,\r\n    default: \"message here\",\r\n  },\r\n  message2: {\r\n    type: String,\r\n    default: \"message here\",\r\n  },\r\n  class: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  backgroundColor: {\r\n    type: String,\r\n    default: \"#586974\",\r\n  },\r\n\r\n  icon: null,\r\n});\r\n\r\nlet icon = props.icon;\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/font-style.scss\";\r\n\r\n.toastBackground {\r\n  background-color: var(--color);\r\n}\r\n.iconColor {\r\n  color: \"#D48713\";\r\n}\r\n</style>\r\n","import script from \"./UI-ToastGlobal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-ToastGlobal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-ToastGlobal.vue?vue&type=style&index=0&id=4546048e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4546048e\"]])\n\nexport default __exports__"],"names":["store","useStore","userName","computed","state","globalStore","UserInfo","sendSocketReq","request","dispatch","modelList","ref","manufacturerList","vendorList","fetchModel","async","data","Expiry","Type","Request","Module","ServiceCode","API","return_array","max_list","find","collection","lookups","localField","foreignField","as","projection","_id","manufacturerName","modelName","commonName","callback","res","console","log","Response","value","records","error","fetchManufacturer","fetchVendor","manufacturer","vendorName","changePage","page","props","emit","onMounted","__exports__","icon"],"sourceRoot":""}