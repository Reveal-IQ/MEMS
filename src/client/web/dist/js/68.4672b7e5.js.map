{"version":3,"file":"js/68.4672b7e5.js","mappings":"qhCAkGA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,EAAiBC,IACrBH,EAAMI,SAAS,gBAAiBD,IAG5BE,GAAeC,EAAAA,EAAAA,IAAI,MACnBC,GAAaD,EAAAA,EAAAA,IAAI,MACjBE,GAAeF,EAAAA,EAAAA,IAAI,MAEnBG,GAAoBC,EAAAA,EAAAA,IAAO,qBAC3BC,GAA2BD,EAAAA,EAAAA,IAAO,4BAClCE,GAAeF,EAAAA,EAAAA,IAAO,gBAEtBG,EAAgBC,MAAAA,IACpB,IACE,MAAMC,EAAmBC,EAAQA,EAAMC,OAAOC,MAAQ,IAEpDF,GACGA,aAAiBG,YACE,0BAApBH,EAAMI,WAWRT,EAAyBO,MAAMG,WAAa,KAE5CnB,EAAc,CACZoB,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,cACLC,cAAc,EACdC,SAAU,IACVC,KAAM,CACJC,WAAY,WACZC,QAAS,CACP,CACEC,MAAO,gBACPC,GAAI,KACJjB,MAAO,MAGXkB,WAAY,CACVC,IAAK,EACLC,cAAe,EACfC,QAAS,EACTC,KAAM,EACNC,KAAM,MAKdC,SAAWC,IACQ,aAAbA,EAAInB,MAENoB,QAAQC,IAAI,yBAAuBF,EAAIG,UACvCzC,EAAaa,MAAQyB,EAAIG,SAASC,SACzBJ,EAAInB,UA7CnBf,EAAkBS,MAAMH,iBAAmBV,EAAaa,MAAMa,MAC3DiB,GACQjC,IAAqBiC,EAASV,gBAGzC3B,EAAyBO,MAAMG,WAC7BZ,EAAkBS,MAAMH,iBAAiBsB,UACrCY,KAiDR,MAAOC,GACPN,QAAQC,IAAIK,KAIVD,EAAcnC,MAAAA,IAClB,IACE,MAAMqC,EAAiBnC,EAAQA,EAAMC,OAAOC,MAAQ,IAElDF,GACGA,aAAiBG,YACE,0BAApBH,EAAMI,WAWRT,EAAyBO,MAAMkC,OAAS,KAExClD,EAAc,CACZoB,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,cACLC,cAAc,EACdC,SAAU,IACVC,KAAM,CACJC,WAAY,WACZC,QAAS,CACP,CACEC,MAAO,gBACPC,GAAI,KACJjB,MAAOP,EAAyBO,MAAMG,aAG1Ce,WAAY,CACVC,IAAK,EACLG,KAAM,MAKdE,SAAWC,IACQ,aAAbA,EAAInB,MAENoB,QAAQC,IAAI,yBAAuBF,EAAIG,UACvCvC,EAAWW,MAAQyB,EAAIG,SAASC,SACvBJ,EAAInB,UA1CnBf,EAAkBS,MAAMiC,eAAiB5C,EAAWW,MAAMa,MACvDqB,GACQD,IAAmBC,EAAOZ,OAGrC7B,EAAyBO,MAAMkC,OAC7B3C,EAAkBS,MAAMiC,eAAeX,MA+C3C,MAAOU,GACPN,QAAQC,IAAIK,K,OAyEhBG,EAAAA,EAAAA,KAAU,KACRxC,O,kmECtTF,MAAMyC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,4vBCLA,MAAMA,EAAc,EAEpB,S,qXCCA,MAAMA,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,qKCmBQC,MAAM,OAAOjD,IAAI,U,GAUXiD,MAAM,mC,uBAWMA,MAAM,S,WACI,U,GAGJA,MAAM,O,6DAjDbC,EAAAA,QAAAA,EAAAA,EAAAA,OAAvBC,EAAAA,EAAAA,IAAoE,S,MAA5DC,IAAKC,EAAAA,GAAiBJ,MAAM,eAApC,QAAoDC,EAAAA,OAAK,EAAAI,KAAzD,gBACAC,EAAAA,EAAAA,GA+CM,OA9CJN,OAAK,SAAC,YAAW,cACOC,EAAAA,UAASM,UAAaH,EAAAA,kBAFhD,WAIEE,EAAAA,EAAAA,GAWE,S,qCAVSF,EAAAA,OAAMI,GACfC,KAAK,OACJC,KAAMN,EAAAA,GACPO,aAAa,MACZC,UAAO,mCAAgBR,EAAAA,OAAOA,EAAAA,SAAM,yBAA7B,kCACcA,EAAAA,OAAOA,EAAAA,SAAM,uBAD3B,yBAESA,EAAAA,OAAOS,QAAUT,EAAAA,UAAUA,EAAAA,KAAKS,OAAM,kBACtDC,QAAK,eAAEV,EAAAA,cAAcA,EAAAA,SACrBW,OAAK,2BAAuBX,EAAAA,kBAC5BY,YAAaf,EAAAA,aAVhB,kBACWG,EAAAA,UAYKH,EAAAA,UAAAA,EAAAA,EAAAA,OAAhBC,EAAAA,EAAAA,IAIW,Y,MAJee,GAAIb,EAAAA,IAA9B,gBACEF,EAAAA,EAAAA,IAESgB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFgBf,EAAAA,kBAAVgB,K,WAAflB,EAAAA,EAAAA,IAES,UAFmCmB,IAAKD,EAASzD,MAAOyD,IAAjE,QACKA,GAAM,EAAAE,MADX,OADF,uBAMAhB,EAAAA,EAAAA,GAoBK,KApBL,EAoBK,gBAnBHJ,EAAAA,EAAAA,IAkBKgB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAjBoBf,EAAAA,MAAI,CAAnBmB,EAAKC,M,WADftB,EAAAA,EAAAA,IAkBK,MAhBFmB,IAAKE,EACLvB,OAAK,S,UAA0BuB,IAAQnB,EAAAA,U,IAA2C,GAAhBA,EAAAA,UAAUS,O,CAAyBT,EAAAA,YAAS,KAHjH,EASEE,EAAAA,EAAAA,GAQO,OARP,EAQO,mBAPFiB,GAAM,IACT,IAAAjB,EAAAA,EAAAA,GAKU,UAJRG,KAAK,SACLT,MAAM,iCACLyB,QAAK,GAAErB,EAAAA,UAAUoB,GAClB,aAAW,SAJb,aAXJ,aADF,KAqBWvB,EAAAA,YAAAA,EAAAA,EAAAA,OAAXC,EAAAA,EAAAA,IAEM,MAFN,EAEM,EADJI,EAAAA,EAAAA,GAA8B,aAAAoB,EAAAA,EAAAA,IAArBtB,EAAAA,KAAKS,QAAM,GAChB,MAFN,gBA5CF,aAgDAP,EAAAA,EAAAA,GAAyE,QAAzE,EAA0C,0BAAuB,YAAlDF,EAAAA,kBAAkD,I,cAMnE,GACEuB,KAAM,WACNC,MAAO,CACLD,KAAM,CAAElB,KAAMoB,OAAQC,QAAS,IAC/BC,MAAO,CAAEtB,KAAMoB,OAAQC,QAAS,IAChCd,YAAa,CAAEP,KAAMoB,OAAQC,QAAS,eACtCE,WAAY,CAAEvB,KAAMwB,MAAOH,QAAS,IAAM,IAC1CI,QAAS,CAAEzB,KAAMwB,MAAOH,QAAS,IAAM,IACvCK,YAAa,CAAE1B,KAAM2B,QAASN,SAAS,GACvCO,UAAW,CAAE5B,KAAM2B,QAASN,SAAS,GACrCQ,aAAc,CAAE7B,KAAMoB,OAAQC,QAAS,SACvCS,WAAY,CAAE9B,KAAMoB,OAAQC,QAAS,sBACrCU,SAAU,CAAE/B,KAAMoB,OAAQC,QAAS,IACnCW,gBAAiB,CACfhC,KAAM,CAACoB,OAAQI,OACfH,QAAS,IAAM,GACfY,UAAYC,IACV,GAAkB,iBAAPA,EAAiB,OAAqB,GAAdA,EAAI9B,OACvC,IAAK,IAAI+B,EAAI,EAAGA,EAAID,EAAI9B,OAAQ+B,IAC9B,GAAqB,iBAAVD,EAAIC,IAAmC,GAAjBD,EAAIC,GAAG/B,OAAa,OAAO,EAE9D,OAAO,KAIbgC,MAAMjB,GAAO,KAAEkB,IAEb,MAAMC,GAAOhG,EAAAA,EAAAA,IAAI6E,EAAMI,YACjBgB,GAAYjG,EAAAA,EAAAA,IAAI6E,EAAMY,UACtBS,GAASlG,EAAAA,EAAAA,IAAI,IACbkE,EAAKiC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAC1CZ,EAAkB,IACnB,IAAIa,KAC4B,iBAAzB1B,EAAMa,gBACV,CAACb,EAAMa,iBACPb,EAAMa,iBACRc,QAAQC,GAAoB,GAAbA,EAAG3C,WAKlBN,GAAYxD,EAAAA,EAAAA,IAAI,MAChB0G,EAAmBlC,IACvBhB,EAAU5C,MAAQ4D,EAClBmC,YAAW,IAAOnD,EAAU5C,MAAQ,MAAO,KAC3CsF,EAAOtF,MAAQ,IAEXgG,GAAgB5G,EAAAA,EAAAA,KAAI,GAC1B,SAAS6G,IACPD,EAAchG,OAAQ,EACtB+F,YAAW,IAAOC,EAAchG,OAAQ,GAAQ,KAChD,IAAIkG,EAAIZ,EAAOtF,MACX8E,EAAgBqB,SAASD,EAAEE,OAAOF,EAAEhD,OAAS,MAC/CoC,EAAOtF,MAAQkG,EAAEG,OAAO,EAAGH,EAAEhD,OAAS,IAE1C,MAAMoD,EAAU1C,IACdA,EAAMA,EAAI2C,OACL3C,IAEAK,EAAMO,aAAgBP,EAAMM,QAAQ4B,SAASvC,GAM9CwB,EAAKpF,MAAMmG,SAASvC,GACtBkC,EAAgBlC,IAGlBwB,EAAKpF,MAAMwG,KAAK5C,GAChB0B,EAAOtF,MAAQ,IATbiG,MAWEQ,EAAiB7C,IAChBkB,GAA6C,GAA1BA,EAAgB5B,QACpC4B,EAAgBqB,SAASvC,EAAIwC,OAAOxC,EAAIV,OAAS,KACnDoD,EAAO1C,EAAIyC,OAAO,EAAGzC,EAAIV,OAAS,KAEhCwD,EAAa7C,IACjBuB,EAAKpF,MAAM2G,OAAO9C,EAAO,IAIrB+C,GAAcxH,EAAAA,EAAAA,IAAI,IAClByH,GAASzH,EAAAA,EAAAA,IAAI,MACb0H,EAAe,KAEnB,MAAMC,EAAe,GAGrBH,EAAY5G,MAAQ6G,EAAO7G,MAAMgH,YAAcD,EAE/CF,EAAO7G,MAAMiH,SAASJ,EAAO7G,MAAMkH,YAAa,GAEhD/B,EAAK,oBAAqBC,EAAKpF,SAEjCmH,EAAAA,EAAAA,IAAM/B,GAAM,KAAMgC,EAAAA,EAAAA,IAASN,IAAe,CAAEO,MAAM,KAClDlF,EAAAA,EAAAA,IAAU2E,GAGV,MAAMQ,GAAmBC,EAAAA,EAAAA,KAAS,MAC3BtD,EAAMM,SACJN,EAAMM,QAAQqB,QAAQnC,IAAY2B,EAAKpF,MAAMmG,SAAS1C,OAG/D,MAAO,CACL2B,KAAAA,EACAC,UAAAA,EACAC,OAAAA,EACAgB,OAAAA,EACAG,cAAAA,EACAC,UAAAA,EACAE,YAAAA,EACAC,OAAAA,EACAS,iBAAAA,EACAhE,GAAAA,EACAV,UAAAA,EACAoD,cAAAA,K,UCvKN,MAAM5D,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASoF,GAAQ,CAAC,YAAY,qBAEzF","sources":["webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-EquipmentLocation.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-EquipmentLocation.vue?e86c","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Input.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Section.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-TagInput.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-TagInput.vue?6968"],"sourcesContent":["<template>\r\n  <Section sectionTitle=\"Equipment Location\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Facility -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"facilityList\" class=\"form-label\">Facility</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"facilityListOptions\"\r\n          id=\"facilityList\"\r\n          placeholder=\"Select facility\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentLocation.selectedFacility.facility_name\"\r\n          @input=\"fetchFacility\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"facilityListOptions\">\r\n          <option\r\n            v-for=\"facility in facilityList\"\r\n            :key=\"facility.index\"\r\n            :value=\"facility.facility_name\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- Region -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"regionList\" class=\"form-label\">Region</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"regionListOptions\"\r\n          id=\"regionList\"\r\n          placeholder=\"Select region\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentLocation.selectedRegion.area\"\r\n          @input=\"fetchRegion\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"regionListOptions\">\r\n          <option\r\n            v-for=\"region in regionList\"\r\n            :key=\"region.index\"\r\n            :value=\"region.area\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- District -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"districtList\" class=\"form-label\">District</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"districtListOptions\"\r\n          id=\"districtList\"\r\n          placeholder=\"Select district\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentLocation.selectedDistrict.city\"\r\n          @input=\"fetchDistrict\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"rdistrictListOptions\">\r\n          <option\r\n            v-for=\"district in districtList\"\r\n            :key=\"district.index\"\r\n            :value=\"district.city\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- Department -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"departmentList\" class=\"form-label\">Department</label>\r\n        <select\r\n          id=\"departmentList\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"departmentId\"\r\n        >\r\n          <option selected>Select Department</option>\r\n        </select>\r\n      </div>\r\n      <!-- Location -->\r\n      <div class=\"col-lg-12 col-md-12\">\r\n        <UITagInput\r\n          v-model=\"EquipmentLocation.location\"\r\n          label=\"Location\"\r\n          customDelimiter=\",\"\r\n          placeholder=\"Enter Location Tag\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\nimport UITagInput from \"../BIOMD-UI/UI-TagInput.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst facilityList = ref(null);\r\nconst regionList = ref(null);\r\nconst districtList = ref(null);\r\n\r\nconst EquipmentLocation = inject(\"EquipmentLocation\");\r\nconst Global_Asset_Information = inject(\"Global_Asset_Information\");\r\nconst departmentId = inject(\"departmentId\");\r\n\r\nconst fetchFacility = async (event) => {\r\n  try {\r\n    const selectedFacility = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      EquipmentLocation.value.selectedFacility = facilityList.value.find(\r\n        (facility) => {\r\n          return selectedFacility === facility.facility_name;\r\n        }\r\n      );\r\n      Global_Asset_Information.value.facilityId =\r\n        EquipmentLocation.value.selectedFacility._id;\r\n      await fetchRegion();\r\n    } else {\r\n      Global_Asset_Information.value.facilityId = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Facility\",\r\n              queries: [\r\n                {\r\n                  field: \"facility_name\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                facility_name: 1,\r\n                country: 1,\r\n                area: 1,\r\n                city: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            facilityList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchRegion = async (event) => {\r\n  try {\r\n    const selectedRegion = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      EquipmentLocation.value.selectedRegion = regionList.value.find(\r\n        (region) => {\r\n          return selectedRegion === region.area;\r\n        }\r\n      );\r\n      Global_Asset_Information.value.region =\r\n        EquipmentLocation.value.selectedRegion.area;\r\n      // await fetchDistrict();\r\n    } else {\r\n      Global_Asset_Information.value.region = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Facility\",\r\n              queries: [\r\n                {\r\n                  field: \"facility_name\",\r\n                  op: \"sb\",\r\n                  value: Global_Asset_Information.value.facilityId,\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 0,\r\n                area: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            regionList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// const fetchDistrict = async (event) => {\r\n//   try {\r\n//     const selectedDistrict = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       EquipmentLocation.value.selectedDistrict = districtList.value.find(\r\n//         (district) => {\r\n//           return selectedDistrict === district.city;\r\n//         }\r\n//       );\r\n//       Global_Asset_Information.value.district =\r\n//         EquipmentLocation.value.selectedDistrict.city;\r\n//       // await fetchModel();\r\n//     } else {\r\n//       Global_Asset_Information.value.district = null;\r\n\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"MEMS\",\r\n//             ServiceCode: \"BIOMD\",\r\n//             API: \"FIND_RECORD\",\r\n//             return_array: true,\r\n//             max_list: 100,\r\n//             find: {\r\n//               collection: \"Facility\",\r\n//               queries: [\r\n//                 {\r\n//                   field: \"city\",\r\n//                   op: \"sb\",\r\n//                   value: \"^\",\r\n//                 },\r\n//               ],\r\n//               projection: {\r\n//                 _id: 0,\r\n//                 facility_name: 0,\r\n//                 country: 0,\r\n//                 area: 0,\r\n//                 city: 1,\r\n//               },\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             // Console the Response Packet\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             districtList.value = res.Response.records;\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-CREATE_RECORD-E001\";\r\n//               Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\nonMounted(() => {\r\n  fetchFacility();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-EquipmentLocation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-EquipmentLocation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-EquipmentLocation.vue?vue&type=style&index=0&id=06900024&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06900024\"]])\n\nexport default __exports__","import script from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Section.vue?vue&type=style&index=0&id=9468e16e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9468e16e\"]])\n\nexport default __exports__","// ui tag reference from https://github.com/mayank1513/tag-input\r\n\r\n<template>\r\n  <label :for=\"id\" v-if=\"label\" class=\"form-label\">{{ label }}</label>\r\n  <div\r\n    class=\"tag-input\"\r\n    :class=\"{ 'with-count': showCount, duplicate: noMatchingTag }\"\r\n  >\r\n    <input\r\n      v-model=\"newTag\"\r\n      type=\"text\"\r\n      :list=\"id\"\r\n      autocomplete=\"off\"\r\n      @keydown.prevent.enter=\"addTag(newTag)\"\r\n      @keydown.prevent.tab=\"addTag(newTag)\"\r\n      @keydown.delete=\"newTag.length || removeTag(tags.length - 1)\"\r\n      @input=\"addTagIfDelem(newTag)\"\r\n      :style=\"{ 'padding-left': `${paddingLeft}px` }\"\r\n      :placeholder=\"placeholder\"\r\n    />\r\n\r\n    <datalist v-if=\"options\" :id=\"id\">\r\n      <option v-for=\"option in availableOptions\" :key=\"option\" :value=\"option\">\r\n        {{ option }}\r\n      </option>\r\n    </datalist>\r\n\r\n    <ul class=\"tags\" ref=\"tagsUl\">\r\n      <li\r\n        v-for=\"(tag, index) in tags\"\r\n        :key=\"tag\"\r\n        :class=\"{\r\n          duplicate: tag === duplicate,\r\n          tag: tagsClass.length == 0,\r\n          [tagsClass]: true,\r\n        }\"\r\n      >\r\n        <span class=\"badge bg-secondary rounded-pill\">\r\n          {{ tag }}\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close btn-close-white ms-2\"\r\n            @click=\"removeTag(index)\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"showCount\" class=\"count\">\r\n      <span>{{ tags.length }}</span> tags\r\n    </div>\r\n  </div>\r\n  <small v-show=\"noMatchingTag\" class=\"err\">Custom tags not allowed</small>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, nextTick, onMounted, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"TagInput\",\r\n  props: {\r\n    name: { type: String, default: \"\" },\r\n    label: { type: String, default: \"\" },\r\n    placeholder: { type: String, default: \"Enter a tag\" },\r\n    modelValue: { type: Array, default: () => [] },\r\n    options: { type: Array, default: () => [] },\r\n    allowCustom: { type: Boolean, default: true },\r\n    showCount: { type: Boolean, default: false },\r\n    tagTextColor: { type: String, default: \"white\" },\r\n    tagBgColor: { type: String, default: \"rgb(250, 104, 104)\" },\r\n    tagClass: { type: String, default: \"\" },\r\n    customDelimiter: {\r\n      type: [String, Array],\r\n      default: () => [],\r\n      validator: (val) => {\r\n        if (typeof val == \"string\") return val.length == 1;\r\n        for (let i = 0; i < val.length; i++) {\r\n          if (typeof val[i] != \"string\" || val[i].length != 1) return false;\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    // Tags\r\n    const tags = ref(props.modelValue);\r\n    const tagsClass = ref(props.tagClass);\r\n    const newTag = ref(\"\");\r\n    const id = Math.random().toString(36).substring(7);\r\n    const customDelimiter = [\r\n      ...new Set(\r\n        (typeof props.customDelimiter == \"string\"\r\n          ? [props.customDelimiter]\r\n          : props.customDelimiter\r\n        ).filter((it) => it.length == 1)\r\n      ),\r\n    ];\r\n\r\n    // handling duplicates\r\n    const duplicate = ref(null);\r\n    const handleDuplicate = (tag) => {\r\n      duplicate.value = tag;\r\n      setTimeout(() => (duplicate.value = null), 1000);\r\n      newTag.value = \"\";\r\n    };\r\n    const noMatchingTag = ref(false);\r\n    function handleNoMatchingTag() {\r\n      noMatchingTag.value = true;\r\n      setTimeout(() => (noMatchingTag.value = false), 500);\r\n      let v = newTag.value;\r\n      if (customDelimiter.includes(v.charAt(v.length - 1)))\r\n        newTag.value = v.substr(0, v.length - 1);\r\n    }\r\n    const addTag = (tag) => {\r\n      tag = tag.trim();\r\n      if (!tag) return; // prevent empty tag\r\n      // only allow predefined tags when allowCustom is false\r\n      if (!props.allowCustom && !props.options.includes(tag)) {\r\n        //   display not a valid tag\r\n        handleNoMatchingTag();\r\n        return;\r\n      }\r\n      // return early if duplicate\r\n      if (tags.value.includes(tag)) {\r\n        handleDuplicate(tag);\r\n        return;\r\n      }\r\n      tags.value.push(tag);\r\n      newTag.value = \"\"; // reset newTag\r\n    };\r\n    const addTagIfDelem = (tag) => {\r\n      if (!customDelimiter || customDelimiter.length == 0) return;\r\n      if (customDelimiter.includes(tag.charAt(tag.length - 1)))\r\n        addTag(tag.substr(0, tag.length - 1));\r\n    };\r\n    const removeTag = (index) => {\r\n      tags.value.splice(index, 1);\r\n    };\r\n\r\n    // positioning and handling tag change\r\n    const paddingLeft = ref(10);\r\n    const tagsUl = ref(null);\r\n    const onTagsChange = () => {\r\n      // position cursor\r\n      const extraCushion = 15;\r\n      // tagsUl.value.style.setProperty(\"--tagBgColor\", props.tagBgColor);\r\n      // tagsUl.value.style.setProperty(\"--tagTextColor\", props.tagTextColor);\r\n      paddingLeft.value = tagsUl.value.clientWidth + extraCushion;\r\n      // scroll to end of tags\r\n      tagsUl.value.scrollTo(tagsUl.value.scrollWidth, 0);\r\n      // emit value on tags change\r\n      emit(\"update:modelValue\", tags.value);\r\n    };\r\n    watch(tags, () => nextTick(onTagsChange), { deep: true });\r\n    onMounted(onTagsChange);\r\n\r\n    // options\r\n    const availableOptions = computed(() => {\r\n      if (!props.options) return false;\r\n      return props.options.filter((option) => !tags.value.includes(option));\r\n    });\r\n\r\n    return {\r\n      tags,\r\n      tagsClass,\r\n      newTag,\r\n      addTag,\r\n      addTagIfDelem,\r\n      removeTag,\r\n      paddingLeft,\r\n      tagsUl,\r\n      availableOptions,\r\n      id,\r\n      duplicate,\r\n      noMatchingTag,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.tag-input {\r\n  position: relative;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 7px;\r\n  margin: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 10px;\r\n  max-width: 100%;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n}\r\n\r\nul::-webkit-scrollbar {\r\n  display: none; /* Safari and Chrome */\r\n}\r\n\r\n/* .tag {\r\n  background: rgb(94, 94, 94);\r\n  padding: 5px;\r\n  border-radius: 15px;\r\n  color: var(--tagTextColor);\r\n  white-space: nowrap;\r\n  transition: 0.1s ease background;\r\n  align-items: center;\r\n} */\r\n\r\n.btn-close {\r\n  box-shadow: none;\r\n}\r\n\r\n.tag.duplicate {\r\n  animation: shake 1s;\r\n}\r\n\r\n.duplicate input {\r\n  outline: rgb(40, 182, 229);\r\n  border: 1px solid rgb(235, 27, 27);\r\n  animation: shake1 0.5s;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n.count {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  right: 10px;\r\n  display: block;\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n}\r\n\r\n.count span {\r\n  background: #eee;\r\n  padding: 2px;\r\n  border-radius: 2px;\r\n}\r\n\r\n.with-count input {\r\n  padding-right: 60px;\r\n}\r\n\r\n.with-count ul {\r\n  max-width: 60%;\r\n}\r\n\r\n.err {\r\n  color: red;\r\n}\r\n\r\n@keyframes shake {\r\n  10%,\r\n  90% {\r\n    transform: scale(0.9) translate3d(-1px, 0, 0);\r\n  }\r\n  20%,\r\n  80% {\r\n    transform: scale(0.9) translate3d(2px, 0, 0);\r\n  }\r\n  30%,\r\n  50%,\r\n  70% {\r\n    transform: scale(0.9) translate3d(-4px, 0, 0);\r\n  }\r\n  40%,\r\n  60% {\r\n    transform: scale(0.9) translate3d(4px, 0, 0);\r\n  }\r\n}\r\n@keyframes shake1 {\r\n  10%,\r\n  90% {\r\n    transform: scale(0.99) translate3d(-1px, 0, 0);\r\n  }\r\n  20%,\r\n  80% {\r\n    transform: scale(0.98) translate3d(2px, 0, 0);\r\n  }\r\n  30%,\r\n  50%,\r\n  70% {\r\n    transform: scale(1) translate3d(-4px, 0, 0);\r\n  }\r\n  40%,\r\n  60% {\r\n    transform: scale(0.98) translate3d(4px, 0, 0);\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./UI-TagInput.vue?vue&type=template&id=095692d7&scoped=true\"\nimport script from \"./UI-TagInput.vue?vue&type=script&lang=js\"\nexport * from \"./UI-TagInput.vue?vue&type=script&lang=js\"\n\nimport \"./UI-TagInput.vue?vue&type=style&index=0&id=095692d7&scoped=true&lang=css\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-095692d7\"]])\n\nexport default __exports__"],"names":["store","useStore","sendSocketReq","request","dispatch","facilityList","ref","regionList","districtList","EquipmentLocation","inject","Global_Asset_Information","departmentId","fetchFacility","async","selectedFacility","event","target","value","InputEvent","inputType","facilityId","data","Expiry","Type","Request","Module","ServiceCode","API","return_array","max_list","find","collection","queries","field","op","projection","_id","facility_name","country","area","city","callback","res","console","log","Response","records","facility","fetchRegion","error","selectedRegion","region","onMounted","__exports__","class","$props","_createElementBlock","for","$setup","_hoisted_1","_createElementVNode","duplicate","$event","type","list","autocomplete","onKeydown","length","onInput","style","placeholder","id","_Fragment","_renderList","option","key","_hoisted_4","tag","index","onClick","_toDisplayString","name","props","String","default","label","modelValue","Array","options","allowCustom","Boolean","showCount","tagTextColor","tagBgColor","tagClass","customDelimiter","validator","val","i","setup","emit","tags","tagsClass","newTag","Math","random","toString","substring","Set","filter","it","handleDuplicate","setTimeout","noMatchingTag","handleNoMatchingTag","v","includes","charAt","substr","addTag","trim","push","addTagIfDelem","removeTag","splice","paddingLeft","tagsUl","onTagsChange","extraCushion","clientWidth","scrollTo","scrollWidth","watch","nextTick","deep","availableOptions","computed","render"],"sourceRoot":""}