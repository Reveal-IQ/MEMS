{"version":3,"file":"js/875.11960b52.js","mappings":"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","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AssetDetails.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AssetDetails.vue?d632","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Input.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Section.vue"],"sourcesContent":["<template>\r\n  <Section sectionTitle=\"Asset Details\">\r\n    <!-- Equipment Number -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        label=\"Equipment Number\"\r\n        type=\"text\"\r\n        id=\"assetCode\"\r\n        placeholder=\"Enter Equipment Number\"\r\n        v-model=\"AssetDetails.assetCode\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Parent Asset -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <div>\r\n        <label for=\"assetList\" class=\"form-label\">Parent Equipment</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"assetListOptions\"\r\n          id=\"assetList\"\r\n          placeholder=\"Select Parent Equipment\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"AssetDetails.selectedParentAsset.assetCode\"\r\n          @input=\"fetchParentAsset\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"assetListOptions\">\r\n          <option\r\n            v-for=\"asset in assetList\"\r\n            :key=\"asset.index\"\r\n            :value=\"asset.assetCode\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <div class=\"py-3 px-2\" v-if=\"AssetDetails.selectedParentAsset.assetCode\">\r\n        <span class=\"fw-bold\">Asset Profile</span>\r\n        <div class=\"d-flex flex-column gap-1\">\r\n          <div>\r\n            <span\r\n              >Manufacturer:\r\n              {{ AssetDetails.selectedParentAsset.manufacturerName }}</span\r\n            >\r\n          </div>\r\n          <div>\r\n            <span>Model: {{ AssetDetails.selectedParentAsset.modelName }}</span>\r\n          </div>\r\n\r\n          <div>\r\n            <span\r\n              >Serial Number:\r\n              {{ AssetDetails.selectedParentAsset.serialNumber }}</span\r\n            >\r\n          </div>\r\n          <div class=\"d-flex gap-3 align-items-center\">\r\n            <span>Status: </span>\r\n            <span class=\"badge rounded-pill bg-success\">{{\r\n              AssetDetails.selectedParentAsset.status\r\n            }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        label=\"Serial Number\"\r\n        type=\"text\"\r\n        id=\"serialNumber\"\r\n        placeholder=\"Enter Serial Number\"\r\n        v-model=\"AssetDetails.serialNumber\"\r\n      />\r\n    </div>\r\n    <!-- Manufacturer -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"manufacturerList\" class=\"form-label\">Manufacturer</label>\r\n      <input\r\n        class=\"form-control\"\r\n        list=\"manufacturerListOptions\"\r\n        id=\"manufacturerList\"\r\n        placeholder=\"Select Manufacturer\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetDetails.selectedManufacturer.manufacturerName\"\r\n        @input=\"fetchManufacturer\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <datalist id=\"manufacturerListOptions\">\r\n        <option\r\n          v-for=\"manufacturer in manufacturerList\"\r\n          :key=\"manufacturer.index\"\r\n          :value=\"manufacturer.manufacturerName\"\r\n        ></option>\r\n      </datalist>\r\n    </div>\r\n\r\n    <!-- Model Name -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <div>\r\n        <label for=\"modelList\" class=\"form-label\">Model</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"modelListOptions\"\r\n          id=\"modelList\"\r\n          placeholder=\"Select Model\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"AssetDetails.selectedModel.modelName\"\r\n          @input=\"fetchModel\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"modelListOptions\">\r\n          <option\r\n            v-for=\"model in modelList\"\r\n            :key=\"model.index\"\r\n            :value=\"model.modelName\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <div class=\"py-3 px-2\" v-if=\"AssetDetails.selectedModel.modelName\">\r\n        <span class=\"fw-bold\">Model Profile</span>\r\n        <div class=\"d-flex flex-column gap-1\">\r\n          <span>Common Name: {{ AssetDetails.selectedModel.commonName }}</span>\r\n          <span>UMDNS Code: {{ AssetDetails.selectedModel.UMDNSCode }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Year of Manufacture -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        label=\"Year of manufacture\"\r\n        type=\"date\"\r\n        id=\"yearOfManufacture\"\r\n        placeholder=\"Enter Year of manufacture\"\r\n        v-model=\"AssetDetails.manufactureDate\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"statusList\" class=\"form-label\">Status</label>\r\n      <select\r\n        id=\"statusList\"\r\n        class=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetDetails.status\"\r\n      >\r\n        <option\r\n          v-for=\"list in statusList\"\r\n          :key=\"list.value\"\r\n          :value=\"list.value\"\r\n          :selected=\"list.selected\"\r\n        >\r\n          {{ list.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst manufacturerList = ref(null);\r\nconst modelList = ref(null);\r\nconst assetList = ref(null);\r\n\r\nconst statusList = ref([\r\n  { name: \"Active Deployed\", value: \"Active Deployed\", selected: true },\r\n  { name: \"Active in Storage\", value: \"Active in Storage\" },\r\n  { name: \"Active in Service\", value: \"Active in Service\" },\r\n  { name: \"Storage Repairable\", value: \"Storage Repairable\" },\r\n  { name: \"Storage Parts\", value: \"Storage Parts\" },\r\n  { name: \"Disposed\", value: \"Disposed\" },\r\n]);\r\n\r\n// Inject Asset Information\r\nconst AssetDetails = inject(\"AssetDetails\");\r\nconst GlobalAssetInformation = inject(\"GlobalAssetInformation\");\r\n\r\nconst fetchManufacturer = async (event) => {\r\n  try {\r\n    const selectedManufacturer = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetDetails.value.selectedManufacturer = manufacturerList.value.find(\r\n        (manufacturer) => {\r\n          return selectedManufacturer === manufacturer.manufacturerName;\r\n        }\r\n      );\r\n      GlobalAssetInformation.value.manufacturerID =\r\n        AssetDetails.value.selectedManufacturer._id;\r\n      await fetchModel();\r\n    } else {\r\n      GlobalAssetInformation.value.manufacturerID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Manufacturer\",\r\n              queries: [\r\n                {\r\n                  field: \"manufacturerName\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                manufacturerName: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            manufacturerList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchModel = async (event) => {\r\n  try {\r\n    const selectedModel = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetDetails.value.selectedModel = modelList.value.find((model) => {\r\n        return selectedModel === model.modelName;\r\n      });\r\n      GlobalAssetInformation.value.modelID =\r\n        AssetDetails.value.selectedModel._id;\r\n    } else {\r\n      GlobalAssetInformation.value.modelID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Model\",\r\n              queries: [\r\n                {\r\n                  field: \"manufacturerID\",\r\n                  op: \"eq_id\",\r\n                  value: GlobalAssetInformation.value.manufacturerID,\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                modelName: 1,\r\n                commonName: 1,\r\n                UMDNSCode: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            modelList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchParentAsset = async (event) => {\r\n  try {\r\n    const selectedParentAsset = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetDetails.value.selectedParentAsset = assetList.value.find((asset) => {\r\n        return selectedParentAsset === asset.assetCode;\r\n      });\r\n      GlobalAssetInformation.value.parentAssetID =\r\n        AssetDetails.value.selectedParentAsset._id;\r\n    } else {\r\n      GlobalAssetInformation.value.parentAssetID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Asset\",\r\n              queries: [\r\n                {\r\n                  field: \"assetCode\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              lookups: [\r\n                {\r\n                  localField: \"modelID\",\r\n                  collection: \"Model\",\r\n                  foreignField: \"_id\",\r\n                  as: \"Model\",\r\n                },\r\n                {\r\n                  localField: \"manufacturerID\",\r\n                  collection: \"Manufacturer\",\r\n                  foreignField: \"_id\",\r\n                  as: \"Manufacturer\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                assetCode: 1,\r\n                status: 1,\r\n                serialNumber: 1,\r\n                modelName: \"$Model.modelName\",\r\n                manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            assetList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchManufacturer();\r\n  fetchParentAsset();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../BIOMD/BIOMD/Style/font-style.scss\";\r\n</style>\r\n","import script from \"./ASSET-AssetDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-AssetDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-AssetDetails.vue?vue&type=style&index=0&id=16b7251e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-16b7251e\"]])\n\nexport default __exports__","import script from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Section.vue?vue&type=style&index=0&id=cfc2dae0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cfc2dae0\"]])\n\nexport default __exports__"],"names":["store","useStore","sendSocketReq","request","dispatch","manufacturerList","ref","modelList","assetList","statusList","name","value","selected","AssetDetails","inject","GlobalAssetInformation","fetchManufacturer","async","selectedManufacturer","event","target","InputEvent","inputType","manufacturerID","data","Expiry","Type","Request","Module","ServiceCode","API","return_array","max_list","find","collection","queries","field","op","projection","_id","manufacturerName","callback","res","console","log","Response","records","manufacturer","fetchModel","error","selectedModel","modelID","modelName","commonName","UMDNSCode","model","fetchParentAsset","selectedParentAsset","parentAssetID","lookups","localField","foreignField","as","assetCode","status","serialNumber","asset","onMounted","__exports__"],"sourceRoot":""}