{"version":3,"file":"js/4636.90096c16.js","mappings":"kcAyHcA,EAAAA,EAAAA,MAAd,MACMC,GAAmBC,EAAAA,EAAAA,IAAO,qBACOA,EAAAA,EAAAA,IAAO,mCAC1BC,EAAAA,EAAAA,IAAI,OACNA,EAAAA,EAAAA,IAAI,OACDA,EAAAA,EAAAA,IAAI,M,OAgMzBC,EAAAA,EAAAA,KAAU,S,+bCxTV,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,4vBCLA,MAAMA,EAAc,EAEpB,S,+XCCA,MAAMA,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MANUFACTURER/MANUFACTURER-ManufacturerInformation.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MANUFACTURER/MANUFACTURER-ManufacturerInformation.vue?76a9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Input.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Section.vue"],"sourcesContent":["<template>\r\n  <main>\r\n    <!-- The main form -->\r\n    <Section sectionTitle=\"Manufacturer Information\">\r\n      <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 g-3\">\r\n        <!-- Manufacturer Name -->\r\n        <div class=\"col\">\r\n          <Input\r\n            label=\"Manufacturer Name\"\r\n            type=\"text\"\r\n            v-model=\"manufacturerInfo.manufacturerName\"\r\n            id=\"manufacturerName\"\r\n            placeholder=\"Enter Manufacturer Name\"\r\n          />\r\n        </div>\r\n        <!-- Country -->\r\n        <!-- <div class=\"col\">\r\n          <label for=\"countryList\" class=\"form-label\">Country</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"countryOptions\"\r\n            id=\"countryList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"manufacturerInfo.selectedCountry.Loci_Name_Country\"\r\n            @input=\"fetchCountry\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"countryOptions\">\r\n            <option\r\n              v-for=\"country in countryList\"\r\n              :key=\"country.index\"\r\n              :value=\"country.Loci_Name_Country\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n\r\n        <!-- Province/State/Region -->\r\n        <!-- <div class=\"col\">\r\n          <label for=\"stateList\" class=\"form-label\"\r\n            >Province/State/Region</label\r\n          >\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"stateOptions\"\r\n            id=\"stateList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"manufacturerInfo.selectedState.Loci_Name_State\"\r\n            @input=\"fetchState\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"stateOptions\">\r\n            <option\r\n              v-for=\"state in stateList\"\r\n              :key=\"state.index\"\r\n              :value=\"state.Loci_Name_State\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n\r\n        <!-- City/District -->\r\n        <!-- <div class=\"col\">\r\n          <label for=\"districtList\" class=\"form-label\">District</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"districtOptions\"\r\n            id=\"districtList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"manufacturerInfo.selectedDistrict.Loci_Name_Area_L1\"\r\n            @input=\"fetchDistrict\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"districtOptions\">\r\n            <option\r\n              v-for=\"district in districtList\"\r\n              :key=\"district.index\"\r\n              :value=\"district.Loci_Name_Area_L1\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n      </div>\r\n      <div class=\"row g-3 mt-3\">\r\n        <!-- Street Address 1 -->\r\n        <!-- <div class=\"col-12\">\r\n          <Input\r\n            label=\"Street Address 1\"\r\n            type=\"text\"\r\n            v-model=\"manufacturerInfo.streetAddress1\"\r\n            id=\"street1\"\r\n            placeholder=\"Enter Street Address 1\"\r\n          />\r\n        </div> -->\r\n        <!-- Street Address 2 -->\r\n        <!-- <div class=\"col-12\">\r\n          <Input\r\n            label=\"Street Address 2\"\r\n            type=\"text\"\r\n            v-model=\"manufacturerInfo.streetAddress2\"\r\n            id=\"street2\"\r\n            placeholder=\"Enter Street Address 2\"\r\n          />\r\n        </div> -->\r\n        <!-- Zip / Postal Code -->\r\n        <!-- <div class=\"col-lg-3\">\r\n          <Input\r\n            label=\"Zip/Postal Code\"\r\n            type=\"number\"\r\n            v-model=\"manufacturerInfo.zipCode\"\r\n            id=\"zip\"\r\n            placeholder=\"Enter Zip/Postal Code\"\r\n          />\r\n        </div> -->\r\n      </div>\r\n    </Section>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, ref, onMounted, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\nconst store = useStore();\r\nconst manufacturerInfo = inject(\"manufacturerInfo\");\r\nconst Global_Manufacturer_Definition = inject(\"Global_Manufacturer_Definition\");\r\nconst countryList = ref(null);\r\nconst stateList = ref(null);\r\nconst districtList = ref(null);\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\n// const fetchCountry = async (event) => {\r\n//   try {\r\n//     const selectedCountry = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n//       manufacturerInfo.value.selectedCountry = countryList.value.find(\r\n//         (country) => {\r\n//           return selectedCountry === country.Loci_Name_Country;\r\n//         }\r\n//       );\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.Country =\r\n//         manufacturerInfo.value.selectedCountry.Loci_Code_Country;\r\n//       // validateInput(\"Country\");\r\n//       await fetchState();\r\n//     } else {\r\n//       // Clear Country, State, District, Mandal, Postal Code\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.Country = null;\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.State = null;\r\n//       manufacturerInfo.value.selectedState = {\r\n//         Loci_Name_Country: null,\r\n//         Loci_Code_Country: null,\r\n//       };\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District = null;\r\n//       manufacturerInfo.value.selectedDistrict = {\r\n//         Loci_Name_Area_L1: null,\r\n//         Loci_Code_Area_L1: null,\r\n//       };\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"GLOBAL\",\r\n//             ServiceCode: \"GLOBL\",\r\n//             API: \"GET_GEO_LIST\",\r\n//             Max_List: 500,\r\n//             Criteria: {\r\n//               Type_Code: \"CNTY\",\r\n//               Loci_Name_Country: \"\",\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             countryList.value = res.Response.Country_List; //Assigning response values to getValues Object\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-GET_GEO_LIST-E001\";\r\n//               Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n// const fetchState = async (event) => {\r\n//   try {\r\n//     const selectedState = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n//       manufacturerInfo.value.selectedState = stateList.value.find((state) => {\r\n//         return selectedState === state.Loci_Name_State;\r\n//       });\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.State =\r\n//         manufacturerInfo.value.selectedState.Loci_Code_State;\r\n//       // validateInput(\"Country\");\r\n//       await fetchDistrict();\r\n//     } else {\r\n//       // Clear Country, State, District, Mandal, Postal Code\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.State = null;\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District = null;\r\n//       manufacturerInfo.value.selectedDistrict = {\r\n//         Loci_Name_Area_L1: null,\r\n//         Loci_Code_Area_L1: null,\r\n//       };\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"GLOBAL\",\r\n//             ServiceCode: \"GLOBL\",\r\n//             API: \"GET_GEO_LIST\",\r\n//             Max_List: 500,\r\n//             Criteria: {\r\n//               Type_Code: \"STATE\",\r\n//               Loci_Code_Country:\r\n//                 Global_Manufacturer_Definition.value.manufacturerAddress\r\n//                   .Country,\r\n//               Loci_Name_State: \"\",\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             stateList.value = res.Response.State_List; //Assigning response values to getValues Object\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-GET_GEO_LIST-E001\";\r\n//               Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\n// const fetchDistrict = async (event) => {\r\n//   try {\r\n//     const selectedDistrict = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n//       manufacturerInfo.value.selectedDistrict = districtList.value.find(\r\n//         (state) => {\r\n//           return selectedDistrict === state.Loci_Name_Area_L1;\r\n//         }\r\n//       );\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District =\r\n//         manufacturerInfo.value.selectedDistrict.Loci_Code_Area_L1;\r\n//       // validateInput(\"Country\");\r\n//       // await fetchState();\r\n//     } else {\r\n//       // Clear Country, State, District, Mandal, Postal Code\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District = null;\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"GLOBAL\",\r\n//             ServiceCode: \"GLOBL\",\r\n//             API: \"GET_GEO_LIST\",\r\n//             Max_List: 500,\r\n//             Criteria: {\r\n//               Type_Code: \"ARL1\",\r\n//               Loci_Code_Country:\r\n//                 Global_Manufacturer_Definition.value.manufacturerAddress\r\n//                   .Country,\r\n//               Loci_Code_State:\r\n//                 Global_Manufacturer_Definition.value.manufacturerAddress.State,\r\n//               Loci_Name_District: \"\",\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             districtList.value = res.Response.ARL1_List; //Assigning response values to getValues Object\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-GET_GEO_LIST-E001\";\r\n//               Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\nonMounted(() => {\r\n  // fetchCountry();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./MANUFACTURER-ManufacturerInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MANUFACTURER-ManufacturerInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MANUFACTURER-ManufacturerInformation.vue?vue&type=style&index=0&id=32567c96&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-32567c96\"]])\n\nexport default __exports__","import script from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Section.vue?vue&type=style&index=0&id=cfc2dae0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cfc2dae0\"]])\n\nexport default __exports__"],"names":["useStore","manufacturerInfo","inject","ref","onMounted","__exports__"],"sourceRoot":""}