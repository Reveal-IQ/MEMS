{"version":3,"file":"js/6672.afbf0b73.js","mappings":"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","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DEPARTMENT/DEPARTMENT.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-FACILITY/FACILITY.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MANUFACTURER/MANUFACTURER.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD-AssetDetail.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD-AssetDetail.vue?034e","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD-ManufacturerProfile.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD-ManufacturerProfile.vue?80a4","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD-Model.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DASHBOARD/DASHBOARD-Model.vue?74ce","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DEPARTMENT/DEPARTMENT-DepartmentDescription.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DEPARTMENT/DEPARTMENT-DepartmentDescription.vue?1886","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-DEPARTMENT/DEPARTMENT.vue?ed0e","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-FACILITY/FACILITY-SiteDescription.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-FACILITY/FACILITY-SiteDescription.vue?7a8a","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-FACILITY/FACILITY.vue?c28f","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MANUFACTURER/MANUFACTURER-ManufacturerInformation.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MANUFACTURER/MANUFACTURER-ManufacturerInformation.vue?76a9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MANUFACTURER/MANUFACTURER.vue?c3d4","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL-ModelDescription.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL-ModelDescription.vue?c5a9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL.vue?886d","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-AnnualInflow.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-AnnualInflow.vue?04d2","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-Functionality.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-Functionality.vue?e508","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-List.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-List.vue?5d4b","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-Summary1.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-Summary1.vue?6f12","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-Summary2.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS-Summary2.vue?871f","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS.vue?3de5","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Landing.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Landing.vue?5f48","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-ReportList.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-StatCard.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-SuccessPage.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-SuccessPage.vue?a523","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD.vue?1945"],"sourcesContent":["<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : < 03-Sep-2022 >    \r\nVersion    : < 0.0.1 >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"Facility Department\"\r\n            subTitle=\"Create a new department with this form\"\r\n          />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"changePage('siteDescription')\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <DepartmentDescription />\r\n\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Department\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              @click=\"createRecord\"\r\n            />\r\n\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\";\r\nimport { ref, computed, provide } from \"vue\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\nimport DepartmentDescription from \"../BIOMD-DEPARTMENT/DEPARTMENT-DepartmentDescription.vue\";\r\nimport { DepartmentRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nexport default {\r\n  components: { DepartmentDescription, Btn2, Btn, Header },\r\n  name: \"department\",\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n\r\n    const DepartmentDescription = ref({\r\n      departmentName: null,\r\n      shortName: null,\r\n      selectedFacility: { facilityName: null, _id: null },\r\n    });\r\n\r\n    const GlobalDepartmentInformation = ref({\r\n      facilityID: null,\r\n    });\r\n\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n\r\n    const changePage = async (page) => {\r\n      emit(\"updatePage\", page);\r\n    };\r\n\r\n    function createRecord() {\r\n      // send Request as below .\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Department\",\r\n            record: new DepartmentRecord({\r\n              facilityID: GlobalDepartmentInformation.value.facilityID,\r\n              departmentName: DepartmentDescription.value.departmentName,\r\n              shortName: DepartmentDescription.value.shortName,\r\n            }).serialize(),\r\n            Institute_Code: Institute_Code.value,\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            changePage(\"success\");\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            // getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"dashboard\");\r\n    };\r\n\r\n    provide(\"DepartmentDescription\", DepartmentDescription);\r\n    provide(\"GlobalDepartmentInformation\", GlobalDepartmentInformation);\r\n\r\n    return {\r\n      goBack,\r\n      redirectToPage,\r\n      createRecord,\r\n      changePage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : < 03-Sep-2022 >    \r\nVersion    : < 0.0.1 >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"New Facility\"\r\n            subTitle=\"Create a new facility with this form\"\r\n          />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"changePage('siteDescription')\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <FacilityInformation />\r\n\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Facility\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              @click=\"createRecord()\"\r\n            />\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\"; // Access Vuew Store Variables and Methods\r\nimport { ref, toRefs, provide, computed } from \"vue\";\r\nimport FacilityInformation from \"./FACILITY-FacilityInformation.vue\"; // Based on the requirement import keywords\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\nimport { FacilityRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nexport default {\r\n  name: \"manufacturer\",\r\n  // Define Props here\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  // Emit value can pass within this array\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const { props_variable } = toRefs(props); // include variables from the props with help of toRefs\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n    const facilityInfo = ref({\r\n      facilityName: null,\r\n      selectedCountry: { Loci_Name_Country: null, Loci_Code_Country: null },\r\n      selectedState: { Loci_Name_State: null, Loci_Code_State: null },\r\n      selectedDistrict: {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      },\r\n      streetAddress1: null,\r\n      streetAddress2: null,\r\n      zipCode: null,\r\n      departments: [],\r\n    });\r\n\r\n    const GlobalFacilityDefinition = ref({\r\n      facilityAddress: {\r\n        Country: null,\r\n        State: null,\r\n        District: null,\r\n      },\r\n    });\r\n    const changePage = (page) => {\r\n      emit(\"updatePage\", page);\r\n    };\r\n    // send Socket Request use to send rrequest packet for an API\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n    // Function to Send Request and Get Response by this template code .\r\n    function createRecord() {\r\n      // send Request as below .\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Facility\",\r\n            record: new FacilityRecord({\r\n              facilityName: facilityInfo.value.facilityName,\r\n              country: GlobalFacilityDefinition.value.facilityAddress.Country,\r\n              area: GlobalFacilityDefinition.value.facilityAddress.State,\r\n              city: GlobalFacilityDefinition.value.facilityAddress.District,\r\n              address_1: facilityInfo.value.streetAddress1,\r\n              address_2: facilityInfo.value.streetAddress2,\r\n              areaCode: facilityInfo.value.zipCode,\r\n            }).serialize(),\r\n            Institute_Code: Institute_Code.value, //Dynamically changes when another institute logged in\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            changePage(\"success\");\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"dashboard\");\r\n    };\r\n\r\n    provide(\"facilityInfo\", facilityInfo);\r\n    provide(\"GlobalFacilityDefinition\", GlobalFacilityDefinition);\r\n\r\n    return {\r\n      goBack,\r\n      redirectToPage,\r\n      createRecord,\r\n      changePage,\r\n    };\r\n  },\r\n  components: { FacilityInformation, Btn2, Btn, Header },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : 03-Sep-2022\r\nVersion    : 0.0.2   \r\nDescription: Describe the application\r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"New Manufacturer\"\r\n            subTitle=\"Create new manufacturer with this form\"\r\n          />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"goBack\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <ManufacturerInformation />\r\n\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <!-- btn-green and a-link are custom css for MEMS check base.css -->\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Manufacturer\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              @click=\"createRecord()\"\r\n            />\r\n\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\";\r\nimport { ref, toRefs, provide, computed } from \"vue\";\r\n\r\nimport ManufacturerInformation from \"./MANUFACTURER-ManufacturerInformation.vue\";\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\nimport { ManufacturerRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nexport default {\r\n  name: \"manufacturer\",\r\n  // Define Props here\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  // Emit value can pass within this array\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const { props_variable } = toRefs(props); // include variables from the props with help of toRefs\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const manufacturerInfo = ref({\r\n      manufacturerName: null\r\n    });\r\n\r\n    const Global_Manufacturer_Definition = ref({\r\n      manufacturerAddress: {\r\n        Country: null,\r\n        State: null,\r\n        District: null,\r\n      },\r\n    });\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n\r\n    const changePage = (page) => {\r\n      emit(\"updatePage\", page);\r\n    };\r\n    // send Socket Request use to send rrequest packet for an API\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n\r\n    // Function to Send Request and Get Response by this template code .\r\n    function createRecord() {\r\n      // send Request as below .\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Manufacturer\",\r\n            record: new ManufacturerRecord({\r\n              manufacturerName: manufacturerInfo.value.manufacturerName\r\n            }).serialize(),\r\n            Institute_Code: Institute_Code.value, //Dynamically changes when another institute logged in\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            changePage(\"success\");\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"dashboard\");\r\n    };\r\n\r\n    provide(\"manufacturerInfo\", manufacturerInfo);\r\n    provide(\"Global_Manufacturer_Definition\", Global_Manufacturer_Definition);\r\n\r\n    return {\r\n      goBack,\r\n      redirectToPage,\r\n      createRecord,\r\n      changePage,\r\n    };\r\n  },\r\n  components: { ManufacturerInformation, Btn2, Btn, Header },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\">\r\n        <div class=\"mt-3\">\r\n          <Header title=\"Add Model\" :subTitle=\"subTitle\" />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2 BtnName=\"Return\" :icon=\"'arrow-left'\" backgroundColor=\"none\" @click=\"changePage('dashboard')\"\r\n            class=\"text-secondary btn-sm\" />\r\n\r\n          <Btn2 BtnName=\"Dashboard\" backgroundColor=\"#2A94B6\" @click=\"goBack\" class=\"text-light btn-sm\" />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <ModelDescription :manufacturerName=\"manufacturerName\" :manufacturerID=\"manufacturerID\" />\r\n\r\n\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn BtnName=\"Create Model\" backgroundColor=\"#27AE60\" class=\"mb-3\" @click=\"createRecord\" />\r\n\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from \"vuex\";\r\nimport { ref, computed, provide, onMounted } from \"vue\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\nimport ModelDescription from \"./MODEL-ModelDescription.vue\"\r\nimport { ModelRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\nconst Institute_Code = computed(\r\n  () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n);\r\n\r\nconst { manufacturerName, manufacturerID } = defineProps({\r\n  manufacturerName: {\r\n    type: String,\r\n  },\r\n  manufacturerID: {\r\n    type: String,\r\n  },\r\n})\r\nconsole.log(\"Manufacturer Name in MODEL.vue:\");\r\n\r\nconst ModelDesc = ref({\r\n  modelName: null,\r\n  deviceDescription: null,\r\n  commonName: null,\r\n  selectedManufacturer: {\r\n    manufacturerName: null,\r\n    _id: null,\r\n  },\r\n})\r\n\r\nconst GlobalModelInformation = ref({\r\n  manufacturerID: null,\r\n})\r\n\r\nfunction createRecord() {\r\n  // send Request as below .\r\n  sendSocketReq({\r\n    data: {\r\n      Expiry: 20000,\r\n      Type: \"REQUEST\",\r\n      Request: {\r\n        Module: \"MEMS\",\r\n        ServiceCode: \"BIOMD\",\r\n        API: \"CREATE_RECORD\",\r\n        collection: \"Model\",\r\n        record: new ModelRecord({\r\n          manufacturerID: GlobalModelInformation.value.manufacturerID,\r\n          modelName: ModelDesc.value.modelName,\r\n          deviceDescription: ModelDesc.value.deviceDescription,\r\n          commonName: ModelDesc.value.commonName\r\n        }).serialize(),\r\n        Institute_Code: Institute_Code.value,\r\n      },\r\n    },\r\n    callback: (res) => {\r\n      if (res.Type === \"RESPONSE\") {\r\n        changePage(\"success\");\r\n\r\n        console.log(\"Response Packet -->\", res.Response);\r\n        // getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n      } else if (res.Type === \"ERROR\") {\r\n        // Error response received during fetching\r\n        Type: \"ERROR\";\r\n        Response: {\r\n          Error_Code: \"API-CREATE_RECORD-E001\";\r\n          Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n        }\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\n\r\nconst subTitle = computed(() => `Create a new model for ${manufacturerName}`);\r\nprovide(\"ModelDesc\", ModelDesc);\r\nprovide(\"GlobalModelInformation\", GlobalModelInformation);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>","<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang          \r\nDate       : < DD-MON-YYYY >    \r\nVersion    : < #.#.# >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div v-if=\"compState === 'dashboard'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <DASHBOARD @update-page=\"updatePage\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-if=\"compState === 'dashboardModel'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <DASHBOARDModel @update-page=\"updatePage\" :modelName=\"pageProps.modelName\"\r\n          :manufacturerID=\"pageProps.manufacturerID\" :commonName=\"pageProps.commonName\" :modelID=\"pageProps.modelID\"\r\n          :manufacturerName=\"pageProps.manufacturerName\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-if=\"compState === 'dashboardAssetDetail'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <DASHBOARDAssetDetail @update-page=\"updatePage\" :assetCode=\"pageProps.assetCode\" :status=\"pageProps.status\"\r\n          :modelName=\"pageProps.modelName\" :parentAssetID=\"pageProps.parentAssetID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'dashboardManufacturerProfile'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <DASHBOARDManufacturerProfile @update-page=\"updatePage\" :manufacturerName=\"pageProps.manufacturerName\"\r\n          :manufacturer=\"pageProps.manufacturer\" :manufacturerID=\"pageProps.manufacturerID\"\r\n          :vendorName=\"pageProps.vendorName\" :vendorID=\"pageProps.vendorID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'reportsPage'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <REPORTS @update-page=\"updatePage\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'reportsList'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <REPORTSList @update-page=\"updatePage\" :facilityName=\"pageProps.facilityName\"\r\n          :facilityID=\"pageProps.facilityID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'reportsSummary1'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <REPORTSSummary1 @update-page=\"updatePage\" :facilityName=\"pageProps.facilityName\"\r\n          :facilityID=\"pageProps.facilityID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'reportsSummary2'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <REPORTSSummary2 @update-page=\"updatePage\" :facilityName=\"pageProps.facilityName\"\r\n          :facilityID=\"pageProps.facilityID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'functionalityIndex'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <REPORTSFunctionality @update-page=\"updatePage\" :facilityName=\"pageProps.facilityName\"\r\n          :facilityID=\"pageProps.facilityID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-if=\"compState === 'annualInflow'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <REPORTSAnnualInflow @update-page=\"updatePage\" :facilityName=\"pageProps.facilityName\"\r\n          :facilityID=\"pageProps.facilityID\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-if=\"compState === 'siteDescription'\" class=\"RevealContainer_dash\">\r\n    <div class=\"container\">\r\n      <!-- Welcome Variable Rendering with Mustatsh syntax. Variable is databinded -->\r\n      <div class=\"row\">\r\n        <FACILITYSiteDescription @update-page=\"updatePage\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-else class=\"RevealContainer\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"row\">\r\n          <div>\r\n            <ASSET v-if=\"compState === 'assetInfo'\" @update-page=\"updatePage\" />\r\n            <FACILITY v-else-if=\"compState === 'facilityInfo'\" @update-page=\"updatePage\" />\r\n            <DEPARTMENT v-else-if=\"compState === 'departmentInfo'\" @update-page=\"updatePage\" />\r\n            <VENDOR v-else-if=\"compState === 'vendorInfo'\" @update-page=\"updatePage\" />\r\n            <MANUFACTURER v-else-if=\"compState === 'manufacturerInfo'\" @update-page=\"updatePage\" />\r\n            <MODEL v-else-if=\"compState === 'modelInfo'\" @update-page=\"updatePage\"\r\n              :manufacturerID=\"pageProps.manufacturerID\" :manufacturerName=\"pageProps.manufacturerName\" />\r\n            <SuccessPage v-else=\"compState === 'success'\" @update-page=\"updatePage\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { useStore } from \"vuex\"; // Access Vuew Store Variables and Methods\r\nimport { ref } from \"vue\"; // Based on the requirement import keywords\r\n\r\nimport ASSET from \"../BIOMD/BIOMD-ASSET/ASSET.vue\";\r\nimport FACILITY from \"../BIOMD/BIOMD-FACILITY/FACILITY.vue\";\r\nimport FACILITYSiteDescription from \"../BIOMD/BIOMD-FACILITY/FACILITY-SiteDescription.vue\";\r\nimport VENDOR from \"../BIOMD/BIOMD-VENDOR/VENDOR.vue\";\r\nimport MODEL from \"../BIOMD/BIOMD-MODEL/MODEL.vue\";\r\nimport MANUFACTURER from \"../BIOMD/BIOMD-MANUFACTURER/MANUFACTURER.vue\";\r\nimport DASHBOARD from \"../BIOMD/BIOMD-DASHBOARD/DASHBOARD.vue\";\r\nimport REPORTS from \"../BIOMD/BIOMD-REPORTS/REPORTS.vue\";\r\nimport REPORTSList from \"../BIOMD/BIOMD-REPORTS/REPORTS-List.vue\";\r\nimport REPORTSSummary1 from \"../BIOMD/BIOMD-REPORTS/REPORTS-Summary1.vue\";\r\nimport REPORTSSummary2 from \"../BIOMD/BIOMD-REPORTS/REPORTS-Summary2.vue\";\r\nimport REPORTSFunctionality from \"../BIOMD/BIOMD-REPORTS/REPORTS-Functionality.vue\";\r\nimport REPORTSAnnualInflow from \"../BIOMD/BIOMD-REPORTS/REPORTS-AnnualInflow.vue\";\r\nimport Landing from \"../BIOMD/BIOMD-UI/UI-Landing.vue\";\r\nimport SuccessPage from \"../BIOMD/BIOMD-UI/UI-SuccessPage.vue\";\r\nimport DASHBOARDModel from \"./BIOMD-DASHBOARD/DASHBOARD-Model.vue\";\r\nimport DASHBOARDAssetDetail from \"./BIOMD-DASHBOARD/DASHBOARD-AssetDetail.vue\";\r\nimport DASHBOARDManufacturerProfile from \"./BIOMD-DASHBOARD/DASHBOARD-ManufacturerProfile.vue\";\r\nimport DEPARTMENT from \"./BIOMD-DEPARTMENT/DEPARTMENT.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    ASSET,\r\n    FACILITY,\r\n    FACILITYSiteDescription,\r\n    VENDOR,\r\n    MODEL,\r\n    DEPARTMENT,\r\n    MANUFACTURER,\r\n    DASHBOARD,\r\n    REPORTS,\r\n    REPORTSList,\r\n    REPORTSSummary1,\r\n    REPORTSSummary2,\r\n    REPORTSFunctionality,\r\n    REPORTSAnnualInflow,\r\n    Landing,\r\n    SuccessPage,\r\n    DASHBOARDModel,\r\n    DASHBOARDAssetDetail,\r\n    DASHBOARDManufacturerProfile,\r\n  },\r\n  name: \"BIOMD\",\r\n  // Define Props here\r\n  props: {},\r\n  // Emit value can pass within this array\r\n  emits: [],\r\n  setup(props, { emit }) {\r\n    const compState = ref(\"dashboard\"); //asset, facility, model, manufacturer, vendor\r\n    const pageProps = ref(\"init\");\r\n\r\n    const updatePage = (page, props) => {\r\n      compState.value = page;\r\n      pageProps.value = props;\r\n    };\r\n\r\n    return {\r\n      // Return variables/Display Variables in HTML DOM\r\n      compState,\r\n      updatePage,\r\n      pageProps,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../GLOBAL/Styles/colors.scss\";\r\n@import \"./Style/BIOMD.scss\";\r\n\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  background-color: $InvisibleSilver;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer_dash {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  background-color: $White;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.RevealContainer_dash::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('dashboard')\"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <div>\r\n        <span class=\"title text-dark fw-normal fs-1\">{{\r\n          props.assetCode\r\n        }}</span>\r\n      </div>\r\n      <div>\r\n        <span class=\"badge rounded-pill bg-success fsXs text-uppercase\">{{\r\n          props.status\r\n        }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row p-2 mt-4 mb-5\" v-for=\"asset in assetProfile\" :key=\"asset\">\r\n      <div class=\"col-md-5\">\r\n        <div class=\"mb-5\">\r\n          <div class=\"\">\r\n            <span class=\"card-title fw-normal fs-5\">Profile</span>\r\n            <p class=\"card-text\">\r\n              <small class=\"text-muted fsXs\"\r\n                >Detailed equipment description</small\r\n              >\r\n            </p>\r\n          </div>\r\n          <div\r\n            class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Equipment Number</small>\r\n                  <small class=\"fw-normal\">{{ asset.assetCode }}</small>\r\n                </div>\r\n              </td>\r\n              <td v-if=\"parentAssetProfile == 0\">\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Parent Name</small>\r\n                  <small class=\"text-muted\">\r\n                    No Parent Equipment Assigned\r\n                  </small>\r\n                </div>\r\n              </td>\r\n              <td v-else>\r\n                <div\r\n                  class=\"d-flex flex-column\"\r\n                  v-for=\"parent in parentAssetProfile\"\r\n                >\r\n                  <small class=\"text-secondary fsXs\">Parent Name</small>\r\n                  <small\r\n                    >{{ parent.parentAssetCode }} |\r\n                    {{ parent.parentModelName }} |\r\n                    {{ parent.parentManufaturerName }}\r\n                  </small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Serial Number</small>\r\n                  <small>{{ asset.serialNumber }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Manufacturer</small>\r\n                  <small>{{ asset.manufacturerName }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Model</small>\r\n                  <small>{{ asset.modelName }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Year of Manufacture</small>\r\n                  <small>{{ asset.manufactureDate }}</small>\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-5\">\r\n          <div>\r\n            <span class=\"card-title fw-normal fs-5\">Location</span>\r\n            <p class=\"card-text\">\r\n              <small class=\"text-muted fsXs\">Physical asset location</small>\r\n            </p>\r\n          </div>\r\n          <div\r\n            class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Facility</small>\r\n                  <small class=\"fw-normal\">{{ asset.facilityName }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Department</small>\r\n                  <small>ICU</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Location</small>\r\n                  <small>{{ asset.locationName }}</small>\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-5\">\r\n          <div>\r\n            <span class=\"card-title fw-normal fs-5\">Maintenance</span>\r\n            <p class=\"card-text\">\r\n              <small class=\"text-muted fsXs\">Assigned support teams</small>\r\n            </p>\r\n          </div>\r\n          <div\r\n            class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\"\r\n                    >Assigned Clinical Engineer</small\r\n                  >\r\n                  <small class=\"fw-normal\">John Doe</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\"\r\n                    >Assigned Support Team</small\r\n                  >\r\n                  <small>Life Support Team</small>\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"mb-5\">\r\n          <div>\r\n            <span class=\"card-title fw-normal fs-5\">Purchase Order</span>\r\n            <p class=\"card-text\">\r\n              <small class=\"text-muted fsXs\">PO Details</small>\r\n            </p>\r\n          </div>\r\n          <div\r\n            class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">PO Number</small>\r\n                  <small class=\"fw-normal\">CIP-23234</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Acceptance Date</small>\r\n                  <small>12-Jun-22</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Vendor</small>\r\n                  <small>Ghana Medical Help</small>\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n        <div class=\"mb-5\">\r\n          <div>\r\n            <span class=\"card-title fw-normal fs-5\"\r\n              >Additional Information</span\r\n            >\r\n          </div>\r\n          <div\r\n            class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"fw-normal\" v-if=\"asset.comment\">{{\r\n                    asset.comment\r\n                  }}</small>\r\n                  <small class=\"fw-normal text-secondary\" v-else\r\n                    >No comments added</small\r\n                  >\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-7\">\r\n        <div class=\"mb-5\">\r\n          <div class=\"\">\r\n            <span class=\"card-title fw-normal fs-5\">Work Order</span>\r\n            <p class=\"card-text\">\r\n              <small class=\"text-muted fsXs\"\r\n                >List of all the work orders associated to this model</small\r\n              >\r\n            </p>\r\n          </div>\r\n          <div\r\n            v-for=\"work in workOrders\"\r\n            :key=\"work\"\r\n            class=\"mb-2 mt-2 rounded container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex justify-content-between\" style=\"cursor: pointer\">\r\n              <td class=\"d-flex position-relative\">\r\n                <span\r\n                  class=\"position-absolute border border-light top-50 start-0 p-2 translate-middle rounded-circle bg-success\"\r\n                ></span>\r\n                <div class=\"d-flex flex-column ms-4\">\r\n                  <small class=\"text-secondary fsXs\">ID</small>\r\n                  <small class=\"fw-normal\">{{ work.ID }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Title</small>\r\n                  <small class=\"fw-normal\">{{ work.title }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Days Open</small>\r\n                  <small>{{ work.daysOpen }}</small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Date Open</small>\r\n                  <small>{{ work.dateOpen }}</small>\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst props = defineProps([\r\n  \"assetCode\",\r\n  \"status\",\r\n  \"modelName\",\r\n  \"parentAssetID\",\r\n  \"manufacturerName\",\r\n]);\r\n\r\nconst assetProfile = ref({});\r\nconst parentAssetProfile = ref({});\r\n\r\nconst workOrders = ref([\r\n  {\r\n    ID: 12838,\r\n    title: \"Initial Inspection\",\r\n    daysOpen: 5,\r\n    dateOpen: \"20-Sep-23\",\r\n  },\r\n  {\r\n    ID: 12835,\r\n    title: \"Replace PCB\",\r\n    daysOpen: 32,\r\n    dateOpen: \"23-Aug-23\",\r\n  },\r\n]);\r\n\r\nconst fetchAsset = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Asset\",\r\n            queries: [\r\n              {\r\n                field: \"assetCode\",\r\n                op: \"sb\",\r\n                value: props.assetCode,\r\n              },\r\n            ],\r\n            lookups: [\r\n              {\r\n                localField: \"modelID\",\r\n                collection: \"Model\",\r\n                foreignField: \"_id\",\r\n                as: \"Model\",\r\n              },\r\n              {\r\n                localField: \"manufacturerID\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n              {\r\n                localField: \"facilityID\",\r\n                collection: \"Facility\",\r\n                foreignField: \"_id\",\r\n                as: \"Facility\",\r\n              },\r\n              {\r\n                localField: \"parentAssetID\",\r\n                collection: \"Asset\",\r\n                foreignField: \"_id\",\r\n                as: \"ParentAsset\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              assetCode: 1,\r\n              modelID: 1,\r\n              parentAssetID: 1,\r\n\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              modelName: \"$Model.modelName\",\r\n              facilityName: \"$Facility.facilityName\",\r\n\r\n              status: 1,\r\n              manufactureDate: 1,\r\n              serialNumber: 1,\r\n              locationName: 1,\r\n              comment: 1,\r\n\r\n              parentAssetCode: \"$ParentAsset.assetCode\",\r\n              parentModel: \"$ParentAsset.modelID\",\r\n              parentManufacturer: \"$ParentAsset.manufacturerID\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          assetProfile.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchParentAsset = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Asset\",\r\n            queries: [\r\n              {\r\n                field: \"_id\",\r\n                op: \"eq_id\",\r\n                value: props.parentAssetID,\r\n              },\r\n            ],\r\n            lookups: [\r\n              {\r\n                localField: \"_id\",\r\n                collection: \"Asset\",\r\n                foreignField: \"_id\",\r\n                as: \"ParentAsset\",\r\n              },\r\n              {\r\n                localField: \"modelID\",\r\n                collection: \"Model\",\r\n                foreignField: \"_id\",\r\n                as: \"ParentModel\",\r\n              },\r\n              {\r\n                localField: \"manufacturerID\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"ParentManufacturer\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              parentAssetCode: \"$ParentAsset.assetCode\",\r\n              parentModelName: \"$ParentModel.modelName\",\r\n              parentManufaturerName: \"$ParentManufacturer.manufacturerName\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          parentAssetProfile.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\n\r\nonMounted(() => {\r\n  fetchAsset();\r\n  fetchParentAsset();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/font-style.scss\";\r\n</style>\r\n","import script from \"./DASHBOARD-AssetDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DASHBOARD-AssetDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DASHBOARD-AssetDetail.vue?vue&type=style&index=0&id=57ae6f1d&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-57ae6f1d\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small class=\"text-secondary\" style=\"cursor: pointer\" @click=\"changePage('dashboard')\">Back</small>\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <div>\r\n        <span class=\"title text-dark fw-normal fs-1\">{{\r\n          props.manufacturerName\r\n          }}</span>\r\n      </div>\r\n      <div>\r\n        <span class=\"fsXs\">\r\n          Profile of Manufacturers and Models\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"row p-2 mt-4 mb-5\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-5\">\r\n          <div class=\"d-flex justify-content-between d-md-block\">\r\n            <span class=\"card-title fw-normal fs-5\">Manufacturer Profile</span>\r\n\r\n          </div>\r\n          <div class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\" style=\"background-color: #f5f6f6\">\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">ID</small>\r\n                  <small class=\"fw-normal\">{{ props.manufacturerID }}</small>\r\n                </div>\r\n              </td>\r\n\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Name</small>\r\n                  <small>{{ props.manufacturerName }} </small>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Vendor List</small>\r\n\r\n                  <span v-for=\"vendor in vendorList\" :key=\"vendor.index\">\r\n                    <small v-if=\"vendor.manufacturerName === props.manufacturerName\">{{ vendor.vendorName }}</small>\r\n                    <!-- <small v-else class=\"text-muted\">No Vendor Assigned</small> -->\r\n                  </span>\r\n                </div>\r\n              </td>\r\n            </div>\r\n            <div class=\"d-flex gap-2 d-md-block\">\r\n              <Btn2 BtnName=\"EDIT\" backgroundColor=\"gray\" @click=\"editPage\" class=\"text-light btn-sm rounded-pill\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-5\">\r\n          <div class=\"d-flex d-md-block\">\r\n            <span class=\"card-title fw-normal fs-5\">Models</span>\r\n            <Btn2 BtnName=\"New Model\" backgroundColor=\"green\" @click=\"changePage('modelInfo', {\r\n              manufacturerName: props.manufacturerName,\r\n              manufacturerID: props.manufacturerID\r\n            })\" class=\"text-light btn-sm rounded-pill\" />\r\n          </div>\r\n          <div v-for=\"model in modelList\" :key=\"model.index\">\r\n            <div v-if=\"model.manufacturerName === props.manufacturerName\"\r\n              class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\" style=\"background-color: #f5f6f6\">\r\n              <div class=\"d-flex flex-column gap-3\">\r\n                <td>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">Name</small>\r\n                    <small class=\"fw-normal\">{{ model.modelName }}</small>\r\n                  </div>\r\n                </td>\r\n\r\n                <td>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">Device Description</small>\r\n                    <small>device description </small>\r\n                  </div>\r\n                </td>\r\n                <!-- <td>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\"\r\n                      >Device Description</small\r\n                    >\r\n                    <small>All Vendors</small>\r\n                  </div>\r\n                </td> -->\r\n                <td>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">Common Name</small>\r\n                    <small>{{ model.commonName }}</small>\r\n                  </div>\r\n                </td>\r\n              </div>\r\n              <div class=\"d-flex gap-2 d-md-block\">\r\n                <Btn2 BtnName=\"EDIT\" backgroundColor=\"gray\" @click=\"editPage\" class=\"text-light btn-sm rounded-pill\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-5\">\r\n          <div class=\"\">\r\n            <span class=\"card-title fw-normal fs-5\">Vendor Description</span>\r\n            <!-- <p class=\"card-text\">\r\n              <small class=\"text-muted fsXs\"\r\n                >Detailed equipment description</small\r\n              >\r\n            </p> -->\r\n          </div>\r\n          <div>\r\n            <div v-for=\"vendor in vendorList\" :key=\"vendor.index\">\r\n              <div v-if=\"vendor.manufacturerName === props.manufacturerName\"\r\n                class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\" style=\"background-color: #f5f6f6\">\r\n                <div class=\"d-flex flex-column gap-3\">\r\n                  <!-- <td>\r\n                    <div class=\"d-flex flex-column\">\r\n                      <small class=\"text-secondary fsXs\">ID</small>\r\n                      <small class=\"fw-normal\">{{ props.vendorID }}</small>\r\n                    </div>\r\n                  </td> -->\r\n\r\n                  <td>\r\n                    <div class=\"d-flex flex-column\">\r\n                      <small class=\"text-secondary fsXs\">Name</small>\r\n                      <small>{{ vendor.vendorName }} </small>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"d-flex flex-column\">\r\n                      <small class=\"text-secondary fsXs\">Manufacturer List</small>\r\n                      <span>\r\n                        <small v-if=\"vendor.manufacturerName\">{{\r\n                          vendor.manufacturerName\r\n                          }}</small>\r\n                        <small v-else class=\"text-muted\">No Manufacturer Assigned</small>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <div class=\"d-flex gap-2 d-md-block\">\r\n                    <Btn2 BtnName=\"EDIT\" backgroundColor=\"gray\" @click=\"editPage\"\r\n                      class=\"text-light btn-sm rounded-pill\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div\r\n                v-if=\"vendorList.manufacturerName !== props.manufacturerName\"\r\n                class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n                style=\"background-color: #f5f6f6\"\r\n              >\r\n                <small class=\"text-secondary\"\r\n                  >Vendor Description Unavailable</small\r\n                >\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\n\r\nconst store = useStore();\r\n\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\n//Variables\r\nconst modelList = ref([]);\r\nconst manufacturerList = ref([]);\r\nconst vendorList = ref([]);\r\n\r\n//Functions\r\n\r\n//Fetch Model Information\r\nconst fetchModel = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Model\",\r\n            lookups: [\r\n              {\r\n                localField: \"manufacturerID\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              modelName: 1,\r\n              commonName: 1,\r\n              UMDNSCode: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          modelList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n//Fetch Manufacturer Information\r\nconst fetchManufacturer = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Manufacturer\",\r\n            projection: {\r\n              _id: 1,\r\n              manufacturerName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          manufacturerList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n// Fetch Vendor Information\r\nconst fetchVendor = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Vendor\",\r\n            lookups: [\r\n              {\r\n                localField: \"manufacturerList.manufacturer\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              vendorName: 1,\r\n              manufacturer: \"$Manufacturer.manufacturerName\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          vendorList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst props = defineProps([\r\n  \"manufacturerName\",\r\n  \"manufacturerID\",\r\n  \"vendorName\",\r\n  \"manufacturer\",\r\n  \"vendorID\",\r\n]);\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nconsole.log(\"Dashboard Prop manufacturerName:\", props.manufacturerName);\r\n\r\nonMounted(() => {\r\n  fetchModel();\r\n  fetchManufacturer();\r\n  fetchVendor();\r\n  console.log(\"Dashboard Prop manufacturerName:\", props.manufacturerName);\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./DASHBOARD-ManufacturerProfile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DASHBOARD-ManufacturerProfile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('dashboard')\"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-1\">{{ props.modelName }}</span>\r\n      <span class=\"sub-title fs-6 fw-normal\"\r\n        >{{ props.manufacturerName }} | {{ props.commonName }}</span\r\n      >\r\n    </div>\r\n\r\n    <div class=\"mt-4 rounded p-4\">\r\n      <span class=\"card-title fw-normal fs-4\">Asset Inventory</span>\r\n      <p class=\"card-text\">\r\n        <small class=\"text-muted\"\r\n          >List of all the asset associated models</small\r\n        >\r\n      </p>\r\n\r\n      <div class=\"mb-3\">\r\n        <div class=\"d-flex gap-5\">\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Quantity</small>\r\n              <!-- <small class=\"fw-normal\">20</small> -->\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Active</small>\r\n              <!-- <small class=\"fw-normal\">18</small> -->\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">In-Service</small>\r\n              <!-- <small>4</small> -->\r\n            </div>\r\n          </td>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"assetList == 0\">\r\n        <UIToastGlobal\r\n          message=\"Assets have not been assigned\"\r\n          message2=\"Use New Asset to create and assign a record to this Model.\"\r\n          :icon=\"'exclamation-triangle'\"\r\n          backgroundColor=\"#FFF0DA\"\r\n        >\r\n          <UIBtn2\r\n            BtnName=\"New Asset\"\r\n            backgroundColor=\"#FFFFFF\"\r\n            class=\"text-success btn-sm\"\r\n            @click=\"changePage('assetInfo')\"\r\n          />\r\n        </UIToastGlobal>\r\n      </div>\r\n\r\n      <div\r\n        v-else\r\n        v-for=\"asset in assetList\"\r\n        :key=\"asset\"\r\n        class=\"mb-2 rounded container py-2 align-middle\"\r\n        style=\"background-color: #f5f6f6\"\r\n      >\r\n        <div\r\n          class=\"d-flex justify-content-between\"\r\n          style=\"cursor: pointer\"\r\n          @click=\"\r\n            changePage('dashboardAssetDetail', {\r\n              assetCode: asset.assetCode,\r\n              status: asset.status,\r\n              parentAssetID: asset.parentAssetID,\r\n            })\r\n          \"\r\n        >\r\n          <td class=\"d-flex position-relative\">\r\n            <span\r\n              class=\"position-absolute border border-light top-50 start-0 p-2 translate-middle rounded-circle bg-success\"\r\n            ></span>\r\n            <div class=\"d-flex flex-column ms-4\">\r\n              <small class=\"text-secondary fsXs\">Equipment Number</small>\r\n              <small class=\"fw-normal\">{{ asset.assetCode }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Model</small>\r\n              <small class=\"fw-normal\">{{ asset.modelName }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Manufacturer</small>\r\n              <small>{{ asset.manufacturerName }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Status</small>\r\n              <small>{{ asset.status }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Vendor</small>\r\n              <small>- - -</small>\r\n            </div>\r\n          </td>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport UIToastGlobal from \"../BIOMD-UI/UI-ToastGlobal.vue\";\r\nimport UIBtn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\n\r\nconst store = useStore();\r\n\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\n//Variables\r\nconst assetList = ref([]);\r\n\r\nconst props = defineProps([\r\n  \"modelName\",\r\n  \"modelID\",\r\n  \"manufacturerID\",\r\n  \"commonName\",\r\n  \"manufacturerName\",\r\n]);\r\n\r\nconst fetchAsset = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Asset\",\r\n            queries: [\r\n              {\r\n                field: \"modelID\",\r\n                op: \"eq_id\",\r\n                value: props.modelID,\r\n              },\r\n            ],\r\n            lookups: [\r\n              {\r\n                localField: \"manufacturerID\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n              {\r\n                localField: \"modelID\",\r\n                collection: \"Model\",\r\n                foreignField: \"_id\",\r\n                as: \"Model\",\r\n              },\r\n              {\r\n                localField: \"parentAssetID\",\r\n                collection: \"Asset\",\r\n                foreignField: \"_id\",\r\n                as: \"ParentAsset\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              assetCode: 1,\r\n              status: 1,\r\n              parentAssetID: 1,\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              modelName: \"$Model.modelName\",\r\n              parentAsset: \"$ParentAsset.assetCode\",\r\n              parentAssetName: \"$ParentAsset.modelName\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          assetList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\n\r\nonMounted(() => {\r\n  fetchAsset();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/font-style.scss\";\r\n</style>\r\n","import script from \"./DASHBOARD-Model.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DASHBOARD-Model.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DASHBOARD-Model.vue?vue&type=style&index=0&id=3d66c250&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3d66c250\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Department Description\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 g-3\">\r\n      <!-- Department Name -->\r\n      <div class=\"col-lg-6\">\r\n        <Input\r\n          label=\"Department Name\"\r\n          type=\"text\"\r\n          id=\"departmentName\"\r\n          placeholder=\"Department Name\"\r\n          v-model=\"DepartmentDescription.departmentName\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Department Number -->\r\n      <div class=\"col-lg-6\">\r\n        <Input\r\n          label=\"Short Name\"\r\n          type=\"text\"\r\n          id=\"shortName\"\r\n          placeholder=\"Short Name\"\r\n          v-model=\"DepartmentDescription.shortName\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Facility -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"facilityList\" class=\"form-label\">Facility</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"facilityListOptions\"\r\n          id=\"facilityList\"\r\n          placeholder=\"Select Facility\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"DepartmentDescription.selectedFacility.facilityName\"\r\n          @input=\"fetchFacility\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"facilityListOptions\">\r\n          <option\r\n            v-for=\"facility in facilityList\"\r\n            :key=\"facility.index\"\r\n            :value=\"facility.facilityName\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst DepartmentDescription = inject(\"DepartmentDescription\");\r\nconst GlobalDepartmentInformation = inject(\"GlobalDepartmentInformation\");\r\n\r\nconst facilityList = ref(null);\r\n\r\nconst fetchFacility = async (event) => {\r\n  try {\r\n    const selectedFacility = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      DepartmentDescription.value.selectedFacility = facilityList.value.find(\r\n        (facility) => {\r\n          return selectedFacility === facility.facilityName;\r\n        }\r\n      );\r\n      GlobalDepartmentInformation.value.facilityID =\r\n        DepartmentDescription.value.selectedFacility._id;\r\n      await fetchDepartment();\r\n    } else {\r\n      GlobalDepartmentInformation.value.facilityID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Facility\",\r\n              queries: [\r\n                {\r\n                  field: \"facilityName\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                facilityName: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            facilityList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nonMounted(() => {\r\n  fetchFacility();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./DEPARTMENT-DepartmentDescription.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DEPARTMENT-DepartmentDescription.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DEPARTMENT-DepartmentDescription.vue?vue&type=style&index=0&id=484049c1&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-484049c1\"]])\n\nexport default __exports__","import { render } from \"./DEPARTMENT.vue?vue&type=template&id=301f8e07&scoped=true\"\nimport script from \"./DEPARTMENT.vue?vue&type=script&lang=js\"\nexport * from \"./DEPARTMENT.vue?vue&type=script&lang=js\"\n\nimport \"./DEPARTMENT.vue?vue&type=style&index=0&id=301f8e07&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-301f8e07\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('dashboard')\"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <div>\r\n        <span class=\"title text-dark fw-normal fs-1\">Site Description</span>\r\n      </div>\r\n      <div>\r\n        <span class=\"fsXs\">\r\n          Overview of all the facilities within your site.\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"row p-2 mt-4 mb-5\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-5\">\r\n          <div class=\"\">\r\n            <span class=\"card-title fw-normal fs-5\">Summary</span>\r\n            <!-- <p class=\"card-text\">\r\n                  <small class=\"text-muted fsXs\"\r\n                    >Detailed equipment description</small\r\n                  >\r\n                </p> -->\r\n          </div>\r\n          <div\r\n            class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n            style=\"background-color: #f5f6f6\"\r\n          >\r\n            <div class=\"d-flex flex-column gap-3\">\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Name</small>\r\n                  <small class=\"fw-normal\">Ghana Medical Help</small>\r\n                </div>\r\n              </td>\r\n\r\n              <td>\r\n                <div class=\"d-flex flex-column\">\r\n                  <small class=\"text-secondary fsXs\">Location</small>\r\n                  <small>Wa Region</small>\r\n                  <small>Upper West</small>\r\n                  <small>Ghana </small>\r\n                </div>\r\n              </td>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-5\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <span class=\"card-title fw-normal fs-5\">Facility</span>\r\n            <Btn2\r\n              BtnName=\"ADD\"\r\n              backgroundColor=\"#54626F\"\r\n              @click=\"changePage('facilityInfo')\"\r\n              class=\"text-light rounded-3 btn-sm\"\r\n            />\r\n            <!-- <p class=\"card-text\">\r\n                  <small class=\"text-muted fsXs\"\r\n                    >Detailed equipment description</small\r\n                  >\r\n                </p> -->\r\n          </div>\r\n          <div>\r\n            <div\r\n              class=\"g-3 mb-2 mt-2 rounded-3 container py-2 align-middle\"\r\n              style=\"background-color: #f5f6f6\"\r\n              v-for=\"facility in facilityList\"\r\n            >\r\n              <div class=\"d-flex flex-column gap-3\">\r\n                <td>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">ID</small>\r\n                    <small class=\"fw-normal\">{{ facility._id }}</small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <small class=\"text-secondary fsXs\">Name</small>\r\n                    <small class=\"fw-normal\">{{ facility.facilityName }}</small>\r\n                  </div>\r\n                </td>\r\n\r\n                <td>\r\n                  <div class=\"d-flex flex-column mb-2\">\r\n                    <small class=\"text-secondary fsXs mb-2\">Departments</small>\r\n                    <div v-for=\"department in departmentList\">\r\n                      <div\r\n                        v-if=\"department.facilityName === facility.facilityName\"\r\n                        class=\"d-flex gap-3 rounded-pill justify-content-between px-3 mb-1 align-items-center\"\r\n                        style=\"background-color: #dcdcdc\"\r\n                      >\r\n                        <small class=\"text-secondary\">\r\n                          {{ department.departmentName }}\r\n                        </small>\r\n                        <Btn2\r\n                          BtnName=\"\"\r\n                          :icon=\"'window-close'\"\r\n                          backgroundColor=\"none\"\r\n                          @click=\"goBack\"\r\n                          class=\"text-secondary btn-sm\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <Btn2\r\n                    BtnName=\"ADD\"\r\n                    backgroundColor=\"#54626F\"\r\n                    @click=\"changePage('departmentInfo')\"\r\n                    class=\"text-light rounded-3 btn-sm\"\r\n                  />\r\n                </td>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\nconst facilityList = ref([]);\r\nconst departmentList = ref([]);\r\nconst fetchFacility = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Facility\",\r\n            projection: {\r\n              _id: 1,\r\n              facilityName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          facilityList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst fetchDepartment = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Department\",\r\n            lookups: [\r\n              {\r\n                localField: \"facilityID\",\r\n                collection: \"Facility\",\r\n                foreignField: \"_id\",\r\n                as: \"Facility\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              departmentName: 1,\r\n              shortName: 1,\r\n              facilityName: \"$Facility.facilityName\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          departmentList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst emit = defineEmits([\"updatePage\"]);\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nonMounted(() => {\r\n  fetchFacility();\r\n  fetchDepartment();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./FACILITY-SiteDescription.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FACILITY-SiteDescription.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./FACILITY.vue?vue&type=template&id=7f00fe08&scoped=true\"\nimport script from \"./FACILITY.vue?vue&type=script&lang=js\"\nexport * from \"./FACILITY.vue?vue&type=script&lang=js\"\n\nimport \"./FACILITY.vue?vue&type=style&index=0&id=7f00fe08&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7f00fe08\"]])\n\nexport default __exports__","<template>\r\n  <main>\r\n    <!-- The main form -->\r\n    <Section sectionTitle=\"Manufacturer Information\">\r\n      <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 g-3\">\r\n        <!-- Manufacturer Name -->\r\n        <div class=\"col\">\r\n          <Input\r\n            label=\"Manufacturer Name\"\r\n            type=\"text\"\r\n            v-model=\"manufacturerInfo.manufacturerName\"\r\n            id=\"manufacturerName\"\r\n            placeholder=\"Enter Manufacturer Name\"\r\n          />\r\n        </div>\r\n        <!-- Country -->\r\n        <!-- <div class=\"col\">\r\n          <label for=\"countryList\" class=\"form-label\">Country</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"countryOptions\"\r\n            id=\"countryList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"manufacturerInfo.selectedCountry.Loci_Name_Country\"\r\n            @input=\"fetchCountry\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"countryOptions\">\r\n            <option\r\n              v-for=\"country in countryList\"\r\n              :key=\"country.index\"\r\n              :value=\"country.Loci_Name_Country\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n\r\n        <!-- Province/State/Region -->\r\n        <!-- <div class=\"col\">\r\n          <label for=\"stateList\" class=\"form-label\"\r\n            >Province/State/Region</label\r\n          >\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"stateOptions\"\r\n            id=\"stateList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"manufacturerInfo.selectedState.Loci_Name_State\"\r\n            @input=\"fetchState\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"stateOptions\">\r\n            <option\r\n              v-for=\"state in stateList\"\r\n              :key=\"state.index\"\r\n              :value=\"state.Loci_Name_State\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n\r\n        <!-- City/District -->\r\n        <!-- <div class=\"col\">\r\n          <label for=\"districtList\" class=\"form-label\">District</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"districtOptions\"\r\n            id=\"districtList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"manufacturerInfo.selectedDistrict.Loci_Name_Area_L1\"\r\n            @input=\"fetchDistrict\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"districtOptions\">\r\n            <option\r\n              v-for=\"district in districtList\"\r\n              :key=\"district.index\"\r\n              :value=\"district.Loci_Name_Area_L1\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n      </div>\r\n      <div class=\"row g-3 mt-3\">\r\n        <!-- Street Address 1 -->\r\n        <!-- <div class=\"col-12\">\r\n          <Input\r\n            label=\"Street Address 1\"\r\n            type=\"text\"\r\n            v-model=\"manufacturerInfo.streetAddress1\"\r\n            id=\"street1\"\r\n            placeholder=\"Enter Street Address 1\"\r\n          />\r\n        </div> -->\r\n        <!-- Street Address 2 -->\r\n        <!-- <div class=\"col-12\">\r\n          <Input\r\n            label=\"Street Address 2\"\r\n            type=\"text\"\r\n            v-model=\"manufacturerInfo.streetAddress2\"\r\n            id=\"street2\"\r\n            placeholder=\"Enter Street Address 2\"\r\n          />\r\n        </div> -->\r\n        <!-- Zip / Postal Code -->\r\n        <!-- <div class=\"col-lg-3\">\r\n          <Input\r\n            label=\"Zip/Postal Code\"\r\n            type=\"number\"\r\n            v-model=\"manufacturerInfo.zipCode\"\r\n            id=\"zip\"\r\n            placeholder=\"Enter Zip/Postal Code\"\r\n          />\r\n        </div> -->\r\n      </div>\r\n    </Section>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, ref, onMounted, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\nconst store = useStore();\r\nconst manufacturerInfo = inject(\"manufacturerInfo\");\r\nconst Global_Manufacturer_Definition = inject(\"Global_Manufacturer_Definition\");\r\nconst countryList = ref(null);\r\nconst stateList = ref(null);\r\nconst districtList = ref(null);\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\n// const fetchCountry = async (event) => {\r\n//   try {\r\n//     const selectedCountry = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n//       manufacturerInfo.value.selectedCountry = countryList.value.find(\r\n//         (country) => {\r\n//           return selectedCountry === country.Loci_Name_Country;\r\n//         }\r\n//       );\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.Country =\r\n//         manufacturerInfo.value.selectedCountry.Loci_Code_Country;\r\n//       // validateInput(\"Country\");\r\n//       await fetchState();\r\n//     } else {\r\n//       // Clear Country, State, District, Mandal, Postal Code\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.Country = null;\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.State = null;\r\n//       manufacturerInfo.value.selectedState = {\r\n//         Loci_Name_Country: null,\r\n//         Loci_Code_Country: null,\r\n//       };\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District = null;\r\n//       manufacturerInfo.value.selectedDistrict = {\r\n//         Loci_Name_Area_L1: null,\r\n//         Loci_Code_Area_L1: null,\r\n//       };\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"GLOBAL\",\r\n//             ServiceCode: \"GLOBL\",\r\n//             API: \"GET_GEO_LIST\",\r\n//             Max_List: 500,\r\n//             Criteria: {\r\n//               Type_Code: \"CNTY\",\r\n//               Loci_Name_Country: \"\",\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             countryList.value = res.Response.Country_List; //Assigning response values to getValues Object\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-GET_GEO_LIST-E001\";\r\n//               Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n// const fetchState = async (event) => {\r\n//   try {\r\n//     const selectedState = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n//       manufacturerInfo.value.selectedState = stateList.value.find((state) => {\r\n//         return selectedState === state.Loci_Name_State;\r\n//       });\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.State =\r\n//         manufacturerInfo.value.selectedState.Loci_Code_State;\r\n//       // validateInput(\"Country\");\r\n//       await fetchDistrict();\r\n//     } else {\r\n//       // Clear Country, State, District, Mandal, Postal Code\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.State = null;\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District = null;\r\n//       manufacturerInfo.value.selectedDistrict = {\r\n//         Loci_Name_Area_L1: null,\r\n//         Loci_Code_Area_L1: null,\r\n//       };\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"GLOBAL\",\r\n//             ServiceCode: \"GLOBL\",\r\n//             API: \"GET_GEO_LIST\",\r\n//             Max_List: 500,\r\n//             Criteria: {\r\n//               Type_Code: \"STATE\",\r\n//               Loci_Code_Country:\r\n//                 Global_Manufacturer_Definition.value.manufacturerAddress\r\n//                   .Country,\r\n//               Loci_Name_State: \"\",\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             stateList.value = res.Response.State_List; //Assigning response values to getValues Object\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-GET_GEO_LIST-E001\";\r\n//               Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\n// const fetchDistrict = async (event) => {\r\n//   try {\r\n//     const selectedDistrict = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n//       manufacturerInfo.value.selectedDistrict = districtList.value.find(\r\n//         (state) => {\r\n//           return selectedDistrict === state.Loci_Name_Area_L1;\r\n//         }\r\n//       );\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District =\r\n//         manufacturerInfo.value.selectedDistrict.Loci_Code_Area_L1;\r\n//       // validateInput(\"Country\");\r\n//       // await fetchState();\r\n//     } else {\r\n//       // Clear Country, State, District, Mandal, Postal Code\r\n//       Global_Manufacturer_Definition.value.manufacturerAddress.District = null;\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"GLOBAL\",\r\n//             ServiceCode: \"GLOBL\",\r\n//             API: \"GET_GEO_LIST\",\r\n//             Max_List: 500,\r\n//             Criteria: {\r\n//               Type_Code: \"ARL1\",\r\n//               Loci_Code_Country:\r\n//                 Global_Manufacturer_Definition.value.manufacturerAddress\r\n//                   .Country,\r\n//               Loci_Code_State:\r\n//                 Global_Manufacturer_Definition.value.manufacturerAddress.State,\r\n//               Loci_Name_District: \"\",\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             districtList.value = res.Response.ARL1_List; //Assigning response values to getValues Object\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-GET_GEO_LIST-E001\";\r\n//               Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\nonMounted(() => {\r\n  // fetchCountry();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./MANUFACTURER-ManufacturerInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MANUFACTURER-ManufacturerInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MANUFACTURER-ManufacturerInformation.vue?vue&type=style&index=0&id=32567c96&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-32567c96\"]])\n\nexport default __exports__","import { render } from \"./MANUFACTURER.vue?vue&type=template&id=2cb8fa7a&scoped=true\"\nimport script from \"./MANUFACTURER.vue?vue&type=script&lang=js\"\nexport * from \"./MANUFACTURER.vue?vue&type=script&lang=js\"\n\nimport \"./MANUFACTURER.vue?vue&type=style&index=0&id=2cb8fa7a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2cb8fa7a\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Model Description\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 g-3\">\r\n      <!-- Model Name -->\r\n      <div class=\"col-lg-6\">\r\n        <Input label=\"Model Name\" type=\"text\" id=\"modelName\" placeholder=\"Model Name\" v-model=\"ModelDesc.modelName\" />\r\n      </div>\r\n\r\n      <!-- Common Name -->\r\n      <div class=\"col-lg-6\">\r\n        <Input label=\"Common Name\" type=\"text\" id=\"CommonName\" placeholder=\"Common Name\"\r\n          v-model=\"ModelDesc.commonName\" />\r\n      </div>\r\n\r\n      <!-- Device Description -->\r\n      <div class=\"col-lg-6\">\r\n        <Input label=\"Device Description\" type=\"text\" id=\"deviceDescription\" placeholder=\"Device Description\"\r\n          v-model=\"ModelDesc.deviceDescription\" />\r\n      </div>\r\n\r\n      <!-- Manufacturer -->\r\n      <!-- <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"manufacturerList\" class=\"form-label\">Manufacturer</label>\r\n        <input class=\"form-control\" list=\"manufacturerListOptions\" id=\"manufacturerList\"\r\n          placeholder=\"Select Manufacturer\" aria-label=\"Default select example\"\r\n          v-model=\"ModelDesc.selectedManufacturer.manufacturerName\" @input=\"fetchManufacturer\" autocomplete=\"off\" />\r\n        <datalist id=\"manufacturerListOptions\">\r\n          <option v-for=\"manufacturer in manufacturerList\" :key=\"manufacturer.index\"\r\n            :value=\"manufacturer.manufacturerName\"></option>\r\n        </datalist>\r\n      </div> -->\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted, watch, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst { manufacturerName, manufacturerID } = defineProps({\r\n  manufacturerName: {\r\n    type: String,\r\n  },\r\n  manufacturerID: {\r\n    type: String,\r\n  },\r\n})\r\n\r\nconst ModelDesc = inject(\"ModelDesc\")\r\nconst GlobalModelInformation = inject(\"GlobalModelInformation\")\r\n\r\n// const manufacturerList = ref(null)\r\n\r\n// const fetchManufacturer = async (event) => {\r\n//   try {\r\n//     // If there is no event, do not reset the manufacturerID.\r\n//     if (!event) {\r\n//       return;\r\n//     }\r\n//     const selectedManufacturer = event.target.value;\r\n//     if (!(event instanceof InputEvent) || event.inputType === \"insertReplacementText\") {\r\n//       ModelDesc.value.selectedManufacturer = manufacturerList.value.find(\r\n//         (manufacturer) => selectedManufacturer === manufacturer.manufacturerName\r\n//       );\r\n//       GlobalModelInformation.value.manufacturerID = ModelDesc.value.selectedManufacturer._id;\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\n\r\nonMounted(() => {\r\n  if (!ModelDesc.value.selectedManufacturer) {\r\n    ModelDesc.value.selectedManufacturer = { manufacturerName: '', _id: null };\r\n  }\r\n  ModelDesc.value.selectedManufacturer.manufacturerName = manufacturerName;\r\n  ModelDesc.value.selectedManufacturer._id = manufacturerID;\r\n  if (GlobalModelInformation) {\r\n    GlobalModelInformation.value.manufacturerID = manufacturerID;\r\n  }\r\n  // fetchManufacturer();\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>","import script from \"./MODEL-ModelDescription.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MODEL-ModelDescription.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./MODEL.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MODEL.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MODEL.vue?vue&type=style&index=0&id=5ec14d98&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5ec14d98\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"\r\n          changePage('reportsList', {\r\n            facilityName: props.facilityName,\r\n          })\r\n        \"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-3\"\r\n        >Annual Medical Devices Inflow</span\r\n      >\r\n      <nav class=\"d-flex gap-3 p-1\">\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Print</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">CSV Export</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Download</small>\r\n      </nav>\r\n    </div>\r\n\r\n    <div class=\"p-2 mt-4\">\r\n      <small class=\"text-secondary\"\r\n        >Type and count of devices added to inventory for the selected year.\r\n      </small>\r\n    </div>\r\n\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-lg-4\">\r\n        <div class=\"form-floating\">\r\n          <select\r\n            name=\"year\"\r\n            id=\"yearId\"\r\n            v-model=\"selectedYear\"\r\n            class=\"form-select\"\r\n            :onChange=\"() => fetchReport()\"\r\n          >\r\n            <option v-for=\"(year, y) in yearsList\" :key=\"y\" :value=\"year\">\r\n              {{ year }}\r\n            </option>\r\n          </select>\r\n          <label for=\"yearId\">Select Year</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-2 px-3\" v-if=\"selectedYear\">\r\n        <small\r\n          >Report generated for accepted assets from 1/1/{{ selectedYear }} to\r\n          {{ currentYear }}</small\r\n        >\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-4 p-2\">\r\n      <span class=\"fw-bold fs-4\">{{ props.facilityName }}</span>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <UIStatCard\r\n        cardTitle=\"Overall Accepted Devices\"\r\n        :statisticsValue=\"overallDevices\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Value\"\r\n        :statisticsValue=\"'$'+overallValue\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n    </div>\r\n    <div class=\"mt-2 table-responsive\" v-for=\"asset in reportList\">\r\n      <table class=\"table table-responsive table-borderless mb-2\">\r\n        <thead>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <th scope=\"col\" width=\"20%\">\r\n              <small class=\"text-secondary fw-normal\">Device Code</small>\r\n            </th>\r\n            <th scope=\"col\" width=\"50%\">\r\n              <small class=\"text-secondary fw-normal\">Device Description</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Accepted Devices</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Total Value</small>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <td>\r\n              <small>{{ asset.UMDNSCode }}</small>\r\n            </td>\r\n            <td>\r\n              <small>{{ asset.description }}</small>\r\n            </td>\r\n            <td><small>{{ asset.acceptedDevices }}</small></td>\r\n            <td><small>{{ \"$\" + asset.totalCost }}</small></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport UIStatCard from \"../BIOMD-UI/UI-StatCard\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst yearsList = ref([]);\r\nconst selectedYear = ref(null);\r\nconst currentYear = ref(new Date().toLocaleDateString());\r\nconst getYearsList = () => {\r\n  const startYear = 1990;\r\n  const endYear = new Date().getFullYear();\r\n  for (let i = endYear; i >= startYear; i--) {\r\n    yearsList.value = [...yearsList.value, i];\r\n  }\r\n};\r\n\r\nconst reportList = ref([]);\r\nconst overallDevices = ref(0);\r\nconst overallValue = ref(0);\r\n\r\nconst fetchReport = async () => {\r\n  console.log(\"calling function\");\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"GET_REPORTS\",\r\n          reportType: \"inflow\",\r\n          reportSpecs: {\r\n            year: selectedYear.value\r\n          }\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          reportList.value = res.Response.records;\r\n          //calculate overall devices and value (should probably be pulled out into a seperate services just to be clean)\r\n          overallDevices.value = 0;\r\n          overallValue.value = 0;\r\n          var assetList = reportList.value;\r\n          assetList.forEach((asset) => {\r\n            overallValue.value += asset.totalCost;\r\n            overallDevices.value += asset.acceptedDevices;\r\n          });\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nconst props = defineProps([\"facilityName\", \"facilityID\"]);\r\nonMounted(() => {\r\n  getYearsList();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./REPORTS-AnnualInflow.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS-AnnualInflow.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"\r\n          changePage('reportsList', {\r\n            facilityName: props.facilityName,\r\n          })\r\n        \"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-3\">Functionality Index</span>\r\n      <nav class=\"d-flex gap-3 p-1\">\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Print</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">CSV Export</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Download</small>\r\n      </nav>\r\n    </div>\r\n\r\n    <div class=\"p-2 mt-4\">\r\n      <small class=\"text-secondary\"\r\n        >The functionality index is the percentage of devices in the inventory\r\n        available for use.\r\n      </small>\r\n    </div>\r\n    <div class=\"mt-4 p-2\">\r\n      <span class=\"fw-bold fs-4\">{{ props.facilityName }}</span>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <UIStatCard cardTitle=\"Functionality Index\" :statisticsValue=\"percentage + '%'\" />\r\n    </div>\r\n    <div class=\"mt-2 table-responsive\" v-for=\"asset in reportList\">\r\n      <table class=\"table table-responsive table-borderless mb-2\">\r\n        <thead>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Active Devices</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Total Devices</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Inactive Devices</small>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <td><small>{{ asset.active }}</small></td>\r\n            <td><small>{{ asset.active + asset.inactive }}</small></td>\r\n            <td><small>{{ asset.inactive }}</small></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport UIStatCard from \"../BIOMD-UI/UI-StatCard\";\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\n\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst reportList = ref([]);\r\nconst percentage = ref();\r\n\r\nconst fetchReport = async () => {\r\n  console.log(\"calling function\");\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"GET_REPORTS\",\r\n          reportType: \"functionality\",\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          reportList.value = res.Response.records;\r\n          let asset = reportList.value[0];\r\n          percentage.value = (asset.active/(asset.active + asset.inactive))*100;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\n\r\nconst props = defineProps([\"facilityName\", \"facilityID\"]);\r\nonMounted(() => {\r\n  fetchReport();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./REPORTS-Functionality.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS-Functionality.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('reportsPage')\"\r\n        >Change Facility</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-1\"\r\n        >Reports for {{ props.facilityName }}</span\r\n      >\r\n      <span class=\"sub-title fs-6 fw-normal\"\r\n        >Review and export data metrics to pdf and csv files</span\r\n      >\r\n    </div>\r\n\r\n    <div class=\"row p-2 mb-5\">\r\n      <div class=\"col-sm-12 col-lg-9 col-12\">\r\n        <div class=\"mt-3\">\r\n          <span class=\"card-title fw-normal fs-5\">Pre-Generated Reports</span>\r\n          <!-- <p class=\"card-text\">\r\n              <small class=\"text-muted\">Profile of Manufacturer and Models</small>\r\n            </p> -->\r\n        </div>\r\n\r\n        <div class=\"d-flex flex-column\">\r\n          <UIReportList\r\n            title=\"Global Inventory Summary by Medical Device Description\"\r\n            @click=\"\r\n              changePage('reportsSummary1', {\r\n                facilityName: props.facilityName,\r\n              })\r\n            \"\r\n          />\r\n          <UIReportList\r\n            title=\"Global Inventory Summary by Department\"\r\n            @click=\"\r\n              changePage('reportsSummary2', {\r\n                facilityName: props.facilityName,\r\n              })\r\n            \"\r\n          />\r\n          <UIReportList\r\n            title=\"Functionality Index\"\r\n            @click=\"\r\n              changePage('functionalityIndex', {\r\n                facilityName: props.facilityName,\r\n              })\r\n            \"\r\n          />\r\n          <UIReportList\r\n            title=\"Annual Medical Device Inflow\"\r\n            @click=\"\r\n              changePage('annualInflow', {\r\n                facilityName: props.facilityName,\r\n              })\r\n            \"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport UIReportList from \"../BIOMD-UI/UI-ReportList.vue\";\r\nconst emit = defineEmits([\"updatePage\"]);\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nconst props = defineProps([\"facilityName\", \"facilityID\"]);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./REPORTS-List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS-List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"\r\n          changePage('reportsList', {\r\n            facilityName: props.facilityName,\r\n          })\r\n        \"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-3\"\r\n        >Global Inventory Summary by Medical Device Description</span\r\n      >\r\n      <nav class=\"d-flex gap-3 p-1\">\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Print</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">CSV Export</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Download</small>\r\n      </nav>\r\n    </div>\r\n\r\n    <div class=\"p-2 mt-4\">\r\n      <small class=\"text-secondary\"\r\n        >List of active and inactive medical devices grouped by their device\r\n        description and the total value of active devices.\r\n      </small>\r\n    </div>\r\n    <div class=\"mt-4 p-2\">\r\n      <span class=\"fw-bold fs-4\">{{ props.facilityName }}</span>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <UIStatCard\r\n        cardTitle=\"Overall Device Description\"\r\n        :statisticsValue=\"reportList.length\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Active Devices\"\r\n        :statisticsValue=\"overallActive\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Value\"\r\n        :statisticsValue=\"'$' + overallValue\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Inactive Devices\"\r\n        :statisticsValue=\"overallInactive\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n    </div>\r\n    <div class=\"mt-2 table-responsive\" v-for=\"asset in reportList\">\r\n      <table class=\"table table-responsive table-borderless mb-2\">\r\n        <thead>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <th scope=\"col\" width=\"20%\">\r\n              <small class=\"text-secondary fw-normal\">Device Code</small>\r\n            </th>\r\n            <th scope=\"col\" width=\"50%\">\r\n              <small class=\"text-secondary fw-normal\">Device Description</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Active Devices</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Total Value</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Inactive Devices</small>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <td>\r\n              <small>{{ asset.UMDNSCode }}</small>\r\n            </td>\r\n            <td>\r\n              <small>{{ asset.description }}</small>\r\n            </td>\r\n            <td><small>{{ asset.active }}</small></td>\r\n            <td><small>{{\"$\" + asset.totalCost }}</small></td>\r\n            <td><small>{{ asset.inactive }}</small></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport UIStatCard from \"../BIOMD-UI/UI-StatCard\";\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\nconst assetList = ref([]);\r\nconst reportList = ref([]);\r\nconst overallValue = ref(0);\r\nconst overallActive = ref(0);\r\nconst overallInactive = ref(0);\r\n\r\nconst fetchReport = async () => {\r\n  console.log(\"calling function\");\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"GET_REPORTS\",\r\n          reportType: \"description\",\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          reportList.value = res.Response.records;\r\n\r\n          //calculate overall metrics (should probably be pulled out into a seperate services just to be clean)\r\n          overallActive.value = 0;\r\n          overallInactive.value = 0;\r\n          overallValue.value = 0;\r\n          var assetList = reportList.value;\r\n          assetList.forEach((asset) => {\r\n            overallValue.value += asset.totalCost;\r\n            overallActive.value += asset.active;\r\n            overallInactive.value += asset.inactive;\r\n          });\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchAsset = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Asset\",\r\n            lookups: [\r\n              {\r\n                localField: \"modelID\",\r\n                collection: \"Model\",\r\n                foreignField: \"_id\",\r\n                as: \"Model\",\r\n              },\r\n              {\r\n                localField: \"manufacturerID\",\r\n                collection: \"Manufacturer\",\r\n                foreignField: \"_id\",\r\n                as: \"Manufacturer\",\r\n              },\r\n              {\r\n                localField: \"facilityID\",\r\n                collection: \"Facility\",\r\n                foreignField: \"_id\",\r\n                as: \"Facility\",\r\n              },\r\n            ],\r\n            projection: {\r\n              _id: 1,\r\n              assetCode: 1,\r\n              modelName: \"$Model.modelName\",\r\n              commonName: \"$Model.commonName\",\r\n              UMDNSCode: \"$Model.UMDNSCode\",\r\n              deviceDescription: \"$Model.deviceDescription\",\r\n              manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              facilityName: \"$Facility.facilityName\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          assetList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst emit = defineEmits([\"updatePage\"]);\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nconst props = defineProps([\"facilityName\", \"facilityID\"]);\r\nonMounted(() => {\r\n  fetchReport();\r\n  fetchAsset();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>","import script from \"./REPORTS-Summary1.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS-Summary1.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"\r\n          changePage('reportsList', {\r\n            facilityName: props.facilityName,\r\n          })\r\n        \"\r\n        >Back</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-3\"\r\n        >Global Inventory Summary by Department</span\r\n      >\r\n      <nav class=\"d-flex gap-3 p-1\">\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Print</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">CSV Export</small>\r\n        <small class=\"text-secondary\" style=\"cursor: pointer\">Download</small>\r\n      </nav>\r\n    </div>\r\n\r\n    <div class=\"p-2 mt-4\">\r\n      <small class=\"text-secondary\"\r\n        >List of active and inactive medical devices grouped by their\r\n        departments and the total value of active devices.\r\n      </small>\r\n    </div>\r\n    <div class=\"mt-4 p-2\">\r\n      <span class=\"fw-bold fs-4\">{{ props.facilityName }}</span>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <UIStatCard\r\n        cardTitle=\"Overall Departments\"\r\n        :statisticsValue=\"reportList.length\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Active Devices\"\r\n        :statisticsValue=\"overallActive\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Value\"\r\n        :statisticsValue=\"'$' + overallValue\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n      <UIStatCard\r\n        cardTitle=\"Overall Inactive Devices\"\r\n        :statisticsValue=\"overallInactive\"\r\n        class=\"fs-4 fw-normal\"\r\n      />\r\n    </div>\r\n    <div class=\"mt-4 table-responsive\">\r\n      <table\r\n        class=\"table table-responsive table-borderless mb-2\"\r\n        v-for=\"record in reportList\"\r\n        :key=\"record.department\"\r\n      >\r\n        <thead>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Department</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Active Devices</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Total Value</small>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <small class=\"text-secondary fw-normal\">Inactive Devices</small>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style=\"background-color: #f5f6f6\">\r\n            <td>\r\n              <small>{{ record.department }}</small>\r\n            </td>\r\n            <td>\r\n              <small>{{ record.active }}</small>\r\n            </td>\r\n            <td>\r\n              <small>{{\"$\" + record.totalCost }}</small>\r\n            </td>\r\n            <td>\r\n              <small>{{ record.inactive }}</small>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport UIBtn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport UIStatCard from \"../BIOMD-UI/UI-StatCard\";\r\nimport UIToastGlobal from \"../BIOMD-UI/UI-ToastGlobal.vue\";\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst reportList = ref([]);\r\nconst overallValue = ref(0);\r\nconst overallActive = ref(0);\r\nconst overallInactive = ref(0);\r\n\r\nconst fetchReport = async () => {\r\n  console.log(\"calling function\");\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"GET_REPORTS\",\r\n          reportType: \"department\",\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          reportList.value = res.Response.records;\r\n          \r\n           //calculate overall metrics (should probably be pulled out into a seperate services just to be clean)\r\n          overallActive.value = 0;\r\n          overallInactive.value = 0;\r\n          overallValue.value = 0;\r\n          var assetList = reportList.value;\r\n          assetList.forEach((asset) => {\r\n            overallValue.value += asset.totalCost;\r\n            overallActive.value += asset.active;\r\n            overallInactive.value += asset.inactive;\r\n          });\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nconst props = defineProps([\"facilityName\", \"facilityID\"]);\r\n\r\nonMounted(() => {\r\n  fetchReport();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>","import script from \"./REPORTS-Summary2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS-Summary2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('dashboard')\"\r\n        >Dashboard</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-1\">Reports</span>\r\n      <span class=\"sub-title fs-6 fw-normal\"\r\n        >Select Facility to generate reports</span\r\n      >\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <!-- <div\r\n          v-for=\"facility in facilityList\"\r\n          :key=\"facility.index\"\r\n          class=\"col-lg-4 col-md-8 col-12 p-2 mb-3 mt-4\"\r\n        >\r\n          <label for=\"facilityList\" class=\"form-label\">Select Facility</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"facilityListOptions\"\r\n            id=\"facilityList\"\r\n            placeholder=\"Select facility\"\r\n            aria-label=\"Default select example\"\r\n            @input=\"fetchFacility\"\r\n            @change=\"\r\n              changePage('reportsList', {\r\n                facilityName: facility.facilityName,\r\n                facilityID: facility._id,\r\n              })\r\n            \"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"facilityListOptions\">\r\n            <option\r\n              v-for=\"facility in facilityList\"\r\n              :key=\"facility.index\"\r\n              :value=\"facility.facilityName\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n        <div class=\"list-group col-lg-4 col-md-8 col-12 mb-3\">\r\n          <span\r\n            v-for=\"facility in facilityList\"\r\n            :key=\"facility.index\"\r\n            @click=\"\r\n              changePage('reportsList', {\r\n                facilityName: facility.facilityName,\r\n                facilityID: facility._id,\r\n              })\r\n            \"\r\n            class=\"list-group-item list-group-item-action list-group-item-light\"\r\n            style=\"cursor: pointer\"\r\n            >{{ facility.facilityName }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\nconst facilityList = ref([]);\r\nconst fetchFacility = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Facility\",\r\n            projection: {\r\n              _id: 1,\r\n              facilityName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          facilityList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst emit = defineEmits([\"updatePage\"]);\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nonMounted(() => {\r\n  fetchFacility();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./REPORTS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('landing')\"\r\n        >Dashboard</small\r\n      >\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('assetInfo')\"\r\n        >New Asset</small\r\n      >\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('vendorInfo')\"\r\n        >New Model</small\r\n      >\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('departmentInfo')\"\r\n        >Department</small\r\n      >\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('facilityInfo')\"\r\n        >Facility</small\r\n      >\r\n    </nav>\r\n\r\n    <!--Additional Page Navigation-->\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-1\">Dashboard</span>\r\n      <span class=\"sub-title fs-6 fw-normal\"\r\n        >Snapshot for medical equipment inventory</span\r\n      >\r\n    </div>\r\n\r\n    <div class=\"rounded mt-4\" style=\"background-color: #e3f6f5\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\" style=\"color: #298a85\">Welcome John!</h5>\r\n        <p class=\"card-text\">\r\n          <small class=\"text-muted\"\r\n            >This is your dashboard of medical equipment assigned to you and\r\n            your team</small\r\n          >\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-4 rounded p-4\">\r\n      <span class=\"card-title fw-normal fs-4\">Site Inventory</span>\r\n      <p class=\"card-text\">\r\n        <small class=\"text-muted\">Summary of all the asset models</small>\r\n      </p>\r\n\r\n      <div\r\n        v-for=\"asset in assets\"\r\n        :key=\"asset\"\r\n        class=\"g-3 mb-2 rounded container py-2 align-middle\"\r\n        style=\"background-color: #f5f6f6\"\r\n      >\r\n        <div class=\"d-flex justify-content-between\" style=\"cursor: pointer\">\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Model</small>\r\n              <small class=\"fw-normal\">{{ asset.model }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Manufacturer</small>\r\n              <small>{{ asset.manufacturer }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Quantity</small>\r\n              <small>{{ asset.quantity }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">Active</small>\r\n              <small>{{ asset.active }}</small>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex flex-column\">\r\n              <small class=\"text-secondary fsXs\">In-Service</small>\r\n              <small>{{ asset.inService }}</small>\r\n            </div>\r\n          </td>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\n//Variables\r\n\r\nconst assets = ref([\r\n  {\r\n    model: \"MX-800\",\r\n    manufacturer: \"Philips Healthcare\",\r\n    quantity: 20,\r\n    active: 16,\r\n    inService: 4,\r\n  },\r\n  {\r\n    model: \"MX-900\",\r\n    manufacturer: \"General Electric\",\r\n    quantity: 10,\r\n    active: 5,\r\n    inService: 5,\r\n  },\r\n]);\r\n\r\n//Functions\r\n\r\n//Fetch Assets Information\r\n\r\n//Lifecycle Hook\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\n// Navigate to selected page to edit\r\nconst changePage = async (page) => {\r\n  emit(\"updatePage\", page);\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./UI-Landing.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Landing.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Landing.vue?vue&type=style&index=0&id=fe35fa50&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fe35fa50\"]])\n\nexport default __exports__","import script from \"./UI-ReportList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-ReportList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./UI-StatCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-StatCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div class=\"row\">\r\n        <div class=\"card text-center p-3\">\r\n          <div class=\"card-body mb-3\">\r\n            <font-awesome-icon\r\n              icon=\"check\"\r\n              size=\"5x\"\r\n              class=\"me-2 text-success\"\r\n            />\r\n            <div class=\"d-flex flex-column ml-2\">\r\n              <span class=\"text-success\">Success</span\r\n              ><span class=\"text-black-50\"\r\n                >A new record has been successfully added</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"d-lg-flex d-md-flex d-block justify-content-center\">\r\n            <Btn2\r\n              BtnName=\"Dashboard\"\r\n              :icon=\"'arrow-left'\"\r\n              backgroundColor=\"none\"\r\n              @click=\"goBack('dashboard')\"\r\n              class=\"text-secondary btn-sm\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\nconst goBack = (page) => {\r\n  emit(\"updatePage\", page);\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","import script from \"./UI-SuccessPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-SuccessPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-SuccessPage.vue?vue&type=style&index=0&id=5e9a7500&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e9a7500\"]])\n\nexport default __exports__","import { render } from \"./BIOMD.vue?vue&type=template&id=31835841&scoped=true\"\nimport script from \"./BIOMD.vue?vue&type=script&lang=js\"\nexport * from \"./BIOMD.vue?vue&type=script&lang=js\"\n\nimport \"./BIOMD.vue?vue&type=style&index=0&id=31835841&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31835841\"]])\n\nexport default __exports__"],"names":["components","DepartmentDescription","Btn2","Btn","Header","name","props","tabid","type","String","emits","setup","emit","store","useStore","Institute_Code","computed","state","globalStore","UserInfo","Institute_Info","Code","changeServiceState","serviceState","dispatch","redirectToPage","service","tabcode","value","status","ref","departmentName","shortName","selectedFacility","facilityName","_id","GlobalDepartmentInformation","facilityID","sendSocketReq","request","changePage","async","page","createRecord","data","Expiry","Type","Request","Module","ServiceCode","API","collection","record","DepartmentRecord","serialize","callback","res","console","log","Response","goBack","provide","props_variable","toRefs","facilityInfo","selectedCountry","Loci_Name_Country","Loci_Code_Country","selectedState","Loci_Name_State","Loci_Code_State","selectedDistrict","Loci_Name_Area_L1","Loci_Code_Area_L1","streetAddress1","streetAddress2","zipCode","departments","GlobalFacilityDefinition","facilityAddress","Country","State","District","FacilityRecord","country","area","city","address_1","address_2","areaCode","getValues","Site_Info","FacilityInformation","manufacturerInfo","manufacturerName","Global_Manufacturer_Definition","manufacturerAddress","ManufacturerRecord","ManufacturerInformation","ModelDesc","modelName","deviceDescription","commonName","selectedManufacturer","GlobalModelInformation","manufacturerID","ModelRecord","subTitle","ASSET","FACILITY","FACILITYSiteDescription","VENDOR","MODEL","DEPARTMENT","MANUFACTURER","DASHBOARD","REPORTS","REPORTSList","REPORTSSummary1","REPORTSSummary2","REPORTSFunctionality","REPORTSAnnualInflow","Landing","SuccessPage","DASHBOARDModel","DASHBOARDAssetDetail","DASHBOARDManufacturerProfile","compState","pageProps","updatePage","assetProfile","parentAssetProfile","workOrders","ID","title","daysOpen","dateOpen","fetchAsset","return_array","max_list","find","queries","field","op","assetCode","lookups","localField","foreignField","as","projection","modelID","parentAssetID","manufactureDate","serialNumber","locationName","comment","parentAssetCode","parentModel","parentManufacturer","records","error","fetchParentAsset","parentModelName","parentManufaturerName","onMounted","__exports__","modelList","manufacturerList","vendorList","fetchModel","UMDNSCode","fetchManufacturer","fetchVendor","vendorName","manufacturer","assetList","parentAsset","parentAssetName","inject","facilityList","fetchFacility","event","target","InputEvent","inputType","facility","fetchDepartment","departmentList","yearsList","selectedYear","currentYear","Date","toLocaleDateString","getYearsList","startYear","endYear","getFullYear","i","reportList","overallDevices","overallValue","fetchReport","reportType","reportSpecs","year","forEach","asset","totalCost","acceptedDevices","percentage","active","inactive","overallActive","overallInactive","assets","model","quantity","inService","class","_createElementBlock","_createElementVNode","_createVNode","_component_Header","_component_Btn2","BtnName","icon","backgroundColor","onClick","$setup","_component_DepartmentDescription","_component_Btn","_component_FacilityInformation","_component_ManufacturerInformation","_component_DASHBOARD","onUpdatePage","_component_DASHBOARDModel","_component_DASHBOARDAssetDetail","_component_DASHBOARDManufacturerProfile","vendorID","_component_REPORTS","_component_REPORTSList","_component_REPORTSSummary1","_component_REPORTSSummary2","_component_REPORTSFunctionality","_component_REPORTSAnnualInflow","_component_FACILITYSiteDescription","_createBlock","_component_ASSET","_component_FACILITY","_component_DEPARTMENT","_component_VENDOR","_component_MANUFACTURER","_component_MODEL","_component_SuccessPage"],"sourceRoot":""}