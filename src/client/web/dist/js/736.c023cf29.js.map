{"version":3,"file":"js/736.c023cf29.js","mappings":"qlBAuEA,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,EAAiBC,IACrBH,EAAMI,SAAS,gBAAiBD,IAE5BE,GAAeC,EAAAA,EAAAA,IAAI,IACnBC,EAAgBC,UACpB,IACEN,EAAc,CACZO,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,cACLC,cAAc,EACdC,SAAU,IACVC,KAAM,CACJC,WAAY,WACZC,WAAY,CACVC,IAAK,EACLC,aAAc,MAKtBC,SAAWC,IACQ,aAAbA,EAAIb,MACNc,QAAQC,IAAI,yBAAuBF,EAAIG,UACvCtB,EAAauB,MAAQJ,EAAIG,SAASE,SACzBL,EAAIb,QASnB,MAAOmB,GACPL,QAAQC,IAAII,KAKVC,EAAavB,MAAOwB,EAAMC,KAC9BC,EAAK,aAAcF,EAAMC,I,OAE3BE,EAAAA,EAAAA,KAAU,KACR5B,O,oiBCrHF,MAAM6B,EAAc,EAEpB","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-REPORTS/REPORTS.vue?3de5"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <nav class=\"d-flex gap-3 p-2\">\r\n      <small\r\n        class=\"text-secondary\"\r\n        style=\"cursor: pointer\"\r\n        @click=\"changePage('dashboard')\"\r\n        >Dashboard</small\r\n      >\r\n    </nav>\r\n\r\n    <div class=\"d-flex flex-column p-2 mt-4\">\r\n      <span class=\"title text-dark fw-normal fs-1\">Reports</span>\r\n      <span class=\"sub-title fs-6 fw-normal\"\r\n        >Select Facility to generate reports</span\r\n      >\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <!-- <div\r\n          v-for=\"facility in facilityList\"\r\n          :key=\"facility.index\"\r\n          class=\"col-lg-4 col-md-8 col-12 p-2 mb-3 mt-4\"\r\n        >\r\n          <label for=\"facilityList\" class=\"form-label\">Select Facility</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"facilityListOptions\"\r\n            id=\"facilityList\"\r\n            placeholder=\"Select facility\"\r\n            aria-label=\"Default select example\"\r\n            @input=\"fetchFacility\"\r\n            @change=\"\r\n              changePage('reportsList', {\r\n                facilityName: facility.facilityName,\r\n                facilityID: facility._id,\r\n              })\r\n            \"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"facilityListOptions\">\r\n            <option\r\n              v-for=\"facility in facilityList\"\r\n              :key=\"facility.index\"\r\n              :value=\"facility.facilityName\"\r\n            ></option>\r\n          </datalist>\r\n        </div> -->\r\n        <div class=\"list-group col-lg-4 col-md-8 col-12 mb-3\">\r\n          <span\r\n            v-for=\"facility in facilityList\"\r\n            :key=\"facility.index\"\r\n            @click=\"\r\n              changePage('reportsList', {\r\n                facilityName: facility.facilityName,\r\n                facilityID: facility._id,\r\n              })\r\n            \"\r\n            class=\"list-group-item list-group-item-action list-group-item-light\"\r\n            style=\"cursor: pointer\"\r\n            >{{ facility.facilityName }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\nconst facilityList = ref([]);\r\nconst fetchFacility = async () => {\r\n  try {\r\n    sendSocketReq({\r\n      data: {\r\n        Expiry: 20000,\r\n        Type: \"REQUEST\",\r\n        Request: {\r\n          Module: \"MEMS\",\r\n          ServiceCode: \"BIOMD\",\r\n          API: \"FIND_RECORD\",\r\n          return_array: true,\r\n          max_list: 100,\r\n          find: {\r\n            collection: \"Facility\",\r\n            projection: {\r\n              _id: 1,\r\n              facilityName: 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      callback: (res) => {\r\n        if (res.Type === \"RESPONSE\") {\r\n          console.log(\"Response Packet -->\", res.Response);\r\n          facilityList.value = res.Response.records;\r\n        } else if (res.Type === \"ERROR\") {\r\n          Type: \"ERROR\";\r\n          Response: {\r\n            Error_Code: \"API-CREATE_RECORD-E001\";\r\n            Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n          }\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst emit = defineEmits([\"updatePage\"]);\r\n// Navigate to selected page to edit\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\nonMounted(() => {\r\n  fetchFacility();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./REPORTS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./REPORTS.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","sendSocketReq","request","dispatch","facilityList","ref","fetchFacility","async","data","Expiry","Type","Request","Module","ServiceCode","API","return_array","max_list","find","collection","projection","_id","facilityName","callback","res","console","log","Response","value","records","error","changePage","page","props","emit","onMounted","__exports__"],"sourceRoot":""}