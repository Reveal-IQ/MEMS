{"version":3,"file":"js/2754.d40148e8.js","mappings":"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","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AdditionalInformation.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AdditionalInformation.vue?c5f6","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AssetDetails.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AssetDetails.vue?d632","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AssetLocation.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AssetLocation.vue?ade0","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MaintenanceAndSupport.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MaintenanceAndSupport.vue?6960","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MultipleEquipmentEntry.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MultipleEquipmentEntry.vue?9e9e","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-PurchaseDetails.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-PurchaseDetails.vue?93e8","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET.vue?f615","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn.vue?d9b9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-FormHeader.vue"],"sourcesContent":["<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : < 03-Sep-2022 >    \r\nVersion    : < 0.0.1 >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"New Asset\"\r\n            subTitle=\"Create a new asset with this form\"\r\n          />\r\n          {{ Institute_Code }}\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"goBack\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <AssetDetails />\r\n        <AssetLocation />\r\n        <MaintenanceAndSupport />\r\n        <!-- <PurchaseDetails /> -->\r\n        <!--<MultipleEquipmentEntry /> -->\r\n        <AdditionalInformation />\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Asset\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              :showLoading=\"true\"\r\n              @click=\"createRecord()\"\r\n            />\r\n\r\n            <Btn\r\n              BtnName=\"Clear Content\"\r\n              @click=\"clearContent()\"\r\n              :showLoading=\"true\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\"; // Access Vuew Store Variables and Methods\r\nimport { ref, toRefs, provide, computed } from \"vue\";\r\n\r\nimport AssetDetails from \"./ASSET-AssetDetails.vue\";\r\nimport AssetLocation from \"./ASSET-AssetLocation.vue\";\r\nimport PurchaseDetails from \"./ASSET-PurchaseDetails.vue\";\r\nimport MaintenanceAndSupport from \"./ASSET-MaintenanceAndSupport.vue\";\r\nimport MultipleEquipmentEntry from \"./ASSET-MultipleEquipmentEntry.vue\";\r\nimport AdditionalInformation from \"./ASSET-AdditionalInformation.vue\";\r\nimport { AssetRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    AssetDetails,\r\n    AssetLocation,\r\n    MaintenanceAndSupport,\r\n    AdditionalInformation,\r\n    MultipleEquipmentEntry,\r\n    PurchaseDetails,\r\n    Btn2,\r\n    Btn,\r\n    Header,\r\n  },\r\n  name: \"equipment\",\r\n  // Define Props here\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  // Emit value can pass within this array\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const { props_variable } = toRefs(props); // include variables from the props with help of toRefs\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n\r\n    const AssetDetails = ref({\r\n      assetCode: null,\r\n      selectedParentAsset: { _id: null },\r\n      serialNumber: null,\r\n      selectedManufacturer: { manufacturerName: null, _id: null },\r\n      selectedModel: {\r\n        modelName: null,\r\n        _id: null,\r\n        commonName: null,\r\n        UMDNSCode: null,\r\n      },\r\n      manufactureDate: null,\r\n      status: \"Active Deployed\",\r\n    });\r\n\r\n    const AssetLocation = ref({\r\n      selectedFacility: {\r\n        _id: null,\r\n        name: null,\r\n      },\r\n      selectedDepartment: {\r\n        _id: null,\r\n        name: null,\r\n        shortName: null,\r\n      },\r\n      locationName: null,\r\n    });\r\n\r\n    const PurchaseDetails = ref({\r\n      selectedPurchaseOrder: {\r\n        _id: null,\r\n        purchaseOrderNumber: null,\r\n      },\r\n      acceptanceDate: null,\r\n    });\r\n\r\n    const MaintenanceAndSupport = ref({\r\n      supportTeam: null,\r\n    });\r\n\r\n    const AdditionalInformation = ref({\r\n      comment: null,\r\n    });\r\n\r\n    const GlobalAssetInformation = ref({\r\n      parentAssetID: null,\r\n      manufacturerID: null,\r\n      modelID: null,\r\n      facilityID: null,\r\n      departmentID: null,\r\n      purchaseOrderID: null,\r\n      vendorID: null,\r\n    });\r\n\r\n    const changePage = (page) => {\r\n      emit(\"updatePage\", page);\r\n    };\r\n\r\n    // send Socket Request use to send rrequest packet for an API\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n\r\n    // Function to Send Request and Get Response by this template code .\r\n    function createRecord() {\r\n      // send Request as below .\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Asset\",\r\n            record: new AssetRecord({\r\n              assetCode: AssetDetails.value.assetCode,\r\n              parentAssetID: GlobalAssetInformation.value.parentAssetID,\r\n              serialNumber: AssetDetails.value.serialNumber,\r\n              manufacturerID: GlobalAssetInformation.value.manufacturerID,\r\n              modelID: GlobalAssetInformation.value.modelID,\r\n              manufactureDate: AssetDetails.value.manufactureDate,\r\n              status: AssetDetails.value.status,\r\n              facilityID: GlobalAssetInformation.value.facilityID,\r\n              departmentID: GlobalAssetInformation.value.departmentID,\r\n              locationName: AssetLocation.value.locationName,\r\n              supportTeam: MaintenanceAndSupport.value.supportTeam,\r\n              purchaseOrderID: GlobalAssetInformation.value.purchaseOrderID,\r\n              acceptanceDate: PurchaseDetails.value.acceptanceDate,\r\n              vendorID: GlobalAssetInformation.value.vendorID,\r\n              comment: AdditionalInformation.value.comment,\r\n            }).serialize(),\r\n            Institute_Code: Institute_Code.value, //Dynamically changes when another institute logged in\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            changePage(\"success\");\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"dashboard\");\r\n    };\r\n\r\n    provide(\"AssetDetails\", AssetDetails);\r\n    provide(\"AssetLocation\", AssetLocation);\r\n    provide(\"MaintenanceAndSupport\", MaintenanceAndSupport);\r\n    provide(\"PurchaseDetails\", PurchaseDetails);\r\n    provide(\"AdditionalInformation\", AdditionalInformation);\r\n    provide(\"GlobalAssetInformation\", GlobalAssetInformation);\r\n\r\n    return {\r\n      goBack,\r\n      redirectToPage,\r\n      createRecord,\r\n      changePage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../GLOBAL//Styles//colors.scss\";\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  background-color: $White;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","<template>\r\n  <Section sectionTitle=\"Additional Information\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Comments -->\r\n      <div class=\"col-lg-12 col-md-12 mb-3\">\r\n        <label for=\"commentSection\" class=\"form-label\">Comments</label>\r\n        <div class=\"input-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"commentSection\"\r\n            aria-describedby=\"basic-addon3\"\r\n            placeholder=\"Enter Comments\"\r\n            v-model=\"AdditionalInformation.comment\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject } from \"vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst AdditionalInformation = inject(\"AdditionalInformation\");\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-AdditionalInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-AdditionalInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-AdditionalInformation.vue?vue&type=style&index=0&id=3f455acc&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3f455acc\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Asset Details\">\r\n    <!-- Equipment Number -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        label=\"Equipment Number\"\r\n        type=\"text\"\r\n        id=\"assetCode\"\r\n        placeholder=\"Enter Equipment Number\"\r\n        v-model=\"AssetDetails.assetCode\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Parent Asset -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <div>\r\n        <label for=\"assetList\" class=\"form-label\">Parent Equipment</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"assetListOptions\"\r\n          id=\"assetList\"\r\n          placeholder=\"Select Parent Equipment\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"AssetDetails.selectedParentAsset.assetCode\"\r\n          @input=\"fetchParentAsset\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"assetListOptions\">\r\n          <option\r\n            v-for=\"asset in assetList\"\r\n            :key=\"asset.index\"\r\n            :value=\"asset.assetCode\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <div class=\"py-3 px-2\" v-if=\"AssetDetails.selectedParentAsset.assetCode\">\r\n        <span class=\"fw-bold\">Asset Profile</span>\r\n        <div class=\"d-flex flex-column gap-1\">\r\n          <div>\r\n            <span\r\n              >Manufacturer:\r\n              {{ AssetDetails.selectedParentAsset.manufacturerName }}</span\r\n            >\r\n          </div>\r\n          <div>\r\n            <span>Model: {{ AssetDetails.selectedParentAsset.modelName }}</span>\r\n          </div>\r\n\r\n          <div>\r\n            <span\r\n              >Serial Number:\r\n              {{ AssetDetails.selectedParentAsset.serialNumber }}</span\r\n            >\r\n          </div>\r\n          <div class=\"d-flex gap-3 align-items-center\">\r\n            <span>Status: </span>\r\n            <span class=\"badge rounded-pill bg-success\">{{\r\n              AssetDetails.selectedParentAsset.status\r\n            }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        label=\"Serial Number\"\r\n        type=\"text\"\r\n        id=\"serialNumber\"\r\n        placeholder=\"Enter Serial Number\"\r\n        v-model=\"AssetDetails.serialNumber\"\r\n      />\r\n    </div>\r\n    <!-- Manufacturer -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"manufacturerList\" class=\"form-label\">Manufacturer</label>\r\n      <input\r\n        class=\"form-control\"\r\n        list=\"manufacturerListOptions\"\r\n        id=\"manufacturerList\"\r\n        placeholder=\"Select Manufacturer\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetDetails.selectedManufacturer.manufacturerName\"\r\n        @input=\"fetchManufacturer\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <datalist id=\"manufacturerListOptions\">\r\n        <option\r\n          v-for=\"manufacturer in manufacturerList\"\r\n          :key=\"manufacturer.index\"\r\n          :value=\"manufacturer.manufacturerName\"\r\n        ></option>\r\n      </datalist>\r\n    </div>\r\n\r\n    <!-- Model Name -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <div>\r\n        <label for=\"modelList\" class=\"form-label\">Model</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"modelListOptions\"\r\n          id=\"modelList\"\r\n          placeholder=\"Select Model\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"AssetDetails.selectedModel.modelName\"\r\n          @input=\"fetchModel\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"modelListOptions\">\r\n          <option\r\n            v-for=\"model in modelList\"\r\n            :key=\"model.index\"\r\n            :value=\"model.modelName\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <div class=\"py-3 px-2\" v-if=\"AssetDetails.selectedModel.modelName\">\r\n        <span class=\"fw-bold\">Model Profile</span>\r\n        <div class=\"d-flex flex-column gap-1\">\r\n          <span>Common Name: {{ AssetDetails.selectedModel.commonName }}</span>\r\n          <span>UMDNS Code: {{ AssetDetails.selectedModel.UMDNSCode }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Year of Manufacture -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        label=\"Year of manufacture\"\r\n        type=\"date\"\r\n        id=\"yearOfManufacture\"\r\n        placeholder=\"Enter Year of manufacture\"\r\n        v-model=\"AssetDetails.manufactureDate\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"statusList\" class=\"form-label\">Status</label>\r\n      <select\r\n        id=\"statusList\"\r\n        class=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetDetails.status\"\r\n      >\r\n        <option\r\n          v-for=\"list in statusList\"\r\n          :key=\"list.value\"\r\n          :value=\"list.value\"\r\n          :selected=\"list.selected\"\r\n        >\r\n          {{ list.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst manufacturerList = ref(null);\r\nconst modelList = ref(null);\r\nconst assetList = ref(null);\r\n\r\nconst statusList = ref([\r\n  { name: \"Active Deployed\", value: \"Active Deployed\", selected: true },\r\n  { name: \"Active in Storage\", value: \"Active in Storage\" },\r\n  { name: \"Active in Service\", value: \"Active in Service\" },\r\n  { name: \"Storage Repairable\", value: \"Storage Repairable\" },\r\n  { name: \"Storage Parts\", value: \"Storage Parts\" },\r\n  { name: \"Disposed\", value: \"Disposed\" },\r\n]);\r\n\r\n// Inject Asset Information\r\nconst AssetDetails = inject(\"AssetDetails\");\r\nconst GlobalAssetInformation = inject(\"GlobalAssetInformation\");\r\n\r\nconst fetchManufacturer = async (event) => {\r\n  try {\r\n    const selectedManufacturer = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetDetails.value.selectedManufacturer = manufacturerList.value.find(\r\n        (manufacturer) => {\r\n          return selectedManufacturer === manufacturer.manufacturerName;\r\n        }\r\n      );\r\n      GlobalAssetInformation.value.manufacturerID =\r\n        AssetDetails.value.selectedManufacturer._id;\r\n      await fetchModel();\r\n    } else {\r\n      GlobalAssetInformation.value.manufacturerID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Manufacturer\",\r\n              queries: [\r\n                {\r\n                  field: \"manufacturerName\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                manufacturerName: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            manufacturerList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchModel = async (event) => {\r\n  try {\r\n    const selectedModel = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetDetails.value.selectedModel = modelList.value.find((model) => {\r\n        return selectedModel === model.modelName;\r\n      });\r\n      GlobalAssetInformation.value.modelID =\r\n        AssetDetails.value.selectedModel._id;\r\n    } else {\r\n      GlobalAssetInformation.value.modelID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Model\",\r\n              queries: [\r\n                {\r\n                  field: \"manufacturerID\",\r\n                  op: \"eq_id\",\r\n                  value: GlobalAssetInformation.value.manufacturerID,\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                modelName: 1,\r\n                commonName: 1,\r\n                UMDNSCode: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            modelList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchParentAsset = async (event) => {\r\n  try {\r\n    const selectedParentAsset = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetDetails.value.selectedParentAsset = assetList.value.find((asset) => {\r\n        return selectedParentAsset === asset.assetCode;\r\n      });\r\n      GlobalAssetInformation.value.parentAssetID =\r\n        AssetDetails.value.selectedParentAsset._id;\r\n    } else {\r\n      GlobalAssetInformation.value.parentAssetID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Asset\",\r\n              queries: [\r\n                {\r\n                  field: \"assetCode\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              lookups: [\r\n                {\r\n                  localField: \"modelID\",\r\n                  collection: \"Model\",\r\n                  foreignField: \"_id\",\r\n                  as: \"Model\",\r\n                },\r\n                {\r\n                  localField: \"manufacturerID\",\r\n                  collection: \"Manufacturer\",\r\n                  foreignField: \"_id\",\r\n                  as: \"Manufacturer\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                assetCode: 1,\r\n                status: 1,\r\n                serialNumber: 1,\r\n                modelName: \"$Model.modelName\",\r\n                manufacturerName: \"$Manufacturer.manufacturerName\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            assetList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchManufacturer();\r\n  fetchParentAsset();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../BIOMD/BIOMD/Style/font-style.scss\";\r\n</style>\r\n","import script from \"./ASSET-AssetDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-AssetDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-AssetDetails.vue?vue&type=style&index=0&id=16b7251e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-16b7251e\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Asset Location\">\r\n    <!-- Facility -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"facilityList\" class=\"form-label\">Facility</label>\r\n      <input\r\n        class=\"form-control\"\r\n        list=\"facilityListOptions\"\r\n        id=\"facilityList\"\r\n        placeholder=\"Select facility\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetLocation.selectedFacility.facilityName\"\r\n        @input=\"fetchFacility\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <datalist id=\"facilityListOptions\">\r\n        <option\r\n          v-for=\"facility in facilityList\"\r\n          :key=\"facility.index\"\r\n          :value=\"facility.facilityName\"\r\n        ></option>\r\n      </datalist>\r\n    </div>\r\n\r\n    <!-- Department -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"departmentList\" class=\"form-label\">Department</label>\r\n      <input\r\n        class=\"form-control\"\r\n        list=\"departmentListOptions\"\r\n        id=\"departmentList\"\r\n        placeholder=\"Select department\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetLocation.selectedDepartment.departmentName\"\r\n        @input=\"fetchDepartment\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <datalist id=\"departmentListOptions\">\r\n        <option\r\n          v-for=\"department in departmentList\"\r\n          :key=\"department.index\"\r\n          :value=\"department.departmentName\"\r\n        ></option>\r\n      </datalist>\r\n    </div>\r\n\r\n    <!-- Location -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <Input\r\n        class=\"form-control\"\r\n        id=\"locationName\"\r\n        label=\"Location\"\r\n        placeholder=\"Enter Location\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"AssetLocation.locationName\"\r\n        autocomplete=\"off\"\r\n      />\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst facilityList = ref(null);\r\nconst departmentList = ref(null);\r\n\r\nconst AssetLocation = inject(\"AssetLocation\");\r\nconst GlobalAssetInformation = inject(\"GlobalAssetInformation\");\r\n\r\nconst fetchFacility = async (event) => {\r\n  try {\r\n    const selectedFacility = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetLocation.value.selectedFacility = facilityList.value.find(\r\n        (facility) => {\r\n          return selectedFacility === facility.facilityName;\r\n        }\r\n      );\r\n      GlobalAssetInformation.value.facilityID =\r\n        AssetLocation.value.selectedFacility._id;\r\n      await fetchDepartment();\r\n    } else {\r\n      GlobalAssetInformation.value.facilityID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Facility\",\r\n              queries: [\r\n                {\r\n                  field: \"facilityName\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                facilityName: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            facilityList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchDepartment = async (event) => {\r\n  try {\r\n    const selectedDepartment = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      AssetLocation.value.selectedDepartment = departmentList.value.find(\r\n        (department) => {\r\n          return selectedDepartment === department.departmentName;\r\n        }\r\n      );\r\n      GlobalAssetInformation.value.departmentID =\r\n        AssetLocation.value.selectedDepartment.shortName;\r\n    } else {\r\n      GlobalAssetInformation.value.departmentID = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Department\",\r\n              queries: [\r\n                {\r\n                  field: \"facilityID\",\r\n                  op: \"sb\",\r\n                  value: GlobalAssetInformation.value.facilityID,\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                facilityID: 1,\r\n                departmentName: 1,\r\n                shortName: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            departmentList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchFacility();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-AssetLocation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-AssetLocation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-AssetLocation.vue?vue&type=style&index=0&id=1a3795b0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1a3795b0\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Maintenance and Support\">\r\n    <!-- Assign Clinical Engineer -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"clinicalEngineerList\" class=\"form-label\"\r\n        >Assign Clinical Engineer</label\r\n      >\r\n      <select\r\n        id=\"clinicalEngineerList\"\r\n        class=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        <option selected>Assign Clinical Engineer</option>\r\n      </select>\r\n    </div>\r\n    <!-- Assign Support Team -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"supportTeamList\" class=\"form-label\"\r\n        >Assign Support Team</label\r\n      >\r\n      <select\r\n        id=\"supportTeamList\"\r\n        class=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        <option selected>Assign Support Team</option>\r\n      </select>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject } from \"vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst MaintenanceAndSupport = inject(\"MaintenanceAndSupport\");\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-MaintenanceAndSupport.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-MaintenanceAndSupport.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-MaintenanceAndSupport.vue?vue&type=style&index=0&id=175f2962&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-175f2962\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Multiple Equipment Entry\">\r\n    <div\r\n      v-for=\"equipment in multipleEquipment\"\r\n      :key=\"equipment.index\"\r\n      class=\"mb-3\"\r\n    >\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            aria-label=\"Close\"\r\n            @click=\"removeEquipment\"\r\n          ></button>\r\n        </div>\r\n\r\n        <!-- Equipment Number -->\r\n        <div class=\"col-lg-6 mb-3\">\r\n          <Input\r\n            label=\"Equipment Number\"\r\n            type=\"text\"\r\n            id=\"equipmentNumber\"\r\n            placeholder=\"Enter Equipment Number\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Serial Number -->\r\n        <div class=\"col-lg-6 mb-3\">\r\n          <Input\r\n            label=\"Serial Number\"\r\n            type=\"text\"\r\n            id=\"serialNumber\"\r\n            placeholder=\"Enter Serial Number\"\r\n          />\r\n        </div>\r\n        <!-- Department -->\r\n        <div class=\"col-lg-6 mb-3\">\r\n          <label for=\"departmentList\" class=\"form-label\">Department</label>\r\n          <select\r\n            id=\"departmentList\"\r\n            class=\"form-select\"\r\n            aria-label=\"Default select example\"\r\n          >\r\n            <option selected>Select Department</option>\r\n          </select>\r\n        </div>\r\n        <!-- Location -->\r\n        <div class=\"col-lg-6 mb-3\">\r\n          <Input\r\n            label=\"Location\"\r\n            type=\"text\"\r\n            id=\"locationTag\"\r\n            placeholder=\"Add Location Tag\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <div class=\"col position-relative\">\r\n        <Btn2\r\n          BtnName=\"Add New Equipment\"\r\n          backgroundColor=\"#1266F1\"\r\n          :icon=\"'plus'\"\r\n          @click=\"addEquipment\"\r\n          class=\"position-relative rounded-pill\"\r\n        >\r\n          <span\r\n            class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\"\r\n          >\r\n            {{ equipmentCount }}\r\n            <span class=\"visually-hidden\">unread messages</span>\r\n          </span>\r\n        </Btn2>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject } from \"vue\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\n// Multiple Equipment Entry\r\nconst multipleEquipment = ref([]);\r\nconst equipmentCount = ref(0);\r\n\r\nconst addEquipment = () => {\r\n  multipleEquipment.value.push([\r\n    {\r\n      Serial_Number: \"\",\r\n      Department: \"\",\r\n      Location: \"\",\r\n      Comments: \"\",\r\n    },\r\n  ]);\r\n  equipmentCount.value++;\r\n};\r\n\r\nconst removeEquipment = (index) => {\r\n  multipleEquipment.value.splice(index, 1);\r\n  equipmentCount.value--;\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n\r\n.btn-close {\r\n  position: relative;\r\n  float: right;\r\n  color: white;\r\n  top: -10px;\r\n  right: -10px;\r\n}\r\n</style>\r\n","import script from \"./ASSET-MultipleEquipmentEntry.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-MultipleEquipmentEntry.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-MultipleEquipmentEntry.vue?vue&type=style&index=0&id=1c238103&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1c238103\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Equipment Acquisition\">\r\n    <!-- Purchase Order Number -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"purchaseOrder\" class=\"form-label\"\r\n        >Purchase Order Number</label\r\n      >\r\n      <select\r\n        id=\"purchaseOrder\"\r\n        class=\"form-select\"\r\n        aria-label=\"Default select\"\r\n      >\r\n        <option selected>Select PO</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Acceptance Date -->\r\n    <div class=\"col-lg-6\">\r\n      <Input\r\n        label=\"Acceptance Date\"\r\n        type=\"date\"\r\n        id=\"acceptanceDate\"\r\n        placeholder=\"Select Acceptance Date\"\r\n        v-model=\"PurchaseDetails.acceptanceDate\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"py-3 px-2\">\r\n        <span class=\"fw-bold\">PO Details</span>\r\n        <div class=\"d-flex flex-column gap-1\">\r\n          <span>Vendor: </span>\r\n          <span>Purchase Order: </span>\r\n          <span>Purchase Date: </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"py-3 px-2\">\r\n        <span class=\"fw-bold\">Select Equipment Line Item</span>\r\n        <table class=\"table table-striped table-borderless\">\r\n          <thead class=\"\">\r\n            <tr>\r\n              <th scope=\"col\"></th>\r\n              <th scope=\"col\">Item Name</th>\r\n              <th scope=\"col\">Unit Price</th>\r\n              <th scope=\"col\">Currency</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Received Quantity</th>\r\n              <th scope=\"col\">Project</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"align-middle\">\r\n            <tr>\r\n              <td scope=\"row\">\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    value=\"\"\r\n                    id=\"defaultCheck1\"\r\n                  />\r\n                </div>\r\n              </td>\r\n              <td scope=\"row\">Intellivue MX800</td>\r\n              <td scope=\"row\">80</td>\r\n              <td scope=\"row\">USD</td>\r\n              <td scope=\"row\">20</td>\r\n              <td scope=\"row\">8</td>\r\n              <td scope=\"row\">GMH</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst vendorList = ref(null);\r\n\r\nconst PurchaseDetails = inject(\"PurchaseDetails\");\r\nconst GlobalAssetInformation = inject(\"GlobalAssetInformation\");\r\n\r\n// const fetchVendor = async (event) => {\r\n//   try {\r\n//     const selectedVendor = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       PurchaseDetails.value.selectedVendor = vendorList.value.find(\r\n//         (vendor) => {\r\n//           return selectedVendor === vendor.vendor_name;\r\n//         }\r\n//       );\r\n//       GlobalAssetInformation.value.vendorID =\r\n//         PurchaseDetails.value.selectedVendor._id;\r\n//     } else {\r\n//       GlobalAssetInformation.value.vendorID = null;\r\n\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"MEMS\",\r\n//             ServiceCode: \"BIOMD\",\r\n//             API: \"FIND_RECORD\",\r\n//             return_array: true,\r\n//             max_list: 100,\r\n//             find: {\r\n//               collection: \"Vendor\",\r\n//               queries: [\r\n//                 {\r\n//                   field: \"vendor_name\",\r\n//                   op: \"sb\",\r\n//                   value: \"^\",\r\n//                 },\r\n//               ],\r\n//               projection: {\r\n//                 _id: 1,\r\n//                 vendor_name: 1,\r\n//               },\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             // Console the Response Packet\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             vendorList.value = res.Response.records;\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-CREATE_RECORD-E001\";\r\n//               Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\nonMounted(() => {\r\n  // fetchVendor();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-PurchaseDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-PurchaseDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-PurchaseDetails.vue?vue&type=style&index=0&id=02a949ac&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-02a949ac\"]])\n\nexport default __exports__","import { render } from \"./ASSET.vue?vue&type=template&id=645e9454&scoped=true\"\nimport script from \"./ASSET.vue?vue&type=script&lang=js\"\nexport * from \"./ASSET.vue?vue&type=script&lang=js\"\n\nimport \"./ASSET.vue?vue&type=style&index=0&id=645e9454&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-645e9454\"]])\n\nexport default __exports__","<template>\r\n  <!-- reusable Button Block -->\r\n  <div\r\n    class=\"row d-flex align-items-center justify-content-center button fw-bold buttonBackground\"\r\n    :style=\"'--color:' + backgroundColor\"\r\n  >\r\n    <div\r\n      class=\"col-sm-10 bodyText d-flex justify-content-center align-center mt-3\"\r\n    >\r\n      <p class=\"pe-2 fsXs\">{{ BtnName }}</p>\r\n      <div class=\"iconFont text-light\">\r\n        <font-awesome-icon :icon=\"icon\" size=\"1x\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-2 mx-auto\" v-if=\"showLoader\">\r\n      <img\r\n        src=\"../../../../assets/media/btn_loader.gif\"\r\n        alt=\"\"\r\n        class=\"gifImage\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  BtnName: {\r\n    type: String,\r\n    default: \"Button\",\r\n  },\r\n  showLoader: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  backgroundColor: {\r\n    type: String,\r\n    default: \"#586974\",\r\n  },\r\n  icon: null,\r\n});\r\n\r\nlet icon = props.icon;\r\n\r\n// const emit = defineEmits([\"onUserClick\"]);\r\n\r\n// function emitClickEvent() {\r\n//   emit(\"onUserClick\");\r\n// }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.gifImage {\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n\r\n.button {\r\n  max-width: 300px !important;\r\n  min-width: 300px !important;\r\n  max-height: 50px !important;\r\n  min-height: 50px !important;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px !important;\r\n  font-style: normal;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n}\r\n\r\n.buttonBackground {\r\n  background-color: var(--color);\r\n}\r\n</style>\r\n","import script from \"./UI-Btn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Btn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Btn.vue?vue&type=style&index=0&id=e1e01dc0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e1e01dc0\"]])\n\nexport default __exports__","import script from \"./UI-FormHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-FormHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-FormHeader.vue?vue&type=style&index=0&id=7885740e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7885740e\"]])\n\nexport default __exports__"],"names":["components","AssetDetails","AssetLocation","MaintenanceAndSupport","AdditionalInformation","MultipleEquipmentEntry","PurchaseDetails","Btn2","Btn","Header","name","props","tabid","type","String","emits","setup","emit","props_variable","toRefs","store","useStore","Institute_Code","computed","state","globalStore","UserInfo","Institute_Info","Code","changeServiceState","serviceState","dispatch","redirectToPage","service","tabcode","value","status","ref","assetCode","selectedParentAsset","_id","serialNumber","selectedManufacturer","manufacturerName","selectedModel","modelName","commonName","UMDNSCode","manufactureDate","selectedFacility","selectedDepartment","shortName","locationName","selectedPurchaseOrder","purchaseOrderNumber","acceptanceDate","supportTeam","comment","GlobalAssetInformation","parentAssetID","manufacturerID","modelID","facilityID","departmentID","purchaseOrderID","vendorID","changePage","page","sendSocketReq","request","createRecord","data","Expiry","Type","Request","Module","ServiceCode","API","collection","record","AssetRecord","serialize","callback","res","console","log","Response","getValues","Site_Info","goBack","provide","inject","__exports__","manufacturerList","modelList","assetList","statusList","selected","fetchManufacturer","async","event","target","InputEvent","inputType","return_array","max_list","find","queries","field","op","projection","records","manufacturer","fetchModel","error","model","fetchParentAsset","lookups","localField","foreignField","as","asset","onMounted","facilityList","departmentList","fetchFacility","facilityName","facility","fetchDepartment","departmentName","department","multipleEquipment","equipmentCount","addEquipment","push","Serial_Number","Department","Location","Comments","removeEquipment","index","splice","icon","class","_createElementBlock","_createElementVNode","_createVNode","_component_Header","title","subTitle","_toDisplayString","_ctx","_component_Btn2","BtnName","backgroundColor","onClick","$setup","_component_AssetDetails","_component_AssetLocation","_component_MaintenanceAndSupport","_component_AdditionalInformation","_component_Btn","showLoading"],"sourceRoot":""}