{"version":3,"file":"js/6500.7250c18c.js","mappings":"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","sources":["webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-CustomerService.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-ManufacturerInfo.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-ModelInfo.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-VendorInformation.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-VendorInformation.vue?9ae9","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR.vue?7a93"],"sourcesContent":["import script from \"./VENDOR-CustomerService.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VENDOR-CustomerService.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VENDOR-CustomerService.vue?vue&type=style&index=0&id=64058028&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-64058028\"]])\n\nexport default __exports__","import script from \"./VENDOR-ManufacturerInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VENDOR-ManufacturerInfo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VENDOR-ManufacturerInfo.vue?vue&type=style&index=0&id=2dc51dbe&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2dc51dbe\"]])\n\nexport default __exports__","import script from \"./VENDOR-ModelInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VENDOR-ModelInfo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VENDOR-ModelInfo.vue?vue&type=style&index=0&id=639510fd&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-639510fd\"]])\n\nexport default __exports__","<template>\r\n  <main>\r\n    <!-- The main form -->\r\n    <Section sectionTitle=\"Vendor Information\">\r\n      <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 g-3\">\r\n        <!-- Vendor Name -->\r\n        <div class=\"col\">\r\n          <label for=\"vendorName\" class=\"form-label\">Vendor Name</label>\r\n          <div class=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"vendorName\"\r\n              aria-describedby=\"basic-addon3\"\r\n              placeholder=\"Enter Vendor Name\"\r\n              v-model=\"vendorInfo.vendorName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!-- Country -->\r\n        <div class=\"col\">\r\n          <label for=\"countryList\" class=\"form-label\">Country</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"countryOptions\"\r\n            id=\"countryList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"vendorInfo.selectedCountry.Loci_Name_Country\"\r\n            @input=\"fetchCountry\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"countryOptions\">\r\n            <option\r\n              v-for=\"country in countryList\"\r\n              :key=\"country.index\"\r\n              :value=\"country.Loci_Name_Country\"\r\n            ></option>\r\n          </datalist>\r\n        </div>\r\n        <!-- Province/State/Region -->\r\n\r\n        <div class=\"col\">\r\n          <label for=\"stateList\" class=\"form-label\"\r\n            >Province/State/Region</label\r\n          >\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"stateOptions\"\r\n            id=\"stateList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"vendorInfo.selectedState.Loci_Name_State\"\r\n            @input=\"fetchState\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"stateOptions\">\r\n            <option\r\n              v-for=\"state in stateList\"\r\n              :key=\"state.index\"\r\n              :value=\"state.Loci_Name_State\"\r\n            ></option>\r\n          </datalist>\r\n        </div>\r\n        <!-- City/District -->\r\n        <div class=\"col\">\r\n          <label for=\"districtList\" class=\"form-label\">District</label>\r\n          <input\r\n            class=\"form-control\"\r\n            list=\"districtOptions\"\r\n            id=\"districtList\"\r\n            placeholder=\"Type to search...\"\r\n            v-model=\"vendorInfo.selectedDistrict.Loci_Name_Area_L1\"\r\n            @input=\"fetchDistrict\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <datalist id=\"districtOptions\">\r\n            <option\r\n              v-for=\"district in districtList\"\r\n              :key=\"district.index\"\r\n              :value=\"district.Loci_Name_Area_L1\"\r\n            ></option>\r\n          </datalist>\r\n        </div>\r\n      </div>\r\n      <div class=\"row g-3 mt-3\">\r\n        <!-- Street Address 1 -->\r\n        <div class=\"col-12\">\r\n          <Input\r\n            label=\"Street Address 1\"\r\n            type=\"text\"\r\n            id=\"street1\"\r\n            placeholder=\"Enter Street Address 1\"\r\n            v-model=\"vendorInfo.streetAddress1\"\r\n          />\r\n        </div>\r\n        <!-- Street Address 2 -->\r\n        <div class=\"col-12\">\r\n          <Input\r\n            label=\"Street Address 2\"\r\n            type=\"text\"\r\n            id=\"street2\"\r\n            placeholder=\"Enter Street Address 2\"\r\n            v-model=\"vendorInfo.streetAddress2\"\r\n          />\r\n        </div>\r\n        <!-- Zip / Postal Code -->\r\n        <div class=\"col-lg-6\">\r\n          <Input\r\n            label=\"Zip/Postal Code\"\r\n            type=\"number\"\r\n            id=\"zip\"\r\n            placeholder=\"Enter Zip/Postal Code\"\r\n            v-model=\"vendorInfo.zipCode\"\r\n          />\r\n        </div>\r\n        <!-- Site ID -->\r\n        <div class=\"col-6\">\r\n          <Input\r\n            label=\"Site Id\"\r\n            type=\"text\"\r\n            id=\"siteId\"\r\n            placeholder=\"Enter Site ID\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Section>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\nconst store = useStore();\r\nconst vendorInfo = inject(\"vendorInfo\");\r\nconst Global_Vendor_Definition = inject(\"Global_Vendor_Definition\");\r\nconst countryList = ref(null);\r\nconst stateList = ref(null);\r\nconst districtList = ref(null);\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst fetchCountry = async (event) => {\r\n  try {\r\n    const selectedCountry = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n      vendorInfo.value.selectedCountry = countryList.value.find((country) => {\r\n        return selectedCountry === country.Loci_Name_Country;\r\n      });\r\n      Global_Vendor_Definition.value.vendorAddress.Country =\r\n        vendorInfo.value.selectedCountry.Loci_Code_Country;\r\n      // validateInput(\"Country\");\r\n      await fetchState();\r\n    } else {\r\n      // Clear Country, State, District, Mandal, Postal Code\r\n      Global_Vendor_Definition.value.vendorAddress.Country = null;\r\n      Global_Vendor_Definition.value.vendorAddress.State = null;\r\n      vendorInfo.value.selectedState = {\r\n        Loci_Name_Country: null,\r\n        Loci_Code_Country: null,\r\n      };\r\n      Global_Vendor_Definition.value.vendorAddress.District = null;\r\n      vendorInfo.value.selectedDistrict = {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      };\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"GLOBAL\",\r\n            ServiceCode: \"GLOBL\",\r\n            API: \"GET_GEO_LIST\",\r\n            Max_List: 500,\r\n            Criteria: {\r\n              Type_Code: \"CNTY\",\r\n              Loci_Name_Country: \"\",\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            countryList.value = res.Response.Country_List; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-GET_GEO_LIST-E001\";\r\n              Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchState = async (event) => {\r\n  try {\r\n    const selectedState = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n      vendorInfo.value.selectedState = stateList.value.find((state) => {\r\n        return selectedState === state.Loci_Name_State;\r\n      });\r\n      Global_Vendor_Definition.value.vendorAddress.State =\r\n        vendorInfo.value.selectedState.Loci_Code_State;\r\n      // validateInput(\"Country\");\r\n      await fetchDistrict();\r\n    } else {\r\n      // Clear Country, State, District, Mandal, Postal Code\r\n      Global_Vendor_Definition.value.vendorAddress.State = null;\r\n      Global_Vendor_Definition.value.vendorAddress.District = null;\r\n      vendorInfo.value.selectedDistrict = {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      };\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"GLOBAL\",\r\n            ServiceCode: \"GLOBL\",\r\n            API: \"GET_GEO_LIST\",\r\n            Max_List: 500,\r\n            Criteria: {\r\n              Type_Code: \"STATE\",\r\n              Loci_Code_Country:\r\n                Global_Vendor_Definition.value.vendorAddress.Country,\r\n              Loci_Name_State: \"\",\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            stateList.value = res.Response.State_List; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-GET_GEO_LIST-E001\";\r\n              Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchDistrict = async (event) => {\r\n  try {\r\n    const selectedDistrict = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      // determine if the value is in the datalist. If so, someone selected a value in the list!\r\n      vendorInfo.value.selectedDistrict = districtList.value.find((state) => {\r\n        return selectedDistrict === state.Loci_Name_Area_L1;\r\n      });\r\n      Global_Vendor_Definition.value.vendorAddress.District =\r\n        vendorInfo.value.selectedDistrict.Loci_Code_Area_L1;\r\n      // validateInput(\"Country\");\r\n      // await fetchState();\r\n    } else {\r\n      // Clear Country, State, District, Mandal, Postal Code\r\n      Global_Vendor_Definition.value.vendorAddress.District = null;\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"GLOBAL\",\r\n            ServiceCode: \"GLOBL\",\r\n            API: \"GET_GEO_LIST\",\r\n            Max_List: 500,\r\n            Criteria: {\r\n              Type_Code: \"ARL1\",\r\n              Loci_Code_Country:\r\n                Global_Vendor_Definition.value.vendorAddress.Country,\r\n              Loci_Code_State:\r\n                Global_Vendor_Definition.value.vendorAddress.State,\r\n              Loci_Name_District: \"\",\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            districtList.value = res.Response.ARL1_List; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-GET_GEO_LIST-E001\";\r\n              Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchCountry();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./VENDOR-VendorInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VENDOR-VendorInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VENDOR-VendorInformation.vue?vue&type=style&index=0&id=45a9896e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-45a9896e\"]])\n\nexport default __exports__","<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : < 03-Sep-2022 >    \r\nVersion    : < 0.0.1 >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer mb-5\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"Create New Vendor\"\r\n            subTitle=\"Enter all details required for this equipment vendor\"\r\n          />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"goBack\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <VendorInformation />\r\n        <CustomerService />\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <!-- btn-green and a-link are custom css for MEMS check base.css -->\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Vendor\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              @click=\"createRecord\"\r\n            />\r\n\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\"; // Access Vuew Store Variables and Methods\r\nimport { ref, toRefs, provide, computed } from \"vue\";\r\n\r\nimport VendorInformation from \"../BIOMD-VENDOR/VENDOR-VendorInformation.vue\";\r\nimport CustomerService from \"../BIOMD-VENDOR/VENDOR-CustomerService.vue\";\r\nimport ManufacturerInformation from \"../BIOMD-VENDOR/VENDOR-ManufacturerInfo.vue\";\r\nimport ModelInformation from \"../BIOMD-VENDOR/VENDOR-ModelInfo.vue\";\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    CustomerService,\r\n    VendorInformation,\r\n    ManufacturerInformation,\r\n    ModelInformation,\r\n    Btn2,\r\n    Btn,\r\n    Header,\r\n  },\r\n  name: \"vendor\",\r\n  // Define Props here\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  // Emit value can pass within this array\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const { props_variable } = toRefs(props); // include variables from the props with help of toRefs\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n    const vendorInfo = ref({\r\n      vendorName: null,\r\n      selectedCountry: { Loci_Name_Country: null, Loci_Code_Country: null },\r\n      selectedState: { Loci_Name_State: null, Loci_Code_State: null },\r\n      selectedDistrict: {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      },\r\n      streetAddress1: null,\r\n      streetAddress2: null,\r\n      zipCode: null,\r\n    });\r\n\r\n    const Global_Vendor_Definition = ref({\r\n      vendorAddress: {\r\n        Country: null,\r\n        State: null,\r\n        District: null,\r\n      },\r\n    });\r\n\r\n    // send Socket Request use to send rrequest packet for an API\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n    // Object to Store API Response Values\r\n    const getValues = ref({});\r\n    function function_name(parameters) {\r\n      // Write Function Code here .\r\n    }\r\n    // Function to Send Request and Get Response by this template code .\r\n    function createRecord() {\r\n      // send Request as below .\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Vendor\",\r\n            record: {\r\n              vendor_name: vendorInfo.value.vendorName,\r\n              country: Global_Vendor_Definition.value.vendorAddress.Country,\r\n              area: Global_Vendor_Definition.value.vendorAddress.State,\r\n              city: Global_Vendor_Definition.value.vendorAddress.District,\r\n              address_1: vendorInfo.value.streetAddress1,\r\n              address_2: vendorInfo.value.streetAddress2,\r\n              areaCode: vendorInfo.value.zipCode,\r\n              contactID: [],\r\n              manufacturer_id: [],\r\n            },\r\n            Institute_Code: Institute_Code.value, //Dynamically changes when another institute logged in\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            Type: \"RESPONSE\";\r\n            Response: {\r\n              // ID:\r\n              Success: TRUE;\r\n              Collection: \"vendors\";\r\n              Message: \"Created Record\";\r\n            }\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"landing\");\r\n    };\r\n\r\n    const changePage = async (page) => {\r\n      emit(\"updatePage\", page);\r\n    };\r\n\r\n    provide(\"vendorInfo\", vendorInfo);\r\n    provide(\"Global_Vendor_Definition\", Global_Vendor_Definition);\r\n\r\n    return {\r\n      // Return variables/Display Variables in HTML DOM\r\n      getValues,\r\n      // Send Functionality to HTML\r\n      goBack,\r\n      changePage,\r\n      function_name,\r\n      redirectToPage,\r\n      createRecord,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","import { render } from \"./VENDOR.vue?vue&type=template&id=26ee311c&scoped=true\"\nimport script from \"./VENDOR.vue?vue&type=script&lang=js\"\nexport * from \"./VENDOR.vue?vue&type=script&lang=js\"\n\nimport \"./VENDOR.vue?vue&type=style&index=0&id=26ee311c&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-26ee311c\"]])\n\nexport default __exports__"],"names":["__exports__","store","useStore","vendorInfo","inject","Global_Vendor_Definition","countryList","ref","stateList","districtList","sendSocketReq","request","dispatch","fetchCountry","async","selectedCountry","event","target","value","InputEvent","inputType","vendorAddress","Country","State","selectedState","Loci_Name_Country","Loci_Code_Country","District","selectedDistrict","Loci_Name_Area_L1","Loci_Code_Area_L1","data","Expiry","Type","Request","Module","ServiceCode","API","Max_List","Criteria","Type_Code","callback","res","console","log","Response","Country_List","find","country","fetchState","error","Loci_Name_State","State_List","state","Loci_Code_State","fetchDistrict","Loci_Name_District","ARL1_List","onMounted","class","_createElementBlock","_createElementVNode","_createVNode","_component_Header","title","subTitle","_component_Btn2","BtnName","icon","backgroundColor","onClick","$setup","_component_VendorInformation","_component_CustomerService","_component_Btn","components","CustomerService","VendorInformation","ManufacturerInformation","ModelInformation","Btn2","Btn","Header","name","props","tabid","type","String","emits","setup","emit","props_variable","toRefs","Institute_Code","computed","globalStore","UserInfo","Institute_Info","Code","changeServiceState","serviceState","redirectToPage","service","tabcode","status","vendorName","streetAddress1","streetAddress2","zipCode","getValues","function_name","parameters","createRecord","collection","record","vendor_name","area","city","address_1","address_2","areaCode","contactID","manufacturer_id","TRUE","Site_Info","goBack","changePage","page","provide","render"],"sourceRoot":""}