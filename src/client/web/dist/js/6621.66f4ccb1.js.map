{"version":3,"file":"js/6621.66f4ccb1.js","mappings":"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","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-TagInput.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-TagInput.vue?6968"],"sourcesContent":["// ui tag reference from https://github.com/mayank1513/tag-input\r\n\r\n<template>\r\n  <label :for=\"id\" v-if=\"label\" class=\"form-label\">{{ label }}</label>\r\n  <div\r\n    class=\"tag-input\"\r\n    :class=\"{ 'with-count': showCount, duplicate: noMatchingTag }\"\r\n  >\r\n    <input\r\n      v-model=\"newTag\"\r\n      type=\"text\"\r\n      :list=\"id\"\r\n      autocomplete=\"off\"\r\n      @keydown.prevent.enter=\"addTag(newTag)\"\r\n      @keydown.prevent.tab=\"addTag(newTag)\"\r\n      @keydown.delete=\"newTag.length || removeTag(tags.length - 1)\"\r\n      @input=\"addTagIfDelem(newTag)\"\r\n      :style=\"{ 'padding-left': `${paddingLeft}px` }\"\r\n      :placeholder=\"placeholder\"\r\n    />\r\n\r\n    <datalist v-if=\"options\" :id=\"id\">\r\n      <option v-for=\"option in availableOptions\" :key=\"option\" :value=\"option\">\r\n        {{ option }}\r\n      </option>\r\n    </datalist>\r\n\r\n    <ul class=\"tags\" ref=\"tagsUl\">\r\n      <li\r\n        v-for=\"(tag, index) in tags\"\r\n        :key=\"tag\"\r\n        :class=\"{\r\n          duplicate: tag === duplicate,\r\n          tag: tagsClass.length == 0,\r\n          [tagsClass]: true,\r\n        }\"\r\n      >\r\n        <span class=\"badge bg-secondary rounded-pill\">\r\n          {{ tag }}\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close btn-close-white ms-2\"\r\n            @click=\"removeTag(index)\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"showCount\" class=\"count\">\r\n      <span>{{ tags.length }}</span> tags\r\n    </div>\r\n  </div>\r\n  <small v-show=\"noMatchingTag\" class=\"err\">Custom tags not allowed</small>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, nextTick, onMounted, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"TagInput\",\r\n  props: {\r\n    name: { type: String, default: \"\" },\r\n    label: { type: String, default: \"\" },\r\n    placeholder: { type: String, default: \"Enter a tag\" },\r\n    modelValue: { type: Array, default: () => [] },\r\n    options: { type: Array, default: () => [] },\r\n    allowCustom: { type: Boolean, default: true },\r\n    showCount: { type: Boolean, default: false },\r\n    tagTextColor: { type: String, default: \"white\" },\r\n    tagBgColor: { type: String, default: \"rgb(250, 104, 104)\" },\r\n    tagClass: { type: String, default: \"\" },\r\n    customDelimiter: {\r\n      type: [String, Array],\r\n      default: () => [],\r\n      validator: (val) => {\r\n        if (typeof val == \"string\") return val.length == 1;\r\n        for (let i = 0; i < val.length; i++) {\r\n          if (typeof val[i] != \"string\" || val[i].length != 1) return false;\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    // Tags\r\n    const tags = ref(props.modelValue);\r\n    const tagsClass = ref(props.tagClass);\r\n    const newTag = ref(\"\");\r\n    const id = Math.random().toString(36).substring(7);\r\n    const customDelimiter = [\r\n      ...new Set(\r\n        (typeof props.customDelimiter == \"string\"\r\n          ? [props.customDelimiter]\r\n          : props.customDelimiter\r\n        ).filter((it) => it.length == 1)\r\n      ),\r\n    ];\r\n\r\n    // handling duplicates\r\n    const duplicate = ref(null);\r\n    const handleDuplicate = (tag) => {\r\n      duplicate.value = tag;\r\n      setTimeout(() => (duplicate.value = null), 1000);\r\n      newTag.value = \"\";\r\n    };\r\n    const noMatchingTag = ref(false);\r\n    function handleNoMatchingTag() {\r\n      noMatchingTag.value = true;\r\n      setTimeout(() => (noMatchingTag.value = false), 500);\r\n      let v = newTag.value;\r\n      if (customDelimiter.includes(v.charAt(v.length - 1)))\r\n        newTag.value = v.substr(0, v.length - 1);\r\n    }\r\n    const addTag = (tag) => {\r\n      tag = tag.trim();\r\n      if (!tag) return; // prevent empty tag\r\n      // only allow predefined tags when allowCustom is false\r\n      if (!props.allowCustom && !props.options.includes(tag)) {\r\n        //   display not a valid tag\r\n        handleNoMatchingTag();\r\n        return;\r\n      }\r\n      // return early if duplicate\r\n      if (tags.value.includes(tag)) {\r\n        handleDuplicate(tag);\r\n        return;\r\n      }\r\n      tags.value.push(tag);\r\n      newTag.value = \"\"; // reset newTag\r\n    };\r\n    const addTagIfDelem = (tag) => {\r\n      if (!customDelimiter || customDelimiter.length == 0) return;\r\n      if (customDelimiter.includes(tag.charAt(tag.length - 1)))\r\n        addTag(tag.substr(0, tag.length - 1));\r\n    };\r\n    const removeTag = (index) => {\r\n      tags.value.splice(index, 1);\r\n    };\r\n\r\n    // positioning and handling tag change\r\n    const paddingLeft = ref(10);\r\n    const tagsUl = ref(null);\r\n    const onTagsChange = () => {\r\n      // position cursor\r\n      const extraCushion = 15;\r\n      // tagsUl.value.style.setProperty(\"--tagBgColor\", props.tagBgColor);\r\n      // tagsUl.value.style.setProperty(\"--tagTextColor\", props.tagTextColor);\r\n      paddingLeft.value = tagsUl.value.clientWidth + extraCushion;\r\n      // scroll to end of tags\r\n      tagsUl.value.scrollTo(tagsUl.value.scrollWidth, 0);\r\n      // emit value on tags change\r\n      emit(\"update:modelValue\", tags.value);\r\n    };\r\n    watch(tags, () => nextTick(onTagsChange), { deep: true });\r\n    onMounted(onTagsChange);\r\n\r\n    // options\r\n    const availableOptions = computed(() => {\r\n      if (!props.options) return false;\r\n      return props.options.filter((option) => !tags.value.includes(option));\r\n    });\r\n\r\n    return {\r\n      tags,\r\n      tagsClass,\r\n      newTag,\r\n      addTag,\r\n      addTagIfDelem,\r\n      removeTag,\r\n      paddingLeft,\r\n      tagsUl,\r\n      availableOptions,\r\n      id,\r\n      duplicate,\r\n      noMatchingTag,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.tag-input {\r\n  position: relative;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 7px;\r\n  margin: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 10px;\r\n  max-width: 100%;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n}\r\n\r\nul::-webkit-scrollbar {\r\n  display: none; /* Safari and Chrome */\r\n}\r\n\r\n/* .tag {\r\n  background: rgb(94, 94, 94);\r\n  padding: 5px;\r\n  border-radius: 15px;\r\n  color: var(--tagTextColor);\r\n  white-space: nowrap;\r\n  transition: 0.1s ease background;\r\n  align-items: center;\r\n} */\r\n\r\n.btn-close {\r\n  box-shadow: none;\r\n}\r\n\r\n.tag.duplicate {\r\n  animation: shake 1s;\r\n}\r\n\r\n.duplicate input {\r\n  outline: rgb(40, 182, 229);\r\n  border: 1px solid rgb(235, 27, 27);\r\n  animation: shake1 0.5s;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n.count {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  right: 10px;\r\n  display: block;\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n}\r\n\r\n.count span {\r\n  background: #eee;\r\n  padding: 2px;\r\n  border-radius: 2px;\r\n}\r\n\r\n.with-count input {\r\n  padding-right: 60px;\r\n}\r\n\r\n.with-count ul {\r\n  max-width: 60%;\r\n}\r\n\r\n.err {\r\n  color: red;\r\n}\r\n\r\n@keyframes shake {\r\n  10%,\r\n  90% {\r\n    transform: scale(0.9) translate3d(-1px, 0, 0);\r\n  }\r\n  20%,\r\n  80% {\r\n    transform: scale(0.9) translate3d(2px, 0, 0);\r\n  }\r\n  30%,\r\n  50%,\r\n  70% {\r\n    transform: scale(0.9) translate3d(-4px, 0, 0);\r\n  }\r\n  40%,\r\n  60% {\r\n    transform: scale(0.9) translate3d(4px, 0, 0);\r\n  }\r\n}\r\n@keyframes shake1 {\r\n  10%,\r\n  90% {\r\n    transform: scale(0.99) translate3d(-1px, 0, 0);\r\n  }\r\n  20%,\r\n  80% {\r\n    transform: scale(0.98) translate3d(2px, 0, 0);\r\n  }\r\n  30%,\r\n  50%,\r\n  70% {\r\n    transform: scale(1) translate3d(-4px, 0, 0);\r\n  }\r\n  40%,\r\n  60% {\r\n    transform: scale(0.98) translate3d(4px, 0, 0);\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./UI-TagInput.vue?vue&type=template&id=095692d7&scoped=true\"\nimport script from \"./UI-TagInput.vue?vue&type=script&lang=js\"\nexport * from \"./UI-TagInput.vue?vue&type=script&lang=js\"\n\nimport \"./UI-TagInput.vue?vue&type=style&index=0&id=095692d7&scoped=true&lang=css\"\n\nimport exportComponent from \"/mnt/e/Dev/GitProjects/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-095692d7\"]])\n\nexport default __exports__"],"names":["class","ref","$props","_createElementBlock","for","$setup","_hoisted_1","_createElementVNode","duplicate","$event","type","list","autocomplete","onKeydown","length","onInput","style","placeholder","id","_Fragment","_renderList","option","key","value","_hoisted_4","tag","index","onClick","_toDisplayString","name","props","String","default","label","modelValue","Array","options","allowCustom","Boolean","showCount","tagTextColor","tagBgColor","tagClass","customDelimiter","validator","val","i","setup","emit","tags","tagsClass","newTag","Math","random","toString","substring","Set","filter","it","handleDuplicate","setTimeout","noMatchingTag","handleNoMatchingTag","v","includes","charAt","substr","addTag","trim","push","addTagIfDelem","removeTag","splice","paddingLeft","tagsUl","onTagsChange","extraCushion","clientWidth","scrollTo","scrollWidth","watch","nextTick","deep","onMounted","availableOptions","computed","__exports__","render"],"sourceRoot":""}