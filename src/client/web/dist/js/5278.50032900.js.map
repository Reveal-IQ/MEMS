{"version":3,"file":"js/5278.50032900.js","mappings":"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","sources":["webpack://mems-client/./node_modules/core-js/internals/error-stack-installable.js","webpack://mems-client/./node_modules/core-js/internals/function-apply.js","webpack://mems-client/./node_modules/core-js/internals/install-error-cause.js","webpack://mems-client/./node_modules/core-js/internals/proxy-accessor.js","webpack://mems-client/./node_modules/core-js/internals/wrap-error-constructor-with-cause.js","webpack://mems-client/./node_modules/core-js/modules/es.error.cause.js","webpack://mems-client/./src/store/modules/recordSchema.js","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn2.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn2.vue?1ca1","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Input.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Section.vue","webpack://mems-client/./node_modules/bson/lib/bson.mjs"],"sourcesContent":["var fails = require('../internals/fails');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = !fails(function () {\n  var error = Error('a');\n  if (!('stack' in error)) return true;\n  // eslint-disable-next-line es-x/no-object-defineproperty -- safe\n  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));\n  return error.stack !== 7;\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es-x/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","var isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\n// `InstallErrorCause` abstract operation\n// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\nmodule.exports = function (O, options) {\n  if (isObject(options) && 'cause' in options) {\n    createNonEnumerableProperty(O, 'cause', options.cause);\n  }\n};\n","var defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (Target, Source, key) {\n  key in Target || defineProperty(Target, key, {\n    configurable: true,\n    get: function () { return Source[key]; },\n    set: function (it) { Source[key] = it; }\n  });\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar proxyAccessor = require('../internals/proxy-accessor');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar installErrorCause = require('../internals/install-error-cause');\nvar clearErrorStack = require('../internals/clear-error-stack');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nmodule.exports = function (FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {\n  var STACK_TRACE_LIMIT = 'stackTraceLimit';\n  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;\n  var path = FULL_NAME.split('.');\n  var ERROR_NAME = path[path.length - 1];\n  var OriginalError = getBuiltIn.apply(null, path);\n\n  if (!OriginalError) return;\n\n  var OriginalErrorPrototype = OriginalError.prototype;\n\n  // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006\n  if (!IS_PURE && hasOwn(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;\n\n  if (!FORCED) return OriginalError;\n\n  var BaseError = getBuiltIn('Error');\n\n  var WrappedError = wrapper(function (a, b) {\n    var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, undefined);\n    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();\n    if (message !== undefined) createNonEnumerableProperty(result, 'message', message);\n    if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(result, 'stack', clearErrorStack(result.stack, 2));\n    if (this && isPrototypeOf(OriginalErrorPrototype, this)) inheritIfRequired(result, this, WrappedError);\n    if (arguments.length > OPTIONS_POSITION) installErrorCause(result, arguments[OPTIONS_POSITION]);\n    return result;\n  });\n\n  WrappedError.prototype = OriginalErrorPrototype;\n\n  if (ERROR_NAME !== 'Error') {\n    if (setPrototypeOf) setPrototypeOf(WrappedError, BaseError);\n    else copyConstructorProperties(WrappedError, BaseError, { name: true });\n  } else if (DESCRIPTORS && STACK_TRACE_LIMIT in OriginalError) {\n    proxyAccessor(WrappedError, OriginalError, STACK_TRACE_LIMIT);\n    proxyAccessor(WrappedError, OriginalError, 'prepareStackTrace');\n  }\n\n  copyConstructorProperties(WrappedError, OriginalError);\n\n  if (!IS_PURE) try {\n    // Safari 13- bug: WebAssembly errors does not have a proper `.name`\n    if (OriginalErrorPrototype.name !== ERROR_NAME) {\n      createNonEnumerableProperty(OriginalErrorPrototype, 'name', ERROR_NAME);\n    }\n    OriginalErrorPrototype.constructor = WrappedError;\n  } catch (error) { /* empty */ }\n\n  return WrappedError;\n};\n","/* eslint-disable no-unused-vars -- required for functions `.length` */\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar wrapErrorConstructorWithCause = require('../internals/wrap-error-constructor-with-cause');\n\nvar WEB_ASSEMBLY = 'WebAssembly';\nvar WebAssembly = global[WEB_ASSEMBLY];\n\nvar FORCED = Error('e', { cause: 7 }).cause !== 7;\n\nvar exportGlobalErrorCauseWrapper = function (ERROR_NAME, wrapper) {\n  var O = {};\n  O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);\n  $({ global: true, forced: FORCED }, O);\n};\n\nvar exportWebAssemblyErrorCauseWrapper = function (ERROR_NAME, wrapper) {\n  if (WebAssembly && WebAssembly[ERROR_NAME]) {\n    var O = {};\n    O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED);\n    $({ target: WEB_ASSEMBLY, stat: true, forced: FORCED }, O);\n  }\n};\n\n// https://github.com/tc39/proposal-error-cause\nexportGlobalErrorCauseWrapper('Error', function (init) {\n  return function Error(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('EvalError', function (init) {\n  return function EvalError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('RangeError', function (init) {\n  return function RangeError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('ReferenceError', function (init) {\n  return function ReferenceError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('SyntaxError', function (init) {\n  return function SyntaxError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('TypeError', function (init) {\n  return function TypeError(message) { return apply(init, this, arguments); };\n});\nexportGlobalErrorCauseWrapper('URIError', function (init) {\n  return function URIError(message) { return apply(init, this, arguments); };\n});\nexportWebAssemblyErrorCauseWrapper('CompileError', function (init) {\n  return function CompileError(message) { return apply(init, this, arguments); };\n});\nexportWebAssemblyErrorCauseWrapper('LinkError', function (init) {\n  return function LinkError(message) { return apply(init, this, arguments); };\n});\nexportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {\n  return function RuntimeError(message) { return apply(init, this, arguments); };\n});\n","/**\r\n * @file Record schema used by the client.\r\n *\r\n */\r\n\r\nimport { BSON, BSONType, ObjectId, Double, Timestamp, Long, Int32 } from \"bson\";\r\n\r\nclass Record {\r\n  /**\r\n   * Create a record based on the supported schema.\r\n   * @param {string} name record name.\r\n   * @param {*} data record data to transform.\r\n   */\r\n  constructor(name, data) {\r\n    this._name = name;\r\n    this._record = {};\r\n    const schema = this.getSchema();\r\n    Record._validateSchema(schema);\r\n    this._record = Record._fieldToBsonType(this.getName(), data, schema);\r\n  }\r\n\r\n  getName() {\r\n    return this._name;\r\n  }\r\n\r\n  getRecord() {\r\n    return this._record;\r\n  }\r\n\r\n  /**\r\n   * Transform record into BSON stream.\r\n   *\r\n   * @returns Byte stream\r\n   */\r\n  serialize() {\r\n    return Array.from(BSON.serialize(this._record));\r\n  }\r\n\r\n  /**\r\n   * @returns {object} Record schema object.\r\n   */\r\n  getSchema() {\r\n    throw new Error(\r\n      \"Cannot instantiate Record instance. Child classes should implement getSchema()\"\r\n    );\r\n  }\r\n\r\n  static _validateSchema(schema) {\r\n    if (typeof schema !== \"object\") {\r\n      throw new Error(\r\n        `Schema field should be an object: ${JSON.stringify(schema)}`\r\n      );\r\n    } else if (schema.type == undefined || schema.type == null) {\r\n      throw new Error(\r\n        `Schema field object should have 'type' key: ${JSON.stringify(schema)}`\r\n      );\r\n    } else if (!Object.values(BSONType).includes(schema.type)) {\r\n      throw new Error(\r\n        `Schema 'type' value is not a BSONType: ${JSON.stringify(schema)}`\r\n      );\r\n    } else if (schema.type == BSONType.array) {\r\n      if (schema.items == undefined || schema.items == null) {\r\n        throw new Error(\r\n          `Schema array field should have 'items' key: ${JSON.stringify(\r\n            schema\r\n          )}`\r\n        );\r\n      } else {\r\n        this._validateSchema(schema.items);\r\n      }\r\n    } else if (schema.type == BSONType.object) {\r\n      if (schema.fields == undefined || schema.fields == null) {\r\n        throw new Error(\r\n          `Schema array field should have 'fields' key: ${JSON.stringify(\r\n            schema\r\n          )}`\r\n        );\r\n      } else {\r\n        Object.keys(schema.fields).forEach((key) =>\r\n          this._validateSchema(schema.fields[key])\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform field data into BSON type based on schema.\r\n   * @param {string} label field label.\r\n   * @param {*} data underlying data.\r\n   * @param {*} schema BSON type to transform data.\r\n   * @returns\r\n   */\r\n  static _fieldToBsonType(label, data, schema) {\r\n    switch (schema.type) {\r\n      case BSONType.string:\r\n        return typeof data == \"string\" ? data : data.toString();\r\n      case BSONType.objectId:\r\n        return new ObjectId(data);\r\n      case BSONType.date:\r\n        return new Date(data);\r\n      case BSONType.timestamp:\r\n        return new Timestamp(data);\r\n      case BSONType.bool:\r\n        return data == true ? true : false;\r\n      case BSONType.int:\r\n        return new Int32(data);\r\n      case BSONType.long:\r\n        return new Long(data);\r\n      case BSONType.double:\r\n        return new Double(data);\r\n      case BSONType.array:\r\n        let data_arr = data\r\n          .filter((e) => e !== undefined || e !== null)\r\n          .map((item) => {\r\n            return Record._fieldToBsonType(label, item, schema.items);\r\n          });\r\n        return Array.isArray(data_arr) ? data_arr : [];\r\n      case BSONType.object:\r\n        const data_obj = Object.keys(data).reduce((obj, key) => {\r\n          if (data[key] !== undefined && data[key] !== null) {\r\n            if (key in schema.fields) {\r\n              obj[key] = Record._fieldToBsonType(\r\n                key,\r\n                data[key],\r\n                schema.fields[key]\r\n              );\r\n              return obj;\r\n            } else {\r\n              console.error(\r\n                `Unsupported field type for Record[${this._name}] field[${label}][${key}] : ${schema.type}`\r\n              );\r\n            }\r\n          }\r\n          return obj;\r\n        }, {});\r\n        return typeof data_obj === \"object\" ? data_obj : undefined;\r\n      default:\r\n        console.error(\r\n          `Unsupported field type for Record[${this._name}] field[${label}] : ${schema.type}`\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nclass AssetRecord extends Record {\r\n  constructor(data) {\r\n    super(\"Asset\", data);\r\n  }\r\n  getSchema() {\r\n    return {\r\n      type: BSONType.object,\r\n      fields: {\r\n        //Schema Version: 0.3.1\r\n        assetCode: { type: BSONType.string },\r\n        description: { type: BSONType.string },\r\n        serialNumber: { type: BSONType.string },\r\n        parentAssetID: { type: BSONType.objectId },\r\n        modelID: { type: BSONType.objectId },\r\n        manufacturerID: { type: BSONType.objectId },\r\n        manufactureDate: { type: BSONType.date },\r\n        facilityID: { type: BSONType.objectId },\r\n        departmentID: { type: BSONType.objectId },\r\n        locationName: { type: BSONType.string },\r\n        supportTeam: { type: BSONType.string },\r\n        vendorID: { type: BSONType.objectId },\r\n        status: { type: BSONType.string },\r\n        purchaseOrderID: { type: BSONType.objectId },\r\n        acceptanceDate: { type: BSONType.date },\r\n        purchaseCost: { type: BSONType.double },\r\n        comment: { type: BSONType.string },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nclass FacilityRecord extends Record {\r\n  constructor(data) {\r\n    super(\"Facility\", data);\r\n  }\r\n  getSchema() {\r\n    return {\r\n      type: BSONType.object,\r\n      fields: {\r\n        //Schema Version: 0.1.1\r\n        facilityName: { type: BSONType.string },\r\n        address_1: { type: BSONType.string },\r\n        address_2: { type: BSONType.string },\r\n        city: { type: BSONType.string },\r\n        area: { type: BSONType.string },\r\n        areaCode: { type: BSONType.string },\r\n        country: { type: BSONType.string },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nclass ManufacturerRecord extends Record {\r\n  constructor(data) {\r\n    super(\"Manufacturer\", data);\r\n  }\r\n  getSchema() {\r\n    return {\r\n      type: BSONType.object,\r\n      fields: {\r\n        //Schema Version: 0.1\r\n        manufacturerName: { type: BSONType.string },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nclass ModelRecord extends Record {\r\n  constructor(data) {\r\n    super(\"Model\", data);\r\n  }\r\n  getSchema() {\r\n    return {\r\n      type: BSONType.object,\r\n      fields: {\r\n        //Schema Version: v0.1\r\n        manufacturerID: { type: BSONType.objectId },\r\n        contactID: { type: BSONType.objectId },\r\n        modelName: { type: BSONType.string },\r\n        commonName: { type: BSONType.string },\r\n        UMDNSCode: { type: BSONType.string },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nclass VendorRecord extends Record {\r\n  constructor(data) {\r\n    super(\"Vendor\", data);\r\n  }\r\n  getSchema() {\r\n    return {\r\n      type: BSONType.object,\r\n      fields: {\r\n        //Schema Version: v0.1\r\n        vendorName: { type: BSONType.string },\r\n        country: { type: BSONType.string },\r\n        area: { type: BSONType.string },\r\n        city: { type: BSONType.string },\r\n        address_1: { type: BSONType.string },\r\n        address_2: { type: BSONType.string },\r\n        areaCode: { type: BSONType.string },\r\n        contactInfo: {\r\n          type: BSONType.array,\r\n          items: {\r\n            type: BSONType.object,\r\n            fields: {\r\n              number: { type: BSONType.string },\r\n              name: { type: BSONType.string },\r\n              email: { type: BSONType.string },\r\n              type: { type: BSONType.string },\r\n            },\r\n          },\r\n        },\r\n        manufacturerList: {\r\n          type: BSONType.array,\r\n          items: {\r\n            type: BSONType.object,\r\n            fields: {\r\n              manufacturer: { type: BSONType.objectId },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nclass DepartmentRecord extends Record {\r\n  constructor(data) {\r\n    super(\"Department\", data);\r\n  }\r\n  getSchema() {\r\n    return {\r\n      type: BSONType.object,\r\n      fields: {\r\n        // Schema Version: v0.1\r\n        facilityID: { type: BSONType.objectId },\r\n        departmentName: { type: BSONType.string },\r\n        shortName: { type: BSONType.string },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nconst _RECORD_BASE = Record;\r\n\r\nconst _RECORD_LIST = [\r\n  AssetRecord,\r\n  FacilityRecord,\r\n  ManufacturerRecord,\r\n  ModelRecord,\r\n  VendorRecord,\r\n  DepartmentRecord,\r\n];\r\n\r\nexport {\r\n  _RECORD_BASE,\r\n  _RECORD_LIST,\r\n  AssetRecord,\r\n  FacilityRecord,\r\n  ManufacturerRecord,\r\n  ModelRecord,\r\n  VendorRecord,\r\n  DepartmentRecord,\r\n};\r\n","<template>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn buttonBackground d-inline-flex align-items-center fs-6 rounded\"\r\n    :class=\"class\"\r\n    :style=\"'--color:' + backgroundColor\"\r\n  >\r\n    <font-awesome-icon :icon=\"icon\" size=\"1x\" class=\"me-2\" />\r\n    <span class=\"fsXs\">{{ BtnName }}</span>\r\n\r\n    <slot />\r\n  </button>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  BtnName: {\r\n    type: String,\r\n    default: \"Button Name\",\r\n  },\r\n  class: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  showLoader: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  backgroundColor: {\r\n    type: String,\r\n    default: \"#586974\",\r\n  },\r\n  icon: null,\r\n});\r\n\r\nlet icon = props.icon;\r\n\r\nconst emit = defineEmits([\"\"]);\r\n\r\nfunction emitClickEvent() {\r\n  emit(\"\");\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/font-style.scss\";\r\n.buttonBackground {\r\n  background-color: var(--color);\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n</style>\r\n","import script from \"./UI-Btn2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Btn2.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Btn2.vue?vue&type=style&index=0&id=1a26e9bf&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1a26e9bf\"]])\n\nexport default __exports__","import script from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Section.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Section.vue?vue&type=style&index=0&id=cfc2dae0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cfc2dae0\"]])\n\nexport default __exports__","function isAnyArrayBuffer(value) {\n    return ['[object ArrayBuffer]', '[object SharedArrayBuffer]'].includes(Object.prototype.toString.call(value));\n}\nfunction isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\nfunction isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n}\nfunction isMap(d) {\n    return Object.prototype.toString.call(d) === '[object Map]';\n}\nfunction isDate(d) {\n    return Object.prototype.toString.call(d) === '[object Date]';\n}\n\nconst BSON_MAJOR_VERSION = 6;\nconst BSON_INT32_MAX = 0x7fffffff;\nconst BSON_INT32_MIN = -0x80000000;\nconst BSON_INT64_MAX = Math.pow(2, 63) - 1;\nconst BSON_INT64_MIN = -Math.pow(2, 63);\nconst JS_INT_MAX = Math.pow(2, 53);\nconst JS_INT_MIN = -Math.pow(2, 53);\nconst BSON_DATA_NUMBER = 1;\nconst BSON_DATA_STRING = 2;\nconst BSON_DATA_OBJECT = 3;\nconst BSON_DATA_ARRAY = 4;\nconst BSON_DATA_BINARY = 5;\nconst BSON_DATA_UNDEFINED = 6;\nconst BSON_DATA_OID = 7;\nconst BSON_DATA_BOOLEAN = 8;\nconst BSON_DATA_DATE = 9;\nconst BSON_DATA_NULL = 10;\nconst BSON_DATA_REGEXP = 11;\nconst BSON_DATA_DBPOINTER = 12;\nconst BSON_DATA_CODE = 13;\nconst BSON_DATA_SYMBOL = 14;\nconst BSON_DATA_CODE_W_SCOPE = 15;\nconst BSON_DATA_INT = 16;\nconst BSON_DATA_TIMESTAMP = 17;\nconst BSON_DATA_LONG = 18;\nconst BSON_DATA_DECIMAL128 = 19;\nconst BSON_DATA_MIN_KEY = 0xff;\nconst BSON_DATA_MAX_KEY = 0x7f;\nconst BSON_BINARY_SUBTYPE_DEFAULT = 0;\nconst BSON_BINARY_SUBTYPE_UUID_NEW = 4;\nconst BSONType = Object.freeze({\n    double: 1,\n    string: 2,\n    object: 3,\n    array: 4,\n    binData: 5,\n    undefined: 6,\n    objectId: 7,\n    bool: 8,\n    date: 9,\n    null: 10,\n    regex: 11,\n    dbPointer: 12,\n    javascript: 13,\n    symbol: 14,\n    javascriptWithScope: 15,\n    int: 16,\n    timestamp: 17,\n    long: 18,\n    decimal: 19,\n    minKey: -1,\n    maxKey: 127\n});\n\nclass BSONError extends Error {\n    get bsonError() {\n        return true;\n    }\n    get name() {\n        return 'BSONError';\n    }\n    constructor(message) {\n        super(message);\n    }\n    static isBSONError(value) {\n        return (value != null &&\n            typeof value === 'object' &&\n            'bsonError' in value &&\n            value.bsonError === true &&\n            'name' in value &&\n            'message' in value &&\n            'stack' in value);\n    }\n}\nclass BSONVersionError extends BSONError {\n    get name() {\n        return 'BSONVersionError';\n    }\n    constructor() {\n        super(`Unsupported BSON version, bson types must be from bson ${BSON_MAJOR_VERSION}.0 or later`);\n    }\n}\nclass BSONRuntimeError extends BSONError {\n    get name() {\n        return 'BSONRuntimeError';\n    }\n    constructor(message) {\n        super(message);\n    }\n}\n\nfunction nodejsMathRandomBytes(byteLength) {\n    return nodeJsByteUtils.fromNumberArray(Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256)));\n}\nconst nodejsRandomBytes = await (async () => {\n    try {\n        return (await import('crypto')).randomBytes;\n    }\n    catch {\n        return nodejsMathRandomBytes;\n    }\n})();\nconst nodeJsByteUtils = {\n    toLocalBufferType(potentialBuffer) {\n        if (Buffer.isBuffer(potentialBuffer)) {\n            return potentialBuffer;\n        }\n        if (ArrayBuffer.isView(potentialBuffer)) {\n            return Buffer.from(potentialBuffer.buffer, potentialBuffer.byteOffset, potentialBuffer.byteLength);\n        }\n        const stringTag = potentialBuffer?.[Symbol.toStringTag] ?? Object.prototype.toString.call(potentialBuffer);\n        if (stringTag === 'ArrayBuffer' ||\n            stringTag === 'SharedArrayBuffer' ||\n            stringTag === '[object ArrayBuffer]' ||\n            stringTag === '[object SharedArrayBuffer]') {\n            return Buffer.from(potentialBuffer);\n        }\n        throw new BSONError(`Cannot create Buffer from ${String(potentialBuffer)}`);\n    },\n    allocate(size) {\n        return Buffer.alloc(size);\n    },\n    equals(a, b) {\n        return nodeJsByteUtils.toLocalBufferType(a).equals(b);\n    },\n    fromNumberArray(array) {\n        return Buffer.from(array);\n    },\n    fromBase64(base64) {\n        return Buffer.from(base64, 'base64');\n    },\n    toBase64(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('base64');\n    },\n    fromISO88591(codePoints) {\n        return Buffer.from(codePoints, 'binary');\n    },\n    toISO88591(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('binary');\n    },\n    fromHex(hex) {\n        return Buffer.from(hex, 'hex');\n    },\n    toHex(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('hex');\n    },\n    fromUTF8(text) {\n        return Buffer.from(text, 'utf8');\n    },\n    toUTF8(buffer, start, end) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('utf8', start, end);\n    },\n    utf8ByteLength(input) {\n        return Buffer.byteLength(input, 'utf8');\n    },\n    encodeUTF8Into(buffer, source, byteOffset) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).write(source, byteOffset, undefined, 'utf8');\n    },\n    randomBytes: nodejsRandomBytes\n};\n\nfunction isReactNative() {\n    const { navigator } = globalThis;\n    return typeof navigator === 'object' && navigator.product === 'ReactNative';\n}\nfunction webMathRandomBytes(byteLength) {\n    if (byteLength < 0) {\n        throw new RangeError(`The argument 'byteLength' is invalid. Received ${byteLength}`);\n    }\n    return webByteUtils.fromNumberArray(Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256)));\n}\nconst webRandomBytes = (() => {\n    const { crypto } = globalThis;\n    if (crypto != null && typeof crypto.getRandomValues === 'function') {\n        return (byteLength) => {\n            return crypto.getRandomValues(webByteUtils.allocate(byteLength));\n        };\n    }\n    else {\n        if (isReactNative()) {\n            const { console } = globalThis;\n            console?.warn?.('BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.');\n        }\n        return webMathRandomBytes;\n    }\n})();\nconst HEX_DIGIT = /(\\d|[a-f])/i;\nconst webByteUtils = {\n    toLocalBufferType(potentialUint8array) {\n        const stringTag = potentialUint8array?.[Symbol.toStringTag] ??\n            Object.prototype.toString.call(potentialUint8array);\n        if (stringTag === 'Uint8Array') {\n            return potentialUint8array;\n        }\n        if (ArrayBuffer.isView(potentialUint8array)) {\n            return new Uint8Array(potentialUint8array.buffer.slice(potentialUint8array.byteOffset, potentialUint8array.byteOffset + potentialUint8array.byteLength));\n        }\n        if (stringTag === 'ArrayBuffer' ||\n            stringTag === 'SharedArrayBuffer' ||\n            stringTag === '[object ArrayBuffer]' ||\n            stringTag === '[object SharedArrayBuffer]') {\n            return new Uint8Array(potentialUint8array);\n        }\n        throw new BSONError(`Cannot make a Uint8Array from ${String(potentialUint8array)}`);\n    },\n    allocate(size) {\n        if (typeof size !== 'number') {\n            throw new TypeError(`The \"size\" argument must be of type number. Received ${String(size)}`);\n        }\n        return new Uint8Array(size);\n    },\n    equals(a, b) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < a.byteLength; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    },\n    fromNumberArray(array) {\n        return Uint8Array.from(array);\n    },\n    fromBase64(base64) {\n        return Uint8Array.from(atob(base64), c => c.charCodeAt(0));\n    },\n    toBase64(uint8array) {\n        return btoa(webByteUtils.toISO88591(uint8array));\n    },\n    fromISO88591(codePoints) {\n        return Uint8Array.from(codePoints, c => c.charCodeAt(0) & 0xff);\n    },\n    toISO88591(uint8array) {\n        return Array.from(Uint16Array.from(uint8array), b => String.fromCharCode(b)).join('');\n    },\n    fromHex(hex) {\n        const evenLengthHex = hex.length % 2 === 0 ? hex : hex.slice(0, hex.length - 1);\n        const buffer = [];\n        for (let i = 0; i < evenLengthHex.length; i += 2) {\n            const firstDigit = evenLengthHex[i];\n            const secondDigit = evenLengthHex[i + 1];\n            if (!HEX_DIGIT.test(firstDigit)) {\n                break;\n            }\n            if (!HEX_DIGIT.test(secondDigit)) {\n                break;\n            }\n            const hexDigit = Number.parseInt(`${firstDigit}${secondDigit}`, 16);\n            buffer.push(hexDigit);\n        }\n        return Uint8Array.from(buffer);\n    },\n    toHex(uint8array) {\n        return Array.from(uint8array, byte => byte.toString(16).padStart(2, '0')).join('');\n    },\n    fromUTF8(text) {\n        return new TextEncoder().encode(text);\n    },\n    toUTF8(uint8array, start, end) {\n        return new TextDecoder('utf8', { fatal: false }).decode(uint8array.slice(start, end));\n    },\n    utf8ByteLength(input) {\n        return webByteUtils.fromUTF8(input).byteLength;\n    },\n    encodeUTF8Into(buffer, source, byteOffset) {\n        const bytes = webByteUtils.fromUTF8(source);\n        buffer.set(bytes, byteOffset);\n        return bytes.byteLength;\n    },\n    randomBytes: webRandomBytes\n};\n\nconst hasGlobalBuffer = typeof Buffer === 'function' && Buffer.prototype?._isBuffer !== true;\nconst ByteUtils = hasGlobalBuffer ? nodeJsByteUtils : webByteUtils;\nclass BSONDataView extends DataView {\n    static fromUint8Array(input) {\n        return new DataView(input.buffer, input.byteOffset, input.byteLength);\n    }\n}\n\nclass BSONValue {\n    get [Symbol.for('@@mdb.bson.version')]() {\n        return BSON_MAJOR_VERSION;\n    }\n}\n\nclass Binary extends BSONValue {\n    get _bsontype() {\n        return 'Binary';\n    }\n    constructor(buffer, subType) {\n        super();\n        if (!(buffer == null) &&\n            typeof buffer === 'string' &&\n            !ArrayBuffer.isView(buffer) &&\n            !isAnyArrayBuffer(buffer) &&\n            !Array.isArray(buffer)) {\n            throw new BSONError('Binary can only be constructed from Uint8Array or number[]');\n        }\n        this.sub_type = subType ?? Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n        if (buffer == null) {\n            this.buffer = ByteUtils.allocate(Binary.BUFFER_SIZE);\n            this.position = 0;\n        }\n        else {\n            this.buffer = Array.isArray(buffer)\n                ? ByteUtils.fromNumberArray(buffer)\n                : ByteUtils.toLocalBufferType(buffer);\n            this.position = this.buffer.byteLength;\n        }\n    }\n    put(byteValue) {\n        if (typeof byteValue === 'string' && byteValue.length !== 1) {\n            throw new BSONError('only accepts single character String');\n        }\n        else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n            throw new BSONError('only accepts single character Uint8Array or Array');\n        let decodedByte;\n        if (typeof byteValue === 'string') {\n            decodedByte = byteValue.charCodeAt(0);\n        }\n        else if (typeof byteValue === 'number') {\n            decodedByte = byteValue;\n        }\n        else {\n            decodedByte = byteValue[0];\n        }\n        if (decodedByte < 0 || decodedByte > 255) {\n            throw new BSONError('only accepts number in a valid unsigned byte range 0-255');\n        }\n        if (this.buffer.byteLength > this.position) {\n            this.buffer[this.position++] = decodedByte;\n        }\n        else {\n            const newSpace = ByteUtils.allocate(Binary.BUFFER_SIZE + this.buffer.length);\n            newSpace.set(this.buffer, 0);\n            this.buffer = newSpace;\n            this.buffer[this.position++] = decodedByte;\n        }\n    }\n    write(sequence, offset) {\n        offset = typeof offset === 'number' ? offset : this.position;\n        if (this.buffer.byteLength < offset + sequence.length) {\n            const newSpace = ByteUtils.allocate(this.buffer.byteLength + sequence.length);\n            newSpace.set(this.buffer, 0);\n            this.buffer = newSpace;\n        }\n        if (ArrayBuffer.isView(sequence)) {\n            this.buffer.set(ByteUtils.toLocalBufferType(sequence), offset);\n            this.position =\n                offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n        }\n        else if (typeof sequence === 'string') {\n            throw new BSONError('input cannot be string');\n        }\n    }\n    read(position, length) {\n        length = length && length > 0 ? length : this.position;\n        return this.buffer.slice(position, position + length);\n    }\n    value() {\n        return this.buffer.length === this.position\n            ? this.buffer\n            : this.buffer.subarray(0, this.position);\n    }\n    length() {\n        return this.position;\n    }\n    toJSON() {\n        return ByteUtils.toBase64(this.buffer);\n    }\n    toString(encoding) {\n        if (encoding === 'hex')\n            return ByteUtils.toHex(this.buffer);\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.buffer);\n        if (encoding === 'utf8' || encoding === 'utf-8')\n            return ByteUtils.toUTF8(this.buffer, 0, this.buffer.byteLength);\n        return ByteUtils.toUTF8(this.buffer, 0, this.buffer.byteLength);\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        const base64String = ByteUtils.toBase64(this.buffer);\n        const subType = Number(this.sub_type).toString(16);\n        if (options.legacy) {\n            return {\n                $binary: base64String,\n                $type: subType.length === 1 ? '0' + subType : subType\n            };\n        }\n        return {\n            $binary: {\n                base64: base64String,\n                subType: subType.length === 1 ? '0' + subType : subType\n            }\n        };\n    }\n    toUUID() {\n        if (this.sub_type === Binary.SUBTYPE_UUID) {\n            return new UUID(this.buffer.slice(0, this.position));\n        }\n        throw new BSONError(`Binary sub_type \"${this.sub_type}\" is not supported for converting to UUID. Only \"${Binary.SUBTYPE_UUID}\" is currently supported.`);\n    }\n    static createFromHexString(hex, subType) {\n        return new Binary(ByteUtils.fromHex(hex), subType);\n    }\n    static createFromBase64(base64, subType) {\n        return new Binary(ByteUtils.fromBase64(base64), subType);\n    }\n    static fromExtendedJSON(doc, options) {\n        options = options || {};\n        let data;\n        let type;\n        if ('$binary' in doc) {\n            if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n                type = doc.$type ? parseInt(doc.$type, 16) : 0;\n                data = ByteUtils.fromBase64(doc.$binary);\n            }\n            else {\n                if (typeof doc.$binary !== 'string') {\n                    type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n                    data = ByteUtils.fromBase64(doc.$binary.base64);\n                }\n            }\n        }\n        else if ('$uuid' in doc) {\n            type = 4;\n            data = UUID.bytesFromString(doc.$uuid);\n        }\n        if (!data) {\n            throw new BSONError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n        }\n        return type === BSON_BINARY_SUBTYPE_UUID_NEW ? new UUID(data) : new Binary(data, type);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const base64 = ByteUtils.toBase64(this.buffer.subarray(0, this.position));\n        return `Binary.createFromBase64(\"${base64}\", ${this.sub_type})`;\n    }\n}\nBinary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\nBinary.BUFFER_SIZE = 256;\nBinary.SUBTYPE_DEFAULT = 0;\nBinary.SUBTYPE_FUNCTION = 1;\nBinary.SUBTYPE_BYTE_ARRAY = 2;\nBinary.SUBTYPE_UUID_OLD = 3;\nBinary.SUBTYPE_UUID = 4;\nBinary.SUBTYPE_MD5 = 5;\nBinary.SUBTYPE_ENCRYPTED = 6;\nBinary.SUBTYPE_COLUMN = 7;\nBinary.SUBTYPE_USER_DEFINED = 128;\nconst UUID_BYTE_LENGTH = 16;\nconst UUID_WITHOUT_DASHES = /^[0-9A-F]{32}$/i;\nconst UUID_WITH_DASHES = /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;\nclass UUID extends Binary {\n    constructor(input) {\n        let bytes;\n        if (input == null) {\n            bytes = UUID.generate();\n        }\n        else if (input instanceof UUID) {\n            bytes = ByteUtils.toLocalBufferType(new Uint8Array(input.buffer));\n        }\n        else if (ArrayBuffer.isView(input) && input.byteLength === UUID_BYTE_LENGTH) {\n            bytes = ByteUtils.toLocalBufferType(input);\n        }\n        else if (typeof input === 'string') {\n            bytes = UUID.bytesFromString(input);\n        }\n        else {\n            throw new BSONError('Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).');\n        }\n        super(bytes, BSON_BINARY_SUBTYPE_UUID_NEW);\n    }\n    get id() {\n        return this.buffer;\n    }\n    set id(value) {\n        this.buffer = value;\n    }\n    toHexString(includeDashes = true) {\n        if (includeDashes) {\n            return [\n                ByteUtils.toHex(this.buffer.subarray(0, 4)),\n                ByteUtils.toHex(this.buffer.subarray(4, 6)),\n                ByteUtils.toHex(this.buffer.subarray(6, 8)),\n                ByteUtils.toHex(this.buffer.subarray(8, 10)),\n                ByteUtils.toHex(this.buffer.subarray(10, 16))\n            ].join('-');\n        }\n        return ByteUtils.toHex(this.buffer);\n    }\n    toString(encoding) {\n        if (encoding === 'hex')\n            return ByteUtils.toHex(this.id);\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.id);\n        return this.toHexString();\n    }\n    toJSON() {\n        return this.toHexString();\n    }\n    equals(otherId) {\n        if (!otherId) {\n            return false;\n        }\n        if (otherId instanceof UUID) {\n            return ByteUtils.equals(otherId.id, this.id);\n        }\n        try {\n            return ByteUtils.equals(new UUID(otherId).id, this.id);\n        }\n        catch {\n            return false;\n        }\n    }\n    toBinary() {\n        return new Binary(this.id, Binary.SUBTYPE_UUID);\n    }\n    static generate() {\n        const bytes = ByteUtils.randomBytes(UUID_BYTE_LENGTH);\n        bytes[6] = (bytes[6] & 0x0f) | 0x40;\n        bytes[8] = (bytes[8] & 0x3f) | 0x80;\n        return bytes;\n    }\n    static isValid(input) {\n        if (!input) {\n            return false;\n        }\n        if (typeof input === 'string') {\n            return UUID.isValidUUIDString(input);\n        }\n        if (isUint8Array(input)) {\n            return input.byteLength === UUID_BYTE_LENGTH;\n        }\n        return (input._bsontype === 'Binary' &&\n            input.sub_type === this.SUBTYPE_UUID &&\n            input.buffer.byteLength === 16);\n    }\n    static createFromHexString(hexString) {\n        const buffer = UUID.bytesFromString(hexString);\n        return new UUID(buffer);\n    }\n    static createFromBase64(base64) {\n        return new UUID(ByteUtils.fromBase64(base64));\n    }\n    static bytesFromString(representation) {\n        if (!UUID.isValidUUIDString(representation)) {\n            throw new BSONError('UUID string representation must be 32 hex digits or canonical hyphenated representation');\n        }\n        return ByteUtils.fromHex(representation.replace(/-/g, ''));\n    }\n    static isValidUUIDString(representation) {\n        return UUID_WITHOUT_DASHES.test(representation) || UUID_WITH_DASHES.test(representation);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new UUID(\"${this.toHexString()}\")`;\n    }\n}\n\nclass Code extends BSONValue {\n    get _bsontype() {\n        return 'Code';\n    }\n    constructor(code, scope) {\n        super();\n        this.code = code.toString();\n        this.scope = scope ?? null;\n    }\n    toJSON() {\n        if (this.scope != null) {\n            return { code: this.code, scope: this.scope };\n        }\n        return { code: this.code };\n    }\n    toExtendedJSON() {\n        if (this.scope) {\n            return { $code: this.code, $scope: this.scope };\n        }\n        return { $code: this.code };\n    }\n    static fromExtendedJSON(doc) {\n        return new Code(doc.$code, doc.$scope);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const codeJson = this.toJSON();\n        return `new Code(${JSON.stringify(String(codeJson.code))}${codeJson.scope != null ? `, ${JSON.stringify(codeJson.scope)}` : ''})`;\n    }\n}\n\nfunction isDBRefLike(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        '$id' in value &&\n        value.$id != null &&\n        '$ref' in value &&\n        typeof value.$ref === 'string' &&\n        (!('$db' in value) || ('$db' in value && typeof value.$db === 'string')));\n}\nclass DBRef extends BSONValue {\n    get _bsontype() {\n        return 'DBRef';\n    }\n    constructor(collection, oid, db, fields) {\n        super();\n        const parts = collection.split('.');\n        if (parts.length === 2) {\n            db = parts.shift();\n            collection = parts.shift();\n        }\n        this.collection = collection;\n        this.oid = oid;\n        this.db = db;\n        this.fields = fields || {};\n    }\n    get namespace() {\n        return this.collection;\n    }\n    set namespace(value) {\n        this.collection = value;\n    }\n    toJSON() {\n        const o = Object.assign({\n            $ref: this.collection,\n            $id: this.oid\n        }, this.fields);\n        if (this.db != null)\n            o.$db = this.db;\n        return o;\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        let o = {\n            $ref: this.collection,\n            $id: this.oid\n        };\n        if (options.legacy) {\n            return o;\n        }\n        if (this.db)\n            o.$db = this.db;\n        o = Object.assign(o, this.fields);\n        return o;\n    }\n    static fromExtendedJSON(doc) {\n        const copy = Object.assign({}, doc);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const oid = this.oid === undefined || this.oid.toString === undefined ? this.oid : this.oid.toString();\n        return `new DBRef(\"${this.namespace}\", new ObjectId(\"${String(oid)}\")${this.db ? `, \"${this.db}\"` : ''})`;\n    }\n}\n\nlet wasm = undefined;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n}\ncatch {\n}\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\nconst INT_CACHE = {};\nconst UINT_CACHE = {};\nconst MAX_INT64_STRING_LENGTH = 20;\nconst DECIMAL_REG_EX = /^(\\+?0|(\\+|-)?[1-9][0-9]*)$/;\nclass Long extends BSONValue {\n    get _bsontype() {\n        return 'Long';\n    }\n    get __isLong__() {\n        return true;\n    }\n    constructor(low = 0, high, unsigned) {\n        super();\n        if (typeof low === 'bigint') {\n            Object.assign(this, Long.fromBigInt(low, !!high));\n        }\n        else if (typeof low === 'string') {\n            Object.assign(this, Long.fromString(low, !!high));\n        }\n        else {\n            this.low = low | 0;\n            this.high = high | 0;\n            this.unsigned = !!unsigned;\n        }\n    }\n    static fromBits(lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    }\n    static fromInt(value, unsigned) {\n        let obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if ((cache = 0 <= value && value < 256)) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache)\n                UINT_CACHE[value] = obj;\n            return obj;\n        }\n        else {\n            value |= 0;\n            if ((cache = -128 <= value && value < 128)) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache)\n                INT_CACHE[value] = obj;\n            return obj;\n        }\n    }\n    static fromNumber(value, unsigned) {\n        if (isNaN(value))\n            return unsigned ? Long.UZERO : Long.ZERO;\n        if (unsigned) {\n            if (value < 0)\n                return Long.UZERO;\n            if (value >= TWO_PWR_64_DBL)\n                return Long.MAX_UNSIGNED_VALUE;\n        }\n        else {\n            if (value <= -TWO_PWR_63_DBL)\n                return Long.MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL)\n                return Long.MAX_VALUE;\n        }\n        if (value < 0)\n            return Long.fromNumber(-value, unsigned).neg();\n        return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n    }\n    static fromBigInt(value, unsigned) {\n        return Long.fromString(value.toString(), unsigned);\n    }\n    static fromString(str, unsigned, radix) {\n        if (str.length === 0)\n            throw new BSONError('empty string');\n        if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n            return Long.ZERO;\n        if (typeof unsigned === 'number') {\n            (radix = unsigned), (unsigned = false);\n        }\n        else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw new BSONError('radix');\n        let p;\n        if ((p = str.indexOf('-')) > 0)\n            throw new BSONError('interior hyphen');\n        else if (p === 0) {\n            return Long.fromString(str.substring(1), unsigned, radix).neg();\n        }\n        const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n        let result = Long.ZERO;\n        for (let i = 0; i < str.length; i += 8) {\n            const size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                const power = Long.fromNumber(Math.pow(radix, size));\n                result = result.mul(power).add(Long.fromNumber(value));\n            }\n            else {\n                result = result.mul(radixToPower);\n                result = result.add(Long.fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    }\n    static fromBytes(bytes, unsigned, le) {\n        return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    }\n    static fromBytesLE(bytes, unsigned) {\n        return new Long(bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24), bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24), unsigned);\n    }\n    static fromBytesBE(bytes, unsigned) {\n        return new Long((bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7], (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3], unsigned);\n    }\n    static isLong(value) {\n        return (value != null &&\n            typeof value === 'object' &&\n            '__isLong__' in value &&\n            value.__isLong__ === true);\n    }\n    static fromValue(val, unsigned) {\n        if (typeof val === 'number')\n            return Long.fromNumber(val, unsigned);\n        if (typeof val === 'string')\n            return Long.fromString(val, unsigned);\n        return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    }\n    add(addend) {\n        if (!Long.isLong(addend))\n            addend = Long.fromValue(addend);\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = addend.high >>> 16;\n        const b32 = addend.high & 0xffff;\n        const b16 = addend.low >>> 16;\n        const b00 = addend.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 + b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    and(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    }\n    compare(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.eq(other))\n            return 0;\n        const thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        return other.high >>> 0 > this.high >>> 0 ||\n            (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n            ? -1\n            : 1;\n    }\n    comp(other) {\n        return this.compare(other);\n    }\n    divide(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (divisor.isZero())\n            throw new BSONError('division by zero');\n        if (wasm) {\n            if (!this.unsigned &&\n                this.high === -0x80000000 &&\n                divisor.low === -1 &&\n                divisor.high === -1) {\n                return this;\n            }\n            const low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (this.isZero())\n            return this.unsigned ? Long.UZERO : Long.ZERO;\n        let approx, rem, res;\n        if (!this.unsigned) {\n            if (this.eq(Long.MIN_VALUE)) {\n                if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE))\n                    return Long.MIN_VALUE;\n                else if (divisor.eq(Long.MIN_VALUE))\n                    return Long.ONE;\n                else {\n                    const halfThis = this.shr(1);\n                    approx = halfThis.div(divisor).shl(1);\n                    if (approx.eq(Long.ZERO)) {\n                        return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx));\n                        res = approx.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(Long.MIN_VALUE))\n                return this.unsigned ? Long.UZERO : Long.ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = Long.ZERO;\n        }\n        else {\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return Long.UZERO;\n            if (divisor.gt(this.shru(1)))\n                return Long.UONE;\n            res = Long.UZERO;\n        }\n        rem = this;\n        while (rem.gte(divisor)) {\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n            const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            let approxRes = Long.fromNumber(approx);\n            let approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = Long.fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            if (approxRes.isZero())\n                approxRes = Long.ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    }\n    div(divisor) {\n        return this.divide(divisor);\n    }\n    equals(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    eq(other) {\n        return this.equals(other);\n    }\n    getHighBits() {\n        return this.high;\n    }\n    getHighBitsUnsigned() {\n        return this.high >>> 0;\n    }\n    getLowBits() {\n        return this.low;\n    }\n    getLowBitsUnsigned() {\n        return this.low >>> 0;\n    }\n    getNumBitsAbs() {\n        if (this.isNegative()) {\n            return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        }\n        const val = this.high !== 0 ? this.high : this.low;\n        let bit;\n        for (bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) !== 0)\n                break;\n        return this.high !== 0 ? bit + 33 : bit + 1;\n    }\n    greaterThan(other) {\n        return this.comp(other) > 0;\n    }\n    gt(other) {\n        return this.greaterThan(other);\n    }\n    greaterThanOrEqual(other) {\n        return this.comp(other) >= 0;\n    }\n    gte(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    ge(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    isEven() {\n        return (this.low & 1) === 0;\n    }\n    isNegative() {\n        return !this.unsigned && this.high < 0;\n    }\n    isOdd() {\n        return (this.low & 1) === 1;\n    }\n    isPositive() {\n        return this.unsigned || this.high >= 0;\n    }\n    isZero() {\n        return this.high === 0 && this.low === 0;\n    }\n    lessThan(other) {\n        return this.comp(other) < 0;\n    }\n    lt(other) {\n        return this.lessThan(other);\n    }\n    lessThanOrEqual(other) {\n        return this.comp(other) <= 0;\n    }\n    lte(other) {\n        return this.lessThanOrEqual(other);\n    }\n    modulo(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (wasm) {\n            const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        return this.sub(this.div(divisor).mul(divisor));\n    }\n    mod(divisor) {\n        return this.modulo(divisor);\n    }\n    rem(divisor) {\n        return this.modulo(divisor);\n    }\n    multiply(multiplier) {\n        if (this.isZero())\n            return Long.ZERO;\n        if (!Long.isLong(multiplier))\n            multiplier = Long.fromValue(multiplier);\n        if (wasm) {\n            const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (multiplier.isZero())\n            return Long.ZERO;\n        if (this.eq(Long.MIN_VALUE))\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (multiplier.eq(Long.MIN_VALUE))\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = multiplier.high >>> 16;\n        const b32 = multiplier.high & 0xffff;\n        const b16 = multiplier.low >>> 16;\n        const b00 = multiplier.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    mul(multiplier) {\n        return this.multiply(multiplier);\n    }\n    negate() {\n        if (!this.unsigned && this.eq(Long.MIN_VALUE))\n            return Long.MIN_VALUE;\n        return this.not().add(Long.ONE);\n    }\n    neg() {\n        return this.negate();\n    }\n    not() {\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    }\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    neq(other) {\n        return this.notEquals(other);\n    }\n    ne(other) {\n        return this.notEquals(other);\n    }\n    or(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    }\n    shiftLeft(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n    }\n    shl(numBits) {\n        return this.shiftLeft(numBits);\n    }\n    shiftRight(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    }\n    shr(numBits) {\n        return this.shiftRight(numBits);\n    }\n    shiftRightUnsigned(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0)\n            return this;\n        else {\n            const high = this.high;\n            if (numBits < 32) {\n                const low = this.low;\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return Long.fromBits(high, 0, this.unsigned);\n            else\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    }\n    shr_u(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    shru(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    subtract(subtrahend) {\n        if (!Long.isLong(subtrahend))\n            subtrahend = Long.fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    }\n    sub(subtrahend) {\n        return this.subtract(subtrahend);\n    }\n    toInt() {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    }\n    toNumber() {\n        if (this.unsigned)\n            return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    }\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    toBytes(le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    }\n    toBytesLE() {\n        const hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            lo >>> 24,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            hi >>> 24\n        ];\n    }\n    toBytesBE() {\n        const hi = this.high, lo = this.low;\n        return [\n            hi >>> 24,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            lo >>> 24,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    }\n    toSigned() {\n        if (!this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, false);\n    }\n    toString(radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw new BSONError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            if (this.eq(Long.MIN_VALUE)) {\n                const radixLong = Long.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n        let rem = this;\n        let result = '';\n        while (true) {\n            const remDiv = rem.div(radixToPower);\n            const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n            let digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) {\n                return digits + result;\n            }\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    }\n    toUnsigned() {\n        if (this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, true);\n    }\n    xor(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    }\n    eqz() {\n        return this.isZero();\n    }\n    le(other) {\n        return this.lessThanOrEqual(other);\n    }\n    toExtendedJSON(options) {\n        if (options && options.relaxed)\n            return this.toNumber();\n        return { $numberLong: this.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        const { useBigInt64 = false, relaxed = true } = { ...options };\n        if (doc.$numberLong.length > MAX_INT64_STRING_LENGTH) {\n            throw new BSONError('$numberLong string is too long');\n        }\n        if (!DECIMAL_REG_EX.test(doc.$numberLong)) {\n            throw new BSONError(`$numberLong string \"${doc.$numberLong}\" is in an invalid format`);\n        }\n        if (useBigInt64) {\n            const bigIntResult = BigInt(doc.$numberLong);\n            return BigInt.asIntN(64, bigIntResult);\n        }\n        const longResult = Long.fromString(doc.$numberLong);\n        if (relaxed) {\n            return longResult.toNumber();\n        }\n        return longResult;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Long(\"${this.toString()}\"${this.unsigned ? ', true' : ''})`;\n    }\n}\nLong.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\nLong.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\nLong.ZERO = Long.fromInt(0);\nLong.UZERO = Long.fromInt(0, true);\nLong.ONE = Long.fromInt(1);\nLong.UONE = Long.fromInt(1, true);\nLong.NEG_ONE = Long.fromInt(-1);\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\nconst NAN_BUFFER = ByteUtils.fromNumberArray([\n    0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_NEGATIVE_BUFFER = ByteUtils.fromNumberArray([\n    0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_POSITIVE_BUFFER = ByteUtils.fromNumberArray([\n    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\nconst COMBINATION_MASK = 0x1f;\nconst EXPONENT_MASK = 0x3fff;\nconst COMBINATION_INFINITY = 30;\nconst COMBINATION_NAN = 31;\nfunction isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n}\nfunction divideu128(value) {\n    const DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n    let _rem = Long.fromNumber(0);\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n        return { quotient: value, rem: _rem };\n    }\n    for (let i = 0; i <= 3; i++) {\n        _rem = _rem.shiftLeft(32);\n        _rem = _rem.add(new Long(value.parts[i], 0));\n        value.parts[i] = _rem.div(DIVISOR).low;\n        _rem = _rem.modulo(DIVISOR);\n    }\n    return { quotient: value, rem: _rem };\n}\nfunction multiply64x2(left, right) {\n    if (!left && !right) {\n        return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n    }\n    const leftHigh = left.shiftRightUnsigned(32);\n    const leftLow = new Long(left.getLowBits(), 0);\n    const rightHigh = right.shiftRightUnsigned(32);\n    const rightLow = new Long(right.getLowBits(), 0);\n    let productHigh = leftHigh.multiply(rightHigh);\n    let productMid = leftHigh.multiply(rightLow);\n    const productMid2 = leftLow.multiply(rightHigh);\n    let productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new Long(productMid.getLowBits(), 0)\n        .add(productMid2)\n        .add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n    return { high: productHigh, low: productLow };\n}\nfunction lessThan(left, right) {\n    const uhleft = left.high >>> 0;\n    const uhright = right.high >>> 0;\n    if (uhleft < uhright) {\n        return true;\n    }\n    else if (uhleft === uhright) {\n        const ulleft = left.low >>> 0;\n        const ulright = right.low >>> 0;\n        if (ulleft < ulright)\n            return true;\n    }\n    return false;\n}\nfunction invalidErr(string, message) {\n    throw new BSONError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\nclass Decimal128 extends BSONValue {\n    get _bsontype() {\n        return 'Decimal128';\n    }\n    constructor(bytes) {\n        super();\n        if (typeof bytes === 'string') {\n            this.bytes = Decimal128.fromString(bytes).bytes;\n        }\n        else if (isUint8Array(bytes)) {\n            if (bytes.byteLength !== 16) {\n                throw new BSONError('Decimal128 must take a Buffer of 16 bytes');\n            }\n            this.bytes = bytes;\n        }\n        else {\n            throw new BSONError('Decimal128 must take a Buffer or string');\n        }\n    }\n    static fromString(representation) {\n        let isNegative = false;\n        let sawSign = false;\n        let sawRadix = false;\n        let foundNonZero = false;\n        let significantDigits = 0;\n        let nDigitsRead = 0;\n        let nDigits = 0;\n        let radixPosition = 0;\n        let firstNonZero = 0;\n        const digits = [0];\n        let nDigitsStored = 0;\n        let digitsInsert = 0;\n        let lastDigit = 0;\n        let exponent = 0;\n        let significandHigh = new Long(0, 0);\n        let significandLow = new Long(0, 0);\n        let biasedExponent = 0;\n        let index = 0;\n        if (representation.length >= 7000) {\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        }\n        const stringMatch = representation.match(PARSE_STRING_REGEXP);\n        const infMatch = representation.match(PARSE_INF_REGEXP);\n        const nanMatch = representation.match(PARSE_NAN_REGEXP);\n        if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        }\n        if (stringMatch) {\n            const unsignedNumber = stringMatch[2];\n            const e = stringMatch[4];\n            const expSign = stringMatch[5];\n            const expNumber = stringMatch[6];\n            if (e && expNumber === undefined)\n                invalidErr(representation, 'missing exponent power');\n            if (e && unsignedNumber === undefined)\n                invalidErr(representation, 'missing exponent base');\n            if (e === undefined && (expSign || expNumber)) {\n                invalidErr(representation, 'missing e before exponent');\n            }\n        }\n        if (representation[index] === '+' || representation[index] === '-') {\n            sawSign = true;\n            isNegative = representation[index++] === '-';\n        }\n        if (!isDigit(representation[index]) && representation[index] !== '.') {\n            if (representation[index] === 'i' || representation[index] === 'I') {\n                return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n            }\n            else if (representation[index] === 'N') {\n                return new Decimal128(NAN_BUFFER);\n            }\n        }\n        while (isDigit(representation[index]) || representation[index] === '.') {\n            if (representation[index] === '.') {\n                if (sawRadix)\n                    invalidErr(representation, 'contains multiple periods');\n                sawRadix = true;\n                index = index + 1;\n                continue;\n            }\n            if (nDigitsStored < MAX_DIGITS) {\n                if (representation[index] !== '0' || foundNonZero) {\n                    if (!foundNonZero) {\n                        firstNonZero = nDigitsRead;\n                    }\n                    foundNonZero = true;\n                    digits[digitsInsert++] = parseInt(representation[index], 10);\n                    nDigitsStored = nDigitsStored + 1;\n                }\n            }\n            if (foundNonZero)\n                nDigits = nDigits + 1;\n            if (sawRadix)\n                radixPosition = radixPosition + 1;\n            nDigitsRead = nDigitsRead + 1;\n            index = index + 1;\n        }\n        if (sawRadix && !nDigitsRead)\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        if (representation[index] === 'e' || representation[index] === 'E') {\n            const match = representation.substr(++index).match(EXPONENT_REGEX);\n            if (!match || !match[2])\n                return new Decimal128(NAN_BUFFER);\n            exponent = parseInt(match[0], 10);\n            index = index + match[0].length;\n        }\n        if (representation[index])\n            return new Decimal128(NAN_BUFFER);\n        if (!nDigitsStored) {\n            digits[0] = 0;\n            nDigits = 1;\n            nDigitsStored = 1;\n            significantDigits = 0;\n        }\n        else {\n            lastDigit = nDigitsStored - 1;\n            significantDigits = nDigits;\n            if (significantDigits !== 1) {\n                while (representation[firstNonZero + significantDigits - 1 + Number(sawSign) + Number(sawRadix)] === '0') {\n                    significantDigits = significantDigits - 1;\n                }\n            }\n        }\n        if (exponent <= radixPosition && radixPosition > exponent + (1 << 14)) {\n            exponent = EXPONENT_MIN;\n        }\n        else {\n            exponent = exponent - radixPosition;\n        }\n        while (exponent > EXPONENT_MAX) {\n            lastDigit = lastDigit + 1;\n            if (lastDigit >= MAX_DIGITS) {\n                if (significantDigits === 0) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n            exponent = exponent - 1;\n        }\n        while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n            if (lastDigit === 0) {\n                if (significantDigits === 0) {\n                    exponent = EXPONENT_MIN;\n                    break;\n                }\n                invalidErr(representation, 'exponent underflow');\n            }\n            if (nDigitsStored < nDigits) {\n                if (representation[nDigits - 1 + Number(sawSign) + Number(sawRadix)] !== '0' &&\n                    significantDigits !== 0) {\n                    invalidErr(representation, 'inexact rounding');\n                }\n                nDigits = nDigits - 1;\n            }\n            else {\n                if (digits[lastDigit] !== 0) {\n                    invalidErr(representation, 'inexact rounding');\n                }\n                lastDigit = lastDigit - 1;\n            }\n            if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n            }\n            else {\n                invalidErr(representation, 'overflow');\n            }\n        }\n        if (lastDigit + 1 < significantDigits) {\n            if (sawRadix) {\n                firstNonZero = firstNonZero + 1;\n            }\n            if (sawSign) {\n                firstNonZero = firstNonZero + 1;\n            }\n            const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n            if (roundDigit !== 0) {\n                invalidErr(representation, 'inexact rounding');\n            }\n        }\n        significandHigh = Long.fromNumber(0);\n        significandLow = Long.fromNumber(0);\n        if (significantDigits === 0) {\n            significandHigh = Long.fromNumber(0);\n            significandLow = Long.fromNumber(0);\n        }\n        else if (lastDigit < 17) {\n            let dIdx = 0;\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            significandHigh = new Long(0, 0);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        else {\n            let dIdx = 0;\n            significandHigh = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit - 17; dIdx++) {\n                significandHigh = significandHigh.multiply(Long.fromNumber(10));\n                significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n            }\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        const significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n        significand.low = significand.low.add(significandLow);\n        if (lessThan(significand.low, significandLow)) {\n            significand.high = significand.high.add(Long.fromNumber(1));\n        }\n        biasedExponent = exponent + EXPONENT_BIAS;\n        const dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n        if (significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))) {\n            dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n        }\n        else {\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n        }\n        dec.low = significand.low;\n        if (isNegative) {\n            dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n        }\n        const buffer = ByteUtils.allocate(16);\n        index = 0;\n        buffer[index++] = dec.low.low & 0xff;\n        buffer[index++] = (dec.low.low >> 8) & 0xff;\n        buffer[index++] = (dec.low.low >> 16) & 0xff;\n        buffer[index++] = (dec.low.low >> 24) & 0xff;\n        buffer[index++] = dec.low.high & 0xff;\n        buffer[index++] = (dec.low.high >> 8) & 0xff;\n        buffer[index++] = (dec.low.high >> 16) & 0xff;\n        buffer[index++] = (dec.low.high >> 24) & 0xff;\n        buffer[index++] = dec.high.low & 0xff;\n        buffer[index++] = (dec.high.low >> 8) & 0xff;\n        buffer[index++] = (dec.high.low >> 16) & 0xff;\n        buffer[index++] = (dec.high.low >> 24) & 0xff;\n        buffer[index++] = dec.high.high & 0xff;\n        buffer[index++] = (dec.high.high >> 8) & 0xff;\n        buffer[index++] = (dec.high.high >> 16) & 0xff;\n        buffer[index++] = (dec.high.high >> 24) & 0xff;\n        return new Decimal128(buffer);\n    }\n    toString() {\n        let biased_exponent;\n        let significand_digits = 0;\n        const significand = new Array(36);\n        for (let i = 0; i < significand.length; i++)\n            significand[i] = 0;\n        let index = 0;\n        let is_zero = false;\n        let significand_msb;\n        let significand128 = { parts: [0, 0, 0, 0] };\n        let j, k;\n        const string = [];\n        index = 0;\n        const buffer = this.bytes;\n        const low = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const midl = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const midh = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const high = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        index = 0;\n        const dec = {\n            low: new Long(low, midl),\n            high: new Long(midh, high)\n        };\n        if (dec.high.lessThan(Long.ZERO)) {\n            string.push('-');\n        }\n        const combination = (high >> 26) & COMBINATION_MASK;\n        if (combination >> 3 === 3) {\n            if (combination === COMBINATION_INFINITY) {\n                return string.join('') + 'Infinity';\n            }\n            else if (combination === COMBINATION_NAN) {\n                return 'NaN';\n            }\n            else {\n                biased_exponent = (high >> 15) & EXPONENT_MASK;\n                significand_msb = 0x08 + ((high >> 14) & 0x01);\n            }\n        }\n        else {\n            significand_msb = (high >> 14) & 0x07;\n            biased_exponent = (high >> 17) & EXPONENT_MASK;\n        }\n        const exponent = biased_exponent - EXPONENT_BIAS;\n        significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n        significand128.parts[1] = midh;\n        significand128.parts[2] = midl;\n        significand128.parts[3] = low;\n        if (significand128.parts[0] === 0 &&\n            significand128.parts[1] === 0 &&\n            significand128.parts[2] === 0 &&\n            significand128.parts[3] === 0) {\n            is_zero = true;\n        }\n        else {\n            for (k = 3; k >= 0; k--) {\n                let least_digits = 0;\n                const result = divideu128(significand128);\n                significand128 = result.quotient;\n                least_digits = result.rem.low;\n                if (!least_digits)\n                    continue;\n                for (j = 8; j >= 0; j--) {\n                    significand[k * 9 + j] = least_digits % 10;\n                    least_digits = Math.floor(least_digits / 10);\n                }\n            }\n        }\n        if (is_zero) {\n            significand_digits = 1;\n            significand[index] = 0;\n        }\n        else {\n            significand_digits = 36;\n            while (!significand[index]) {\n                significand_digits = significand_digits - 1;\n                index = index + 1;\n            }\n        }\n        const scientific_exponent = significand_digits - 1 + exponent;\n        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n            if (significand_digits > 34) {\n                string.push(`${0}`);\n                if (exponent > 0)\n                    string.push(`E+${exponent}`);\n                else if (exponent < 0)\n                    string.push(`E${exponent}`);\n                return string.join('');\n            }\n            string.push(`${significand[index++]}`);\n            significand_digits = significand_digits - 1;\n            if (significand_digits) {\n                string.push('.');\n            }\n            for (let i = 0; i < significand_digits; i++) {\n                string.push(`${significand[index++]}`);\n            }\n            string.push('E');\n            if (scientific_exponent > 0) {\n                string.push(`+${scientific_exponent}`);\n            }\n            else {\n                string.push(`${scientific_exponent}`);\n            }\n        }\n        else {\n            if (exponent >= 0) {\n                for (let i = 0; i < significand_digits; i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n            else {\n                let radix_position = significand_digits + exponent;\n                if (radix_position > 0) {\n                    for (let i = 0; i < radix_position; i++) {\n                        string.push(`${significand[index++]}`);\n                    }\n                }\n                else {\n                    string.push('0');\n                }\n                string.push('.');\n                while (radix_position++ < 0) {\n                    string.push('0');\n                }\n                for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n        }\n        return string.join('');\n    }\n    toJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    toExtendedJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    static fromExtendedJSON(doc) {\n        return Decimal128.fromString(doc.$numberDecimal);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Decimal128(\"${this.toString()}\")`;\n    }\n}\n\nclass Double extends BSONValue {\n    get _bsontype() {\n        return 'Double';\n    }\n    constructor(value) {\n        super();\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toString(radix) {\n        return this.value.toString(radix);\n    }\n    toExtendedJSON(options) {\n        if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n            return this.value;\n        }\n        if (Object.is(Math.sign(this.value), -0)) {\n            return { $numberDouble: '-0.0' };\n        }\n        return {\n            $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString()\n        };\n    }\n    static fromExtendedJSON(doc, options) {\n        const doubleValue = parseFloat(doc.$numberDouble);\n        return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const eJSON = this.toExtendedJSON();\n        return `new Double(${eJSON.$numberDouble})`;\n    }\n}\n\nclass Int32 extends BSONValue {\n    get _bsontype() {\n        return 'Int32';\n    }\n    constructor(value) {\n        super();\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value | 0;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString(radix) {\n        return this.value.toString(radix);\n    }\n    toJSON() {\n        return this.value;\n    }\n    toExtendedJSON(options) {\n        if (options && (options.relaxed || options.legacy))\n            return this.value;\n        return { $numberInt: this.value.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Int32(${this.valueOf()})`;\n    }\n}\n\nclass MaxKey extends BSONValue {\n    get _bsontype() {\n        return 'MaxKey';\n    }\n    toExtendedJSON() {\n        return { $maxKey: 1 };\n    }\n    static fromExtendedJSON() {\n        return new MaxKey();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'new MaxKey()';\n    }\n}\n\nclass MinKey extends BSONValue {\n    get _bsontype() {\n        return 'MinKey';\n    }\n    toExtendedJSON() {\n        return { $minKey: 1 };\n    }\n    static fromExtendedJSON() {\n        return new MinKey();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'new MinKey()';\n    }\n}\n\nconst checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\nlet PROCESS_UNIQUE = null;\nconst kId = Symbol('id');\nclass ObjectId extends BSONValue {\n    get _bsontype() {\n        return 'ObjectId';\n    }\n    constructor(inputId) {\n        super();\n        let workingId;\n        if (typeof inputId === 'object' && inputId && 'id' in inputId) {\n            if (typeof inputId.id !== 'string' && !ArrayBuffer.isView(inputId.id)) {\n                throw new BSONError('Argument passed in must have an id that is of type string or Buffer');\n            }\n            if ('toHexString' in inputId && typeof inputId.toHexString === 'function') {\n                workingId = ByteUtils.fromHex(inputId.toHexString());\n            }\n            else {\n                workingId = inputId.id;\n            }\n        }\n        else {\n            workingId = inputId;\n        }\n        if (workingId == null || typeof workingId === 'number') {\n            this[kId] = ObjectId.generate(typeof workingId === 'number' ? workingId : undefined);\n        }\n        else if (ArrayBuffer.isView(workingId) && workingId.byteLength === 12) {\n            this[kId] = ByteUtils.toLocalBufferType(workingId);\n        }\n        else if (typeof workingId === 'string') {\n            if (workingId.length === 24 && checkForHexRegExp.test(workingId)) {\n                this[kId] = ByteUtils.fromHex(workingId);\n            }\n            else {\n                throw new BSONError('input must be a 24 character hex string, 12 byte Uint8Array, or an integer');\n            }\n        }\n        else {\n            throw new BSONError('Argument passed in does not match the accepted types');\n        }\n        if (ObjectId.cacheHexString) {\n            this.__id = ByteUtils.toHex(this.id);\n        }\n    }\n    get id() {\n        return this[kId];\n    }\n    set id(value) {\n        this[kId] = value;\n        if (ObjectId.cacheHexString) {\n            this.__id = ByteUtils.toHex(value);\n        }\n    }\n    toHexString() {\n        if (ObjectId.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const hexString = ByteUtils.toHex(this.id);\n        if (ObjectId.cacheHexString && !this.__id) {\n            this.__id = hexString;\n        }\n        return hexString;\n    }\n    static getInc() {\n        return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n    }\n    static generate(time) {\n        if ('number' !== typeof time) {\n            time = Math.floor(Date.now() / 1000);\n        }\n        const inc = ObjectId.getInc();\n        const buffer = ByteUtils.allocate(12);\n        BSONDataView.fromUint8Array(buffer).setUint32(0, time, false);\n        if (PROCESS_UNIQUE === null) {\n            PROCESS_UNIQUE = ByteUtils.randomBytes(5);\n        }\n        buffer[4] = PROCESS_UNIQUE[0];\n        buffer[5] = PROCESS_UNIQUE[1];\n        buffer[6] = PROCESS_UNIQUE[2];\n        buffer[7] = PROCESS_UNIQUE[3];\n        buffer[8] = PROCESS_UNIQUE[4];\n        buffer[11] = inc & 0xff;\n        buffer[10] = (inc >> 8) & 0xff;\n        buffer[9] = (inc >> 16) & 0xff;\n        return buffer;\n    }\n    toString(encoding) {\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.id);\n        if (encoding === 'hex')\n            return this.toHexString();\n        return this.toHexString();\n    }\n    toJSON() {\n        return this.toHexString();\n    }\n    static is(variable) {\n        return (variable != null &&\n            typeof variable === 'object' &&\n            '_bsontype' in variable &&\n            variable._bsontype === 'ObjectId');\n    }\n    equals(otherId) {\n        if (otherId === undefined || otherId === null) {\n            return false;\n        }\n        if (ObjectId.is(otherId)) {\n            return this[kId][11] === otherId[kId][11] && ByteUtils.equals(this[kId], otherId[kId]);\n        }\n        if (typeof otherId === 'string') {\n            return otherId.toLowerCase() === this.toHexString();\n        }\n        if (typeof otherId === 'object' && typeof otherId.toHexString === 'function') {\n            const otherIdString = otherId.toHexString();\n            const thisIdString = this.toHexString();\n            return typeof otherIdString === 'string' && otherIdString.toLowerCase() === thisIdString;\n        }\n        return false;\n    }\n    getTimestamp() {\n        const timestamp = new Date();\n        const time = BSONDataView.fromUint8Array(this.id).getUint32(0, false);\n        timestamp.setTime(Math.floor(time) * 1000);\n        return timestamp;\n    }\n    static createPk() {\n        return new ObjectId();\n    }\n    static createFromTime(time) {\n        const buffer = ByteUtils.fromNumberArray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        BSONDataView.fromUint8Array(buffer).setUint32(0, time, false);\n        return new ObjectId(buffer);\n    }\n    static createFromHexString(hexString) {\n        if (hexString?.length !== 24) {\n            throw new BSONError('hex string must be 24 characters');\n        }\n        return new ObjectId(ByteUtils.fromHex(hexString));\n    }\n    static createFromBase64(base64) {\n        if (base64?.length !== 16) {\n            throw new BSONError('base64 string must be 16 characters');\n        }\n        return new ObjectId(ByteUtils.fromBase64(base64));\n    }\n    static isValid(id) {\n        if (id == null)\n            return false;\n        try {\n            new ObjectId(id);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    toExtendedJSON() {\n        if (this.toHexString)\n            return { $oid: this.toHexString() };\n        return { $oid: this.toString('hex') };\n    }\n    static fromExtendedJSON(doc) {\n        return new ObjectId(doc.$oid);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new ObjectId(\"${this.toHexString()}\")`;\n    }\n}\nObjectId.index = Math.floor(Math.random() * 0xffffff);\n\nfunction internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n    let totalLength = 4 + 1;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n        }\n    }\n    else {\n        if (typeof object?.toBSON === 'function') {\n            object = object.toBSON();\n        }\n        for (const key of Object.keys(object)) {\n            totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n        }\n    }\n    return totalLength;\n}\nfunction calculateElement(name, value, serializeFunctions = false, isArray = false, ignoreUndefined = false) {\n    if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n    }\n    switch (typeof value) {\n        case 'string':\n            return 1 + ByteUtils.utf8ByteLength(name) + 1 + 4 + ByteUtils.utf8ByteLength(value) + 1;\n        case 'number':\n            if (Math.floor(value) === value &&\n                value >= JS_INT_MIN &&\n                value <= JS_INT_MAX) {\n                if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                    return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (4 + 1);\n                }\n                else {\n                    return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n                }\n            }\n            else {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n        case 'undefined':\n            if (isArray || !ignoreUndefined)\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n            return 0;\n        case 'boolean':\n            return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 1);\n        case 'object':\n            if (value != null &&\n                typeof value._bsontype === 'string' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value == null || value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n            }\n            else if (value._bsontype === 'ObjectId') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (12 + 1);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n            else if (ArrayBuffer.isView(value) ||\n                value instanceof ArrayBuffer ||\n                isAnyArrayBuffer(value)) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 4 + 1) + value.byteLength);\n            }\n            else if (value._bsontype === 'Long' ||\n                value._bsontype === 'Double' ||\n                value._bsontype === 'Timestamp') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n            else if (value._bsontype === 'Decimal128') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (16 + 1);\n            }\n            else if (value._bsontype === 'Code') {\n                if (value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        ByteUtils.utf8ByteLength(value.code.toString()) +\n                        1 +\n                        internalCalculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        1 +\n                        4 +\n                        ByteUtils.utf8ByteLength(value.code.toString()) +\n                        1);\n                }\n            }\n            else if (value._bsontype === 'Binary') {\n                const binary = value;\n                if (binary.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        (binary.position + 1 + 4 + 1 + 4));\n                }\n                else {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (binary.position + 1 + 4 + 1));\n                }\n            }\n            else if (value._bsontype === 'Symbol') {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    ByteUtils.utf8ByteLength(value.value) +\n                    4 +\n                    1 +\n                    1);\n            }\n            else if (value._bsontype === 'DBRef') {\n                const ordered_values = Object.assign({\n                    $ref: value.collection,\n                    $id: value.oid\n                }, value.fields);\n                if (value.db != null) {\n                    ordered_values['$db'] = value.db;\n                }\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    internalCalculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined));\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.source) +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.pattern) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.options) +\n                    1);\n            }\n            else {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    internalCalculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n                    1);\n            }\n        case 'function':\n            if (serializeFunctions) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    4 +\n                    ByteUtils.utf8ByteLength(value.toString()) +\n                    1);\n            }\n    }\n    return 0;\n}\n\nfunction alphabetize(str) {\n    return str.split('').sort().join('');\n}\nclass BSONRegExp extends BSONValue {\n    get _bsontype() {\n        return 'BSONRegExp';\n    }\n    constructor(pattern, options) {\n        super();\n        this.pattern = pattern;\n        this.options = alphabetize(options ?? '');\n        if (this.pattern.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);\n        }\n        if (this.options.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);\n        }\n        for (let i = 0; i < this.options.length; i++) {\n            if (!(this.options[i] === 'i' ||\n                this.options[i] === 'm' ||\n                this.options[i] === 'x' ||\n                this.options[i] === 'l' ||\n                this.options[i] === 's' ||\n                this.options[i] === 'u')) {\n                throw new BSONError(`The regular expression option [${this.options[i]}] is not supported`);\n            }\n        }\n    }\n    static parseOptions(options) {\n        return options ? options.split('').sort().join('') : '';\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        if (options.legacy) {\n            return { $regex: this.pattern, $options: this.options };\n        }\n        return { $regularExpression: { pattern: this.pattern, options: this.options } };\n    }\n    static fromExtendedJSON(doc) {\n        if ('$regex' in doc) {\n            if (typeof doc.$regex !== 'string') {\n                if (doc.$regex._bsontype === 'BSONRegExp') {\n                    return doc;\n                }\n            }\n            else {\n                return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n            }\n        }\n        if ('$regularExpression' in doc) {\n            return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n        }\n        throw new BSONError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new BSONRegExp(${JSON.stringify(this.pattern)}, ${JSON.stringify(this.options)})`;\n    }\n}\n\nclass BSONSymbol extends BSONValue {\n    get _bsontype() {\n        return 'BSONSymbol';\n    }\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString() {\n        return this.value;\n    }\n    inspect() {\n        return `new BSONSymbol(${JSON.stringify(this.value)})`;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toExtendedJSON() {\n        return { $symbol: this.value };\n    }\n    static fromExtendedJSON(doc) {\n        return new BSONSymbol(doc.$symbol);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n}\n\nconst LongWithoutOverridesClass = Long;\nclass Timestamp extends LongWithoutOverridesClass {\n    get _bsontype() {\n        return 'Timestamp';\n    }\n    constructor(low) {\n        if (low == null) {\n            super(0, 0, true);\n        }\n        else if (typeof low === 'bigint') {\n            super(low, true);\n        }\n        else if (Long.isLong(low)) {\n            super(low.low, low.high, true);\n        }\n        else if (typeof low === 'object' && 't' in low && 'i' in low) {\n            if (typeof low.t !== 'number' && (typeof low.t !== 'object' || low.t._bsontype !== 'Int32')) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide t as a number');\n            }\n            if (typeof low.i !== 'number' && (typeof low.i !== 'object' || low.i._bsontype !== 'Int32')) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide i as a number');\n            }\n            const t = Number(low.t);\n            const i = Number(low.i);\n            if (t < 0 || Number.isNaN(t)) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide a positive t');\n            }\n            if (i < 0 || Number.isNaN(i)) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide a positive i');\n            }\n            if (t > 4294967295) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide t equal or less than uint32 max');\n            }\n            if (i > 4294967295) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide i equal or less than uint32 max');\n            }\n            super(i, t, true);\n        }\n        else {\n            throw new BSONError('A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }');\n        }\n    }\n    toJSON() {\n        return {\n            $timestamp: this.toString()\n        };\n    }\n    static fromInt(value) {\n        return new Timestamp(Long.fromInt(value, true));\n    }\n    static fromNumber(value) {\n        return new Timestamp(Long.fromNumber(value, true));\n    }\n    static fromBits(lowBits, highBits) {\n        return new Timestamp({ i: lowBits, t: highBits });\n    }\n    static fromString(str, optRadix) {\n        return new Timestamp(Long.fromString(str, true, optRadix));\n    }\n    toExtendedJSON() {\n        return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n    }\n    static fromExtendedJSON(doc) {\n        const i = Long.isLong(doc.$timestamp.i)\n            ? doc.$timestamp.i.getLowBitsUnsigned()\n            : doc.$timestamp.i;\n        const t = Long.isLong(doc.$timestamp.t)\n            ? doc.$timestamp.t.getLowBitsUnsigned()\n            : doc.$timestamp.t;\n        return new Timestamp({ t, i });\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Timestamp({ t: ${this.getHighBits()}, i: ${this.getLowBits()} })`;\n    }\n}\nTimestamp.MAX_VALUE = Long.MAX_UNSIGNED_VALUE;\n\nconst FIRST_BIT = 0x80;\nconst FIRST_TWO_BITS = 0xc0;\nconst FIRST_THREE_BITS = 0xe0;\nconst FIRST_FOUR_BITS = 0xf0;\nconst FIRST_FIVE_BITS = 0xf8;\nconst TWO_BIT_CHAR = 0xc0;\nconst THREE_BIT_CHAR = 0xe0;\nconst FOUR_BIT_CHAR = 0xf0;\nconst CONTINUING_CHAR = 0x80;\nfunction validateUtf8(bytes, start, end) {\n    let continuation = 0;\n    for (let i = start; i < end; i += 1) {\n        const byte = bytes[i];\n        if (continuation) {\n            if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n                return false;\n            }\n            continuation -= 1;\n        }\n        else if (byte & FIRST_BIT) {\n            if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n                continuation = 1;\n            }\n            else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n                continuation = 2;\n            }\n            else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n                continuation = 3;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return !continuation;\n}\n\nconst JS_INT_MAX_LONG = Long.fromNumber(JS_INT_MAX);\nconst JS_INT_MIN_LONG = Long.fromNumber(JS_INT_MIN);\nfunction internalDeserialize(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    const index = options && options.index ? options.index : 0;\n    const size = buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n    if (size < 5) {\n        throw new BSONError(`bson size must be >= 5, is ${size}`);\n    }\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n        throw new BSONError(`buffer length ${buffer.length} must be >= bson size ${size}`);\n    }\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n        throw new BSONError(`buffer length ${buffer.length} must === bson size ${size}`);\n    }\n    if (size + index > buffer.byteLength) {\n        throw new BSONError(`(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`);\n    }\n    if (buffer[index + size - 1] !== 0) {\n        throw new BSONError(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    }\n    return deserializeObject(buffer, index, options, isArray);\n}\nconst allowedDBRefKeys = /^\\$ref$|^\\$id$|^\\$db$/;\nfunction deserializeObject(buffer, index, options, isArray = false) {\n    const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n    const raw = options['raw'] == null ? false : options['raw'];\n    const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n    const promoteBuffers = options.promoteBuffers ?? false;\n    const promoteLongs = options.promoteLongs ?? true;\n    const promoteValues = options.promoteValues ?? true;\n    const useBigInt64 = options.useBigInt64 ?? false;\n    if (useBigInt64 && !promoteValues) {\n        throw new BSONError('Must either request bigint or Long for int64 deserialization');\n    }\n    if (useBigInt64 && !promoteLongs) {\n        throw new BSONError('Must either request bigint or Long for int64 deserialization');\n    }\n    const validation = options.validation == null ? { utf8: true } : options.validation;\n    let globalUTFValidation = true;\n    let validationSetting;\n    const utf8KeysSet = new Set();\n    const utf8ValidatedKeys = validation.utf8;\n    if (typeof utf8ValidatedKeys === 'boolean') {\n        validationSetting = utf8ValidatedKeys;\n    }\n    else {\n        globalUTFValidation = false;\n        const utf8ValidationValues = Object.keys(utf8ValidatedKeys).map(function (key) {\n            return utf8ValidatedKeys[key];\n        });\n        if (utf8ValidationValues.length === 0) {\n            throw new BSONError('UTF-8 validation setting cannot be empty');\n        }\n        if (typeof utf8ValidationValues[0] !== 'boolean') {\n            throw new BSONError('Invalid UTF-8 validation option, must specify boolean values');\n        }\n        validationSetting = utf8ValidationValues[0];\n        if (!utf8ValidationValues.every(item => item === validationSetting)) {\n            throw new BSONError('Invalid UTF-8 validation option - keys must be all true or all false');\n        }\n    }\n    if (!globalUTFValidation) {\n        for (const key of Object.keys(utf8ValidatedKeys)) {\n            utf8KeysSet.add(key);\n        }\n    }\n    const startIndex = index;\n    if (buffer.length < 5)\n        throw new BSONError('corrupt bson message < 5 bytes long');\n    const size = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    if (size < 5 || size > buffer.length)\n        throw new BSONError('corrupt bson message');\n    const object = isArray ? [] : {};\n    let arrayIndex = 0;\n    const done = false;\n    let isPossibleDBRef = isArray ? false : null;\n    const dataview = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    while (!done) {\n        const elementType = buffer[index++];\n        if (elementType === 0)\n            break;\n        let i = index;\n        while (buffer[i] !== 0x00 && i < buffer.length) {\n            i++;\n        }\n        if (i >= buffer.byteLength)\n            throw new BSONError('Bad BSON Document: illegal CString');\n        const name = isArray ? arrayIndex++ : ByteUtils.toUTF8(buffer, index, i);\n        let shouldValidateKey = true;\n        if (globalUTFValidation || utf8KeysSet.has(name)) {\n            shouldValidateKey = validationSetting;\n        }\n        else {\n            shouldValidateKey = !validationSetting;\n        }\n        if (isPossibleDBRef !== false && name[0] === '$') {\n            isPossibleDBRef = allowedDBRefKeys.test(name);\n        }\n        let value;\n        index = i + 1;\n        if (elementType === BSON_DATA_STRING) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            value = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_OID) {\n            const oid = ByteUtils.allocate(12);\n            oid.set(buffer.subarray(index, index + 12));\n            value = new ObjectId(oid);\n            index = index + 12;\n        }\n        else if (elementType === BSON_DATA_INT && promoteValues === false) {\n            value = new Int32(buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24));\n        }\n        else if (elementType === BSON_DATA_INT) {\n            value =\n                buffer[index++] |\n                    (buffer[index++] << 8) |\n                    (buffer[index++] << 16) |\n                    (buffer[index++] << 24);\n        }\n        else if (elementType === BSON_DATA_NUMBER && promoteValues === false) {\n            value = new Double(dataview.getFloat64(index, true));\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_NUMBER) {\n            value = dataview.getFloat64(index, true);\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_DATE) {\n            const lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            value = new Date(new Long(lowBits, highBits).toNumber());\n        }\n        else if (elementType === BSON_DATA_BOOLEAN) {\n            if (buffer[index] !== 0 && buffer[index] !== 1)\n                throw new BSONError('illegal boolean type value');\n            value = buffer[index++] === 1;\n        }\n        else if (elementType === BSON_DATA_OBJECT) {\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            if (objectSize <= 0 || objectSize > buffer.length - index)\n                throw new BSONError('bad embedded document length in bson');\n            if (raw) {\n                value = buffer.slice(index, index + objectSize);\n            }\n            else {\n                let objectOptions = options;\n                if (!globalUTFValidation) {\n                    objectOptions = { ...options, validation: { utf8: shouldValidateKey } };\n                }\n                value = deserializeObject(buffer, _index, objectOptions, false);\n            }\n            index = index + objectSize;\n        }\n        else if (elementType === BSON_DATA_ARRAY) {\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            let arrayOptions = options;\n            const stopIndex = index + objectSize;\n            if (fieldsAsRaw && fieldsAsRaw[name]) {\n                arrayOptions = { ...options, raw: true };\n            }\n            if (!globalUTFValidation) {\n                arrayOptions = { ...arrayOptions, validation: { utf8: shouldValidateKey } };\n            }\n            value = deserializeObject(buffer, _index, arrayOptions, true);\n            index = index + objectSize;\n            if (buffer[index - 1] !== 0)\n                throw new BSONError('invalid array terminator byte');\n            if (index !== stopIndex)\n                throw new BSONError('corrupted array bson');\n        }\n        else if (elementType === BSON_DATA_UNDEFINED) {\n            value = undefined;\n        }\n        else if (elementType === BSON_DATA_NULL) {\n            value = null;\n        }\n        else if (elementType === BSON_DATA_LONG) {\n            const dataview = BSONDataView.fromUint8Array(buffer.subarray(index, index + 8));\n            const lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const long = new Long(lowBits, highBits);\n            if (useBigInt64) {\n                value = dataview.getBigInt64(0, true);\n            }\n            else if (promoteLongs && promoteValues === true) {\n                value =\n                    long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n                        ? long.toNumber()\n                        : long;\n            }\n            else {\n                value = long;\n            }\n        }\n        else if (elementType === BSON_DATA_DECIMAL128) {\n            const bytes = ByteUtils.allocate(16);\n            bytes.set(buffer.subarray(index, index + 16), 0);\n            index = index + 16;\n            value = new Decimal128(bytes);\n        }\n        else if (elementType === BSON_DATA_BINARY) {\n            let binarySize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const totalBinarySize = binarySize;\n            const subType = buffer[index++];\n            if (binarySize < 0)\n                throw new BSONError('Negative binary type element size found');\n            if (binarySize > buffer.byteLength)\n                throw new BSONError('Binary type size larger than document size');\n            if (buffer['slice'] != null) {\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = ByteUtils.toLocalBufferType(buffer.slice(index, index + binarySize));\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                    if (subType === BSON_BINARY_SUBTYPE_UUID_NEW && UUID.isValid(value)) {\n                        value = value.toUUID();\n                    }\n                }\n            }\n            else {\n                const _buffer = ByteUtils.allocate(binarySize);\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                for (i = 0; i < binarySize; i++) {\n                    _buffer[i] = buffer[index + i];\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = _buffer;\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                    if (subType === BSON_BINARY_SUBTYPE_UUID_NEW && UUID.isValid(value)) {\n                        value = value.toUUID();\n                    }\n                }\n            }\n            index = index + binarySize;\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === false) {\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const source = ByteUtils.toUTF8(buffer, index, i);\n            index = i + 1;\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const regExpOptions = ByteUtils.toUTF8(buffer, index, i);\n            index = i + 1;\n            const optionsArray = new Array(regExpOptions.length);\n            for (i = 0; i < regExpOptions.length; i++) {\n                switch (regExpOptions[i]) {\n                    case 'm':\n                        optionsArray[i] = 'm';\n                        break;\n                    case 's':\n                        optionsArray[i] = 'g';\n                        break;\n                    case 'i':\n                        optionsArray[i] = 'i';\n                        break;\n                }\n            }\n            value = new RegExp(source, optionsArray.join(''));\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === true) {\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const source = ByteUtils.toUTF8(buffer, index, i);\n            index = i + 1;\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const regExpOptions = ByteUtils.toUTF8(buffer, index, i);\n            index = i + 1;\n            value = new BSONRegExp(source, regExpOptions);\n        }\n        else if (elementType === BSON_DATA_SYMBOL) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const symbol = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = promoteValues ? symbol : new BSONSymbol(symbol);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_TIMESTAMP) {\n            const i = buffer[index++] +\n                buffer[index++] * (1 << 8) +\n                buffer[index++] * (1 << 16) +\n                buffer[index++] * (1 << 24);\n            const t = buffer[index++] +\n                buffer[index++] * (1 << 8) +\n                buffer[index++] * (1 << 16) +\n                buffer[index++] * (1 << 24);\n            value = new Timestamp({ i, t });\n        }\n        else if (elementType === BSON_DATA_MIN_KEY) {\n            value = new MinKey();\n        }\n        else if (elementType === BSON_DATA_MAX_KEY) {\n            value = new MaxKey();\n        }\n        else if (elementType === BSON_DATA_CODE) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = new Code(functionString);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_CODE_W_SCOPE) {\n            const totalSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (totalSize < 4 + 4 + 4 + 1) {\n                throw new BSONError('code_w_scope total size shorter minimum expected length');\n            }\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            const scopeObject = deserializeObject(buffer, _index, options, false);\n            index = index + objectSize;\n            if (totalSize < 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too short, truncating scope');\n            }\n            if (totalSize > 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too long, clips outer document');\n            }\n            value = new Code(functionString, scopeObject);\n        }\n        else if (elementType === BSON_DATA_DBPOINTER) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0)\n                throw new BSONError('bad string length in bson');\n            if (validation != null && validation.utf8) {\n                if (!validateUtf8(buffer, index, index + stringSize - 1)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n            }\n            const namespace = ByteUtils.toUTF8(buffer, index, index + stringSize - 1);\n            index = index + stringSize;\n            const oidBuffer = ByteUtils.allocate(12);\n            oidBuffer.set(buffer.subarray(index, index + 12), 0);\n            const oid = new ObjectId(oidBuffer);\n            index = index + 12;\n            value = new DBRef(namespace, oid);\n        }\n        else {\n            throw new BSONError(`Detected unknown BSON type ${elementType.toString(16)} for fieldname \"${name}\"`);\n        }\n        if (name === '__proto__') {\n            Object.defineProperty(object, name, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n        else {\n            object[name] = value;\n        }\n    }\n    if (size !== index - startIndex) {\n        if (isArray)\n            throw new BSONError('corrupt array bson');\n        throw new BSONError('corrupt object bson');\n    }\n    if (!isPossibleDBRef)\n        return object;\n    if (isDBRefLike(object)) {\n        const copy = Object.assign({}, object);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n    return object;\n}\nfunction getValidatedString(buffer, start, end, shouldValidateUtf8) {\n    const value = ByteUtils.toUTF8(buffer, start, end);\n    if (shouldValidateUtf8) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 0xfffd) {\n                if (!validateUtf8(buffer, start, end)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n                break;\n            }\n        }\n    }\n    return value;\n}\n\nconst regexp = /\\x00/;\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\nfunction serializeString(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_STRING;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0;\n    const size = ByteUtils.encodeUTF8Into(buffer, value, index + 4);\n    buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n    buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n    buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n    buffer[index] = (size + 1) & 0xff;\n    index = index + 4 + size;\n    buffer[index++] = 0;\n    return index;\n}\nconst NUMBER_SPACE = new DataView(new ArrayBuffer(8), 0, 8);\nconst FOUR_BYTE_VIEW_ON_NUMBER = new Uint8Array(NUMBER_SPACE.buffer, 0, 4);\nconst EIGHT_BYTE_VIEW_ON_NUMBER = new Uint8Array(NUMBER_SPACE.buffer, 0, 8);\nfunction serializeNumber(buffer, key, value, index) {\n    const isNegativeZero = Object.is(value, -0);\n    const type = !isNegativeZero &&\n        Number.isSafeInteger(value) &&\n        value <= BSON_INT32_MAX &&\n        value >= BSON_INT32_MIN\n        ? BSON_DATA_INT\n        : BSON_DATA_NUMBER;\n    if (type === BSON_DATA_INT) {\n        NUMBER_SPACE.setInt32(0, value, true);\n    }\n    else {\n        NUMBER_SPACE.setFloat64(0, value, true);\n    }\n    const bytes = type === BSON_DATA_INT ? FOUR_BYTE_VIEW_ON_NUMBER : EIGHT_BYTE_VIEW_ON_NUMBER;\n    buffer[index++] = type;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0x00;\n    buffer.set(bytes, index);\n    index += bytes.byteLength;\n    return index;\n}\nfunction serializeBigInt(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_LONG;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index += numberOfWrittenBytes;\n    buffer[index++] = 0;\n    NUMBER_SPACE.setBigInt64(0, value, true);\n    buffer.set(EIGHT_BYTE_VIEW_ON_NUMBER, index);\n    index += EIGHT_BYTE_VIEW_ON_NUMBER.byteLength;\n    return index;\n}\nfunction serializeNull(buffer, key, _, index) {\n    buffer[index++] = BSON_DATA_NULL;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeBoolean(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BOOLEAN;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer[index++] = value ? 1 : 0;\n    return index;\n}\nfunction serializeDate(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_DATE;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const dateInMilis = Long.fromNumber(value.getTime());\n    const lowBits = dateInMilis.getLowBits();\n    const highBits = dateInMilis.getHighBits();\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeRegExp(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_REGEXP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.source && value.source.match(regexp) != null) {\n        throw new BSONError('value ' + value.source + ' must not contain null bytes');\n    }\n    index = index + ByteUtils.encodeUTF8Into(buffer, value.source, index);\n    buffer[index++] = 0x00;\n    if (value.ignoreCase)\n        buffer[index++] = 0x69;\n    if (value.global)\n        buffer[index++] = 0x73;\n    if (value.multiline)\n        buffer[index++] = 0x6d;\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeBSONRegExp(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_REGEXP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.pattern.match(regexp) != null) {\n        throw new BSONError('pattern ' + value.pattern + ' must not contain null bytes');\n    }\n    index = index + ByteUtils.encodeUTF8Into(buffer, value.pattern, index);\n    buffer[index++] = 0x00;\n    const sortedOptions = value.options.split('').sort().join('');\n    index = index + ByteUtils.encodeUTF8Into(buffer, sortedOptions, index);\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeMinMax(buffer, key, value, index) {\n    if (value === null) {\n        buffer[index++] = BSON_DATA_NULL;\n    }\n    else if (value._bsontype === 'MinKey') {\n        buffer[index++] = BSON_DATA_MIN_KEY;\n    }\n    else {\n        buffer[index++] = BSON_DATA_MAX_KEY;\n    }\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeObjectId(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_OID;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (isUint8Array(value.id)) {\n        buffer.set(value.id.subarray(0, 12), index);\n    }\n    else {\n        throw new BSONError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    }\n    return index + 12;\n}\nfunction serializeBuffer(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BINARY;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const size = value.length;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    buffer[index++] = BSON_BINARY_SUBTYPE_DEFAULT;\n    buffer.set(value, index);\n    index = index + size;\n    return index;\n}\nfunction serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path) {\n    if (path.has(value)) {\n        throw new BSONError('Cannot convert circular structure to BSON');\n    }\n    path.add(value);\n    buffer[index++] = Array.isArray(value) ? BSON_DATA_ARRAY : BSON_DATA_OBJECT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n    path.delete(value);\n    return endIndex;\n}\nfunction serializeDecimal128(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_DECIMAL128;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer.set(value.bytes.subarray(0, 16), index);\n    return index + 16;\n}\nfunction serializeLong(buffer, key, value, index) {\n    buffer[index++] =\n        value._bsontype === 'Long' ? BSON_DATA_LONG : BSON_DATA_TIMESTAMP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const lowBits = value.getLowBits();\n    const highBits = value.getHighBits();\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeInt32(buffer, key, value, index) {\n    value = value.valueOf();\n    buffer[index++] = BSON_DATA_INT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n    return index;\n}\nfunction serializeDouble(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_NUMBER;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    NUMBER_SPACE.setFloat64(0, value.value, true);\n    buffer.set(EIGHT_BYTE_VIEW_ON_NUMBER, index);\n    index = index + 8;\n    return index;\n}\nfunction serializeFunction(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_CODE;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const functionString = value.toString();\n    const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    index = index + 4 + size - 1;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeCode(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, path) {\n    if (value.scope && typeof value.scope === 'object') {\n        buffer[index++] = BSON_DATA_CODE_W_SCOPE;\n        const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        let startIndex = index;\n        const functionString = value.code;\n        index = index + 4;\n        const codeSize = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n        buffer[index] = codeSize & 0xff;\n        buffer[index + 1] = (codeSize >> 8) & 0xff;\n        buffer[index + 2] = (codeSize >> 16) & 0xff;\n        buffer[index + 3] = (codeSize >> 24) & 0xff;\n        buffer[index + 4 + codeSize - 1] = 0;\n        index = index + codeSize + 4;\n        const endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n        index = endIndex - 1;\n        const totalSize = endIndex - startIndex;\n        buffer[startIndex++] = totalSize & 0xff;\n        buffer[startIndex++] = (totalSize >> 8) & 0xff;\n        buffer[startIndex++] = (totalSize >> 16) & 0xff;\n        buffer[startIndex++] = (totalSize >> 24) & 0xff;\n        buffer[index++] = 0;\n    }\n    else {\n        buffer[index++] = BSON_DATA_CODE;\n        const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        const functionString = value.code.toString();\n        const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n        buffer[index] = size & 0xff;\n        buffer[index + 1] = (size >> 8) & 0xff;\n        buffer[index + 2] = (size >> 16) & 0xff;\n        buffer[index + 3] = (size >> 24) & 0xff;\n        index = index + 4 + size - 1;\n        buffer[index++] = 0;\n    }\n    return index;\n}\nfunction serializeBinary(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BINARY;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const data = value.buffer;\n    let size = value.position;\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY)\n        size = size + 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    buffer[index++] = value.sub_type;\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n        size = size - 4;\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n    }\n    buffer.set(data, index);\n    index = index + value.position;\n    return index;\n}\nfunction serializeSymbol(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_SYMBOL;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const size = ByteUtils.encodeUTF8Into(buffer, value.value, index + 4) + 1;\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    index = index + 4 + size - 1;\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path) {\n    buffer[index++] = BSON_DATA_OBJECT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    let startIndex = index;\n    let output = {\n        $ref: value.collection || value.namespace,\n        $id: value.oid\n    };\n    if (value.db != null) {\n        output.$db = value.db;\n    }\n    output = Object.assign(output, value.fields);\n    const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions, true, path);\n    const size = endIndex - startIndex;\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = (size >> 8) & 0xff;\n    buffer[startIndex++] = (size >> 16) & 0xff;\n    buffer[startIndex++] = (size >> 24) & 0xff;\n    return endIndex;\n}\nfunction serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {\n    if (path == null) {\n        if (object == null) {\n            buffer[0] = 0x05;\n            buffer[1] = 0x00;\n            buffer[2] = 0x00;\n            buffer[3] = 0x00;\n            buffer[4] = 0x00;\n            return 5;\n        }\n        if (Array.isArray(object)) {\n            throw new BSONError('serialize does not support an array as the root input');\n        }\n        if (typeof object !== 'object') {\n            throw new BSONError('serialize does not support non-object as the root input');\n        }\n        else if ('_bsontype' in object && typeof object._bsontype === 'string') {\n            throw new BSONError(`BSON types cannot be serialized as a document`);\n        }\n        else if (isDate(object) ||\n            isRegExp(object) ||\n            isUint8Array(object) ||\n            isAnyArrayBuffer(object)) {\n            throw new BSONError(`date, regexp, typedarray, and arraybuffer cannot be BSON documents`);\n        }\n        path = new Set();\n    }\n    path.add(object);\n    let index = startingIndex + 4;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            const key = `${i}`;\n            let value = object[i];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            if (typeof value === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (typeof value === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (typeof value === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (typeof value === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (typeof value === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    else if (object instanceof Map || isMap(object)) {\n        const iterator = object.entries();\n        let done = false;\n        while (!done) {\n            const entry = iterator.next();\n            done = !!entry.done;\n            if (done)\n                continue;\n            const key = entry.value[0];\n            let value = entry.value[1];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            const type = typeof value;\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    throw new BSONError('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw new BSONError('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw new BSONError('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === null || (value === undefined && ignoreUndefined === false)) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    else {\n        if (typeof object?.toBSON === 'function') {\n            object = object.toBSON();\n            if (object != null && typeof object !== 'object') {\n                throw new BSONError('toBSON function did not return an object');\n            }\n        }\n        for (const key of Object.keys(object)) {\n            let value = object[key];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            const type = typeof value;\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    throw new BSONError('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw new BSONError('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw new BSONError('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                if (ignoreUndefined === false)\n                    index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    path.delete(object);\n    buffer[index++] = 0x00;\n    const size = index - startingIndex;\n    buffer[startingIndex++] = size & 0xff;\n    buffer[startingIndex++] = (size >> 8) & 0xff;\n    buffer[startingIndex++] = (size >> 16) & 0xff;\n    buffer[startingIndex++] = (size >> 24) & 0xff;\n    return index;\n}\n\nfunction isBSONType(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        '_bsontype' in value &&\n        typeof value._bsontype === 'string');\n}\nconst keysToCodecs = {\n    $oid: ObjectId,\n    $binary: Binary,\n    $uuid: Binary,\n    $symbol: BSONSymbol,\n    $numberInt: Int32,\n    $numberDecimal: Decimal128,\n    $numberDouble: Double,\n    $numberLong: Long,\n    $minKey: MinKey,\n    $maxKey: MaxKey,\n    $regex: BSONRegExp,\n    $regularExpression: BSONRegExp,\n    $timestamp: Timestamp\n};\nfunction deserializeValue(value, options = {}) {\n    if (typeof value === 'number') {\n        const in32BitRange = value <= BSON_INT32_MAX && value >= BSON_INT32_MIN;\n        const in64BitRange = value <= BSON_INT64_MAX && value >= BSON_INT64_MIN;\n        if (options.relaxed || options.legacy) {\n            return value;\n        }\n        if (Number.isInteger(value) && !Object.is(value, -0)) {\n            if (in32BitRange) {\n                return new Int32(value);\n            }\n            if (in64BitRange) {\n                if (options.useBigInt64) {\n                    return BigInt(value);\n                }\n                return Long.fromNumber(value);\n            }\n        }\n        return new Double(value);\n    }\n    if (value == null || typeof value !== 'object')\n        return value;\n    if (value.$undefined)\n        return null;\n    const keys = Object.keys(value).filter(k => k.startsWith('$') && value[k] != null);\n    for (let i = 0; i < keys.length; i++) {\n        const c = keysToCodecs[keys[i]];\n        if (c)\n            return c.fromExtendedJSON(value, options);\n    }\n    if (value.$date != null) {\n        const d = value.$date;\n        const date = new Date();\n        if (options.legacy) {\n            if (typeof d === 'number')\n                date.setTime(d);\n            else if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (typeof d === 'bigint')\n                date.setTime(Number(d));\n            else\n                throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n        }\n        else {\n            if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (Long.isLong(d))\n                date.setTime(d.toNumber());\n            else if (typeof d === 'number' && options.relaxed)\n                date.setTime(d);\n            else if (typeof d === 'bigint')\n                date.setTime(Number(d));\n            else\n                throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n        }\n        return date;\n    }\n    if (value.$code != null) {\n        const copy = Object.assign({}, value);\n        if (value.$scope) {\n            copy.$scope = deserializeValue(value.$scope);\n        }\n        return Code.fromExtendedJSON(value);\n    }\n    if (isDBRefLike(value) || value.$dbPointer) {\n        const v = value.$ref ? value : value.$dbPointer;\n        if (v instanceof DBRef)\n            return v;\n        const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n        let valid = true;\n        dollarKeys.forEach(k => {\n            if (['$ref', '$id', '$db'].indexOf(k) === -1)\n                valid = false;\n        });\n        if (valid)\n            return DBRef.fromExtendedJSON(v);\n    }\n    return value;\n}\nfunction serializeArray(array, options) {\n    return array.map((v, index) => {\n        options.seenObjects.push({ propertyName: `index ${index}`, obj: null });\n        try {\n            return serializeValue(v, options);\n        }\n        finally {\n            options.seenObjects.pop();\n        }\n    });\n}\nfunction getISOString(date) {\n    const isoStr = date.toISOString();\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\nfunction serializeValue(value, options) {\n    if (value instanceof Map || isMap(value)) {\n        const obj = Object.create(null);\n        for (const [k, v] of value) {\n            if (typeof k !== 'string') {\n                throw new BSONError('Can only serialize maps with string keys');\n            }\n            obj[k] = v;\n        }\n        return serializeValue(obj, options);\n    }\n    if ((typeof value === 'object' || typeof value === 'function') && value !== null) {\n        const index = options.seenObjects.findIndex(entry => entry.obj === value);\n        if (index !== -1) {\n            const props = options.seenObjects.map(entry => entry.propertyName);\n            const leadingPart = props\n                .slice(0, index)\n                .map(prop => `${prop} -> `)\n                .join('');\n            const alreadySeen = props[index];\n            const circularPart = ' -> ' +\n                props\n                    .slice(index + 1, props.length - 1)\n                    .map(prop => `${prop} -> `)\n                    .join('');\n            const current = props[props.length - 1];\n            const leadingSpace = ' '.repeat(leadingPart.length + alreadySeen.length / 2);\n            const dashes = '-'.repeat(circularPart.length + (alreadySeen.length + current.length) / 2 - 1);\n            throw new BSONError('Converting circular structure to EJSON:\\n' +\n                `    ${leadingPart}${alreadySeen}${circularPart}${current}\\n` +\n                `    ${leadingSpace}\\\\${dashes}/`);\n        }\n        options.seenObjects[options.seenObjects.length - 1].obj = value;\n    }\n    if (Array.isArray(value))\n        return serializeArray(value, options);\n    if (value === undefined)\n        return null;\n    if (value instanceof Date || isDate(value)) {\n        const dateNum = value.getTime(), inRange = dateNum > -1 && dateNum < 253402318800000;\n        if (options.legacy) {\n            return options.relaxed && inRange\n                ? { $date: value.getTime() }\n                : { $date: getISOString(value) };\n        }\n        return options.relaxed && inRange\n            ? { $date: getISOString(value) }\n            : { $date: { $numberLong: value.getTime().toString() } };\n    }\n    if (typeof value === 'number' && (!options.relaxed || !isFinite(value))) {\n        if (Number.isInteger(value) && !Object.is(value, -0)) {\n            if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                return { $numberInt: value.toString() };\n            }\n            if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX) {\n                return { $numberLong: value.toString() };\n            }\n        }\n        return { $numberDouble: Object.is(value, -0) ? '-0.0' : value.toString() };\n    }\n    if (typeof value === 'bigint') {\n        if (!options.relaxed) {\n            return { $numberLong: BigInt.asIntN(64, value).toString() };\n        }\n        return Number(BigInt.asIntN(64, value));\n    }\n    if (value instanceof RegExp || isRegExp(value)) {\n        let flags = value.flags;\n        if (flags === undefined) {\n            const match = value.toString().match(/[gimuy]*$/);\n            if (match) {\n                flags = match[0];\n            }\n        }\n        const rx = new BSONRegExp(value.source, flags);\n        return rx.toExtendedJSON(options);\n    }\n    if (value != null && typeof value === 'object')\n        return serializeDocument(value, options);\n    return value;\n}\nconst BSON_TYPE_MAPPINGS = {\n    Binary: (o) => new Binary(o.value(), o.sub_type),\n    Code: (o) => new Code(o.code, o.scope),\n    DBRef: (o) => new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields),\n    Decimal128: (o) => new Decimal128(o.bytes),\n    Double: (o) => new Double(o.value),\n    Int32: (o) => new Int32(o.value),\n    Long: (o) => Long.fromBits(o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_),\n    MaxKey: () => new MaxKey(),\n    MinKey: () => new MinKey(),\n    ObjectId: (o) => new ObjectId(o),\n    BSONRegExp: (o) => new BSONRegExp(o.pattern, o.options),\n    BSONSymbol: (o) => new BSONSymbol(o.value),\n    Timestamp: (o) => Timestamp.fromBits(o.low, o.high)\n};\nfunction serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object')\n        throw new BSONError('not an object instance');\n    const bsontype = doc._bsontype;\n    if (typeof bsontype === 'undefined') {\n        const _doc = {};\n        for (const name of Object.keys(doc)) {\n            options.seenObjects.push({ propertyName: name, obj: null });\n            try {\n                const value = serializeValue(doc[name], options);\n                if (name === '__proto__') {\n                    Object.defineProperty(_doc, name, {\n                        value,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true\n                    });\n                }\n                else {\n                    _doc[name] = value;\n                }\n            }\n            finally {\n                options.seenObjects.pop();\n            }\n        }\n        return _doc;\n    }\n    else if (doc != null &&\n        typeof doc === 'object' &&\n        typeof doc._bsontype === 'string' &&\n        doc[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n        throw new BSONVersionError();\n    }\n    else if (isBSONType(doc)) {\n        let outDoc = doc;\n        if (typeof outDoc.toExtendedJSON !== 'function') {\n            const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n            if (!mapper) {\n                throw new BSONError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n            }\n            outDoc = mapper(outDoc);\n        }\n        if (bsontype === 'Code' && outDoc.scope) {\n            outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options));\n        }\n        else if (bsontype === 'DBRef' && outDoc.oid) {\n            outDoc = new DBRef(serializeValue(outDoc.collection, options), serializeValue(outDoc.oid, options), serializeValue(outDoc.db, options), serializeValue(outDoc.fields, options));\n        }\n        return outDoc.toExtendedJSON(options);\n    }\n    else {\n        throw new BSONError('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n}\nfunction parse(text, options) {\n    const ejsonOptions = {\n        useBigInt64: options?.useBigInt64 ?? false,\n        relaxed: options?.relaxed ?? true,\n        legacy: options?.legacy ?? false\n    };\n    return JSON.parse(text, (key, value) => {\n        if (key.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(key)}`);\n        }\n        return deserializeValue(value, ejsonOptions);\n    });\n}\nfunction stringify(value, replacer, space, options) {\n    if (space != null && typeof space === 'object') {\n        options = space;\n        space = 0;\n    }\n    if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n        options = replacer;\n        replacer = undefined;\n        space = 0;\n    }\n    const serializeOptions = Object.assign({ relaxed: true, legacy: false }, options, {\n        seenObjects: [{ propertyName: '(root)', obj: null }]\n    });\n    const doc = serializeValue(value, serializeOptions);\n    return JSON.stringify(doc, replacer, space);\n}\nfunction EJSONserialize(value, options) {\n    options = options || {};\n    return JSON.parse(stringify(value, options));\n}\nfunction EJSONdeserialize(ejson, options) {\n    options = options || {};\n    return parse(JSON.stringify(ejson), options);\n}\nconst EJSON = Object.create(null);\nEJSON.parse = parse;\nEJSON.stringify = stringify;\nEJSON.serialize = EJSONserialize;\nEJSON.deserialize = EJSONdeserialize;\nObject.freeze(EJSON);\n\nconst MAXSIZE = 1024 * 1024 * 17;\nlet buffer = ByteUtils.allocate(MAXSIZE);\nfunction setInternalBufferSize(size) {\n    if (buffer.length < size) {\n        buffer = ByteUtils.allocate(size);\n    }\n}\nfunction serialize(object, options = {}) {\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n    if (buffer.length < minInternalBufferSize) {\n        buffer = ByteUtils.allocate(minInternalBufferSize);\n    }\n    const serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, null);\n    const finishedBuffer = ByteUtils.allocate(serializationIndex);\n    finishedBuffer.set(buffer.subarray(0, serializationIndex), 0);\n    return finishedBuffer;\n}\nfunction serializeWithBufferAndIndex(object, finalBuffer, options = {}) {\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const startIndex = typeof options.index === 'number' ? options.index : 0;\n    const serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, null);\n    finalBuffer.set(buffer.subarray(0, serializationIndex), startIndex);\n    return startIndex + serializationIndex - 1;\n}\nfunction deserialize(buffer, options = {}) {\n    return internalDeserialize(ByteUtils.toLocalBufferType(buffer), options);\n}\nfunction calculateObjectSize(object, options = {}) {\n    options = options || {};\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\nfunction deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    const internalOptions = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, options);\n    const bufferData = ByteUtils.toLocalBufferType(data);\n    let index = startIndex;\n    for (let i = 0; i < numberOfDocuments; i++) {\n        const size = bufferData[index] |\n            (bufferData[index + 1] << 8) |\n            (bufferData[index + 2] << 16) |\n            (bufferData[index + 3] << 24);\n        internalOptions.index = index;\n        documents[docStartIndex + i] = internalDeserialize(bufferData, internalOptions);\n        index = index + size;\n    }\n    return index;\n}\n\nvar bson = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BSONError: BSONError,\n    BSONRegExp: BSONRegExp,\n    BSONRuntimeError: BSONRuntimeError,\n    BSONSymbol: BSONSymbol,\n    BSONType: BSONType,\n    BSONValue: BSONValue,\n    BSONVersionError: BSONVersionError,\n    Binary: Binary,\n    Code: Code,\n    DBRef: DBRef,\n    Decimal128: Decimal128,\n    Double: Double,\n    EJSON: EJSON,\n    Int32: Int32,\n    Long: Long,\n    MaxKey: MaxKey,\n    MinKey: MinKey,\n    ObjectId: ObjectId,\n    Timestamp: Timestamp,\n    UUID: UUID,\n    calculateObjectSize: calculateObjectSize,\n    deserialize: deserialize,\n    deserializeStream: deserializeStream,\n    serialize: serialize,\n    serializeWithBufferAndIndex: serializeWithBufferAndIndex,\n    setInternalBufferSize: setInternalBufferSize\n});\n\nexport { bson as BSON, BSONError, BSONRegExp, BSONRuntimeError, BSONSymbol, BSONType, BSONValue, BSONVersionError, Binary, Code, DBRef, Decimal128, Double, EJSON, Int32, Long, MaxKey, MinKey, ObjectId, Timestamp, UUID, calculateObjectSize, deserialize, deserializeStream, serialize, serializeWithBufferAndIndex, setInternalBufferSize };\n//# sourceMappingURL=bson.mjs.map\n"],"names":["fails","createPropertyDescriptor","module","exports","error","Error","Object","defineProperty","stack","NATIVE_BIND","FunctionPrototype","Function","prototype","apply","call","Reflect","bind","arguments","isObject","createNonEnumerableProperty","O","options","cause","Target","Source","key","configurable","get","set","it","getBuiltIn","hasOwn","isPrototypeOf","setPrototypeOf","copyConstructorProperties","proxyAccessor","inheritIfRequired","normalizeStringArgument","installErrorCause","clearErrorStack","ERROR_STACK_INSTALLABLE","DESCRIPTORS","IS_PURE","FULL_NAME","wrapper","FORCED","IS_AGGREGATE_ERROR","STACK_TRACE_LIMIT","OPTIONS_POSITION","path","split","ERROR_NAME","length","OriginalError","OriginalErrorPrototype","BaseError","WrappedError","a","b","message","undefined","result","this","name","constructor","$","global","wrapErrorConstructorWithCause","WEB_ASSEMBLY","WebAssembly","exportGlobalErrorCauseWrapper","forced","exportWebAssemblyErrorCauseWrapper","target","stat","init","Record","data","_name","_record","schema","getSchema","_validateSchema","_fieldToBsonType","getName","getRecord","serialize","Array","from","BSON","JSON","stringify","type","values","BSONType","includes","items","fields","keys","forEach","label","toString","ObjectId","Date","Timestamp","Int32","Long","Double","data_arr","filter","e","map","item","isArray","data_obj","reduce","obj","console","AssetRecord","super","assetCode","description","serialNumber","parentAssetID","modelID","manufacturerID","manufactureDate","facilityID","departmentID","locationName","supportTeam","vendorID","status","purchaseOrderID","acceptanceDate","purchaseCost","comment","FacilityRecord","facilityName","address_1","address_2","city","area","areaCode","country","ManufacturerRecord","manufacturerName","ModelRecord","contactID","modelName","commonName","UMDNSCode","VendorRecord","vendorName","contactInfo","number","email","manufacturerList","manufacturer","icon","props","__exports__","isAnyArrayBuffer","value","isUint8Array","isRegExp","d","isMap","isDate","BSON_MAJOR_VERSION","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","Math","pow","BSON_INT64_MIN","JS_INT_MAX","JS_INT_MIN","BSON_DATA_NUMBER","BSON_DATA_STRING","BSON_DATA_OBJECT","BSON_DATA_ARRAY","BSON_DATA_BINARY","BSON_DATA_UNDEFINED","BSON_DATA_OID","BSON_DATA_BOOLEAN","BSON_DATA_DATE","BSON_DATA_NULL","BSON_DATA_REGEXP","BSON_DATA_DBPOINTER","BSON_DATA_CODE","BSON_DATA_SYMBOL","BSON_DATA_CODE_W_SCOPE","BSON_DATA_INT","BSON_DATA_TIMESTAMP","BSON_DATA_LONG","BSON_DATA_DECIMAL128","BSON_DATA_MIN_KEY","BSON_DATA_MAX_KEY","BSON_BINARY_SUBTYPE_DEFAULT","BSON_BINARY_SUBTYPE_UUID_NEW","freeze","double","string","object","array","binData","objectId","bool","date","null","regex","dbPointer","javascript","symbol","javascriptWithScope","int","timestamp","long","decimal","minKey","maxKey","BSONError","bsonError","static","BSONVersionError","BSONRuntimeError","nodejsMathRandomBytes","byteLength","nodeJsByteUtils","fromNumberArray","floor","random","nodejsRandomBytes","randomBytes","toLocalBufferType","potentialBuffer","Buffer","isBuffer","ArrayBuffer","isView","buffer","byteOffset","stringTag","Symbol","toStringTag","String","allocate","size","alloc","equals","fromBase64","base64","toBase64","fromISO88591","codePoints","toISO88591","fromHex","hex","toHex","fromUTF8","text","toUTF8","start","end","utf8ByteLength","input","encodeUTF8Into","source","write","isReactNative","navigator","globalThis","product","webMathRandomBytes","RangeError","webByteUtils","webRandomBytes","crypto","getRandomValues","warn","HEX_DIGIT","potentialUint8array","Uint8Array","slice","TypeError","i","atob","c","charCodeAt","uint8array","btoa","Uint16Array","fromCharCode","join","evenLengthHex","firstDigit","secondDigit","test","hexDigit","Number","parseInt","push","byte","padStart","TextEncoder","encode","TextDecoder","fatal","decode","bytes","hasGlobalBuffer","_isBuffer","ByteUtils","BSONDataView","DataView","BSONValue","for","Binary","_bsontype","subType","sub_type","BUFFER_SIZE","position","put","byteValue","decodedByte","newSpace","sequence","offset","read","subarray","toJSON","encoding","toExtendedJSON","base64String","legacy","$binary","$type","toUUID","SUBTYPE_UUID","UUID","doc","bytesFromString","$uuid","inspect","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_MD5","SUBTYPE_ENCRYPTED","SUBTYPE_COLUMN","SUBTYPE_USER_DEFINED","UUID_BYTE_LENGTH","UUID_WITHOUT_DASHES","UUID_WITH_DASHES","generate","id","toHexString","includeDashes","otherId","toBinary","isValidUUIDString","hexString","representation","replace","Code","code","scope","$code","$scope","codeJson","isDBRefLike","$id","$ref","$db","DBRef","collection","oid","db","parts","shift","namespace","o","assign","copy","wasm","Instance","Module","TWO_PWR_16_DBL","TWO_PWR_24_DBL","TWO_PWR_32_DBL","TWO_PWR_64_DBL","TWO_PWR_63_DBL","INT_CACHE","UINT_CACHE","MAX_INT64_STRING_LENGTH","DECIMAL_REG_EX","__isLong__","low","high","unsigned","fromBigInt","fromString","lowBits","highBits","cachedObj","cache","fromBits","isNaN","UZERO","ZERO","MAX_UNSIGNED_VALUE","MIN_VALUE","MAX_VALUE","fromNumber","neg","str","radix","p","indexOf","substring","radixToPower","min","power","mul","add","le","fromBytesLE","fromBytesBE","val","addend","isLong","fromValue","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","and","other","compare","eq","thisNeg","isNegative","otherNeg","sub","comp","divide","divisor","isZero","div_u","div_s","get_high","approx","rem","res","toUnsigned","gt","shru","UONE","ONE","NEG_ONE","halfThis","shr","div","shl","gte","max","toNumber","log2","ceil","log","LN2","delta","approxRes","approxRem","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","greaterThan","greaterThanOrEqual","ge","isEven","isOdd","isPositive","lessThan","lt","lessThanOrEqual","lte","modulo","rem_u","rem_s","mod","multiply","multiplier","TWO_PWR_24","negate","not","notEquals","neq","ne","or","shiftLeft","numBits","toInt","shiftRight","shiftRightUnsigned","shr_u","subtract","subtrahend","toBigInt","BigInt","toBytes","toBytesLE","toBytesBE","hi","lo","toSigned","radixLong","rem1","remDiv","intval","digits","xor","eqz","relaxed","$numberLong","useBigInt64","bigIntResult","asIntN","longResult","fromInt","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","EXPONENT_BIAS","MAX_DIGITS","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","COMBINATION_MASK","EXPONENT_MASK","COMBINATION_INFINITY","COMBINATION_NAN","isDigit","divideu128","DIVISOR","_rem","quotient","multiply64x2","left","right","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","uhleft","uhright","ulleft","ulright","invalidErr","Decimal128","sawSign","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","lastDigit","exponent","significandHigh","significandLow","biasedExponent","index","stringMatch","match","infMatch","nanMatch","unsignedNumber","expSign","expNumber","substr","roundDigit","dIdx","significand","dec","biased_exponent","significand_digits","significand_msb","j","k","is_zero","significand128","midl","midh","combination","least_digits","scientific_exponent","radix_position","$numberDecimal","valueOf","isFinite","is","sign","$numberDouble","isInteger","toFixed","doubleValue","parseFloat","eJSON","$numberInt","MaxKey","$maxKey","MinKey","$minKey","checkForHexRegExp","RegExp","PROCESS_UNIQUE","kId","inputId","workingId","cacheHexString","__id","time","now","inc","getInc","fromUint8Array","setUint32","variable","toLowerCase","otherIdString","thisIdString","getTimestamp","getUint32","setTime","$oid","internalCalculateObjectSize","serializeFunctions","ignoreUndefined","totalLength","calculateElement","toBSON","binary","ordered_values","ignoreCase","multiline","pattern","alphabetize","sort","BSONRegExp","$regex","$options","$regularExpression","parseOptions","BSONSymbol","$symbol","LongWithoutOverridesClass","t","$timestamp","optRadix","FIRST_BIT","FIRST_TWO_BITS","FIRST_THREE_BITS","FIRST_FOUR_BITS","FIRST_FIVE_BITS","TWO_BIT_CHAR","THREE_BIT_CHAR","FOUR_BIT_CHAR","CONTINUING_CHAR","validateUtf8","continuation","JS_INT_MAX_LONG","JS_INT_MIN_LONG","internalDeserialize","allowObjectSmallerThanBufferSize","deserializeObject","allowedDBRefKeys","fieldsAsRaw","raw","bsonRegExp","promoteBuffers","promoteLongs","promoteValues","validation","utf8","validationSetting","globalUTFValidation","utf8KeysSet","Set","utf8ValidatedKeys","utf8ValidationValues","every","startIndex","arrayIndex","done","isPossibleDBRef","dataview","elementType","shouldValidateKey","has","stringSize","getValidatedString","getFloat64","_index","objectSize","objectOptions","arrayOptions","stopIndex","getBigInt64","binarySize","totalBinarySize","isValid","_buffer","regExpOptions","optionsArray","functionString","totalSize","scopeObject","oidBuffer","writable","enumerable","shouldValidateUtf8","regexp","ignoreKeys","serializeString","numberOfWrittenBytes","NUMBER_SPACE","FOUR_BYTE_VIEW_ON_NUMBER","EIGHT_BYTE_VIEW_ON_NUMBER","serializeNumber","isNegativeZero","isSafeInteger","setInt32","setFloat64","serializeBigInt","setBigInt64","serializeNull","_","serializeBoolean","serializeDate","dateInMilis","getTime","serializeRegExp","serializeBSONRegExp","sortedOptions","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","checkKeys","depth","endIndex","serializeInto","delete","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","output","startingIndex","Map","iterator","entries","entry","next","isBSONType","keysToCodecs","deserializeValue","in32BitRange","in64BitRange","$undefined","startsWith","fromExtendedJSON","$date","parse","$dbPointer","v","dollarKeys","valid","serializeArray","seenObjects","propertyName","serializeValue","pop","getISOString","isoStr","toISOString","getUTCMilliseconds","create","findIndex","leadingPart","prop","alreadySeen","circularPart","current","leadingSpace","repeat","dashes","dateNum","inRange","flags","rx","serializeDocument","BSON_TYPE_MAPPINGS","low_","high_","unsigned_","bsontype","_doc","outDoc","mapper","ejsonOptions","replacer","space","serializeOptions","EJSONserialize","EJSONdeserialize","ejson","EJSON","deserialize","MAXSIZE","setInternalBufferSize","minInternalBufferSize","serializationIndex","finishedBuffer","serializeWithBufferAndIndex","finalBuffer","calculateObjectSize","deserializeStream","numberOfDocuments","documents","docStartIndex","internalOptions","bufferData","bson","__proto__"],"sourceRoot":""}