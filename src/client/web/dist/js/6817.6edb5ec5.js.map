{"version":3,"file":"js/6817.6edb5ec5.js","mappings":"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","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-CustomerService.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-CustomerService.vue?5c70","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-VendorInformation.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR-VendorInformation.vue?9ae9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-VENDOR/VENDOR.vue?7a93"],"sourcesContent":["<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : < 03-Sep-2022 >    \r\nVersion    : < 0.0.1 >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer mb-5\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"Create New Vendor\"\r\n            subTitle=\"Enter all details required for this equipment vendor\"\r\n          />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"goBack\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <VendorInformation />\r\n        <CustomerService />\r\n        <ManufacturerInformation />\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Vendor\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              @click=\"createRecord\"\r\n            />\r\n\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\"; // Access Vuew Store Variables and Methods\r\nimport { ref, provide, computed } from \"vue\";\r\n\r\nimport VendorInformation from \"./VENDOR-VendorInformation.vue\";\r\nimport CustomerService from \"./VENDOR-CustomerService.vue\";\r\nimport ManufacturerInformation from \"./VENDOR-ManufacturerInfo.vue\";\r\nimport ModelInformation from \"./VENDOR-ModelInfo.vue\";\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\nimport UIToast from \"../BIOMD-UI/UI-Toast.vue\";\r\nimport { VendorRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nexport default {\r\n  components: {\r\n    CustomerService,\r\n    VendorInformation,\r\n    ManufacturerInformation,\r\n    ModelInformation,\r\n    Btn2,\r\n    Btn,\r\n    Header,\r\n    UIToast,\r\n  },\r\n  name: \"vendor\",\r\n  // Define Props here\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  // Emit value can pass within this array\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n\r\n    const vendorInfo = ref({\r\n      vendorName: null,\r\n      selectedCountry: { Loci_Name_Country: null, Loci_Code_Country: null },\r\n      selectedState: { Loci_Name_State: null, Loci_Code_State: null },\r\n      selectedDistrict: {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      },\r\n      streetAddress1: null,\r\n      streetAddress2: null,\r\n      zipCode: null,\r\n    });\r\n\r\n    const manufacturerInfo = ref({\r\n      selectedManufacturer: { manufacturerName: null, _id: null },\r\n      listedModels: { modelName: null, _id: null },\r\n    });\r\n\r\n    const contactInfo = ref([\r\n      {\r\n        number: null,\r\n        name: null,\r\n        email: null,\r\n        type: \"Biomedical Service\",\r\n      },\r\n    ]);\r\n\r\n    const GlobalVendorDefinition = ref({\r\n      vendorAddress: {\r\n        Country: null,\r\n        State: null,\r\n        District: null,\r\n      },\r\n      manufacturerID: null,\r\n      modelID: null,\r\n    });\r\n\r\n    const changePage = async (page) => {\r\n      emit(\"updatePage\", page);\r\n    };\r\n\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n\r\n    function createRecord() {\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Vendor\",\r\n            record: new VendorRecord({\r\n              vendorName: vendorInfo.value.vendorName,\r\n              country: GlobalVendorDefinition.value.vendorAddress.Country,\r\n              area: GlobalVendorDefinition.value.vendorAddress.State,\r\n              city: GlobalVendorDefinition.value.vendorAddress.District,\r\n              address_1: vendorInfo.value.streetAddress1,\r\n              address_2: vendorInfo.value.streetAddress2,\r\n              areaCode: vendorInfo.value.zipCode,\r\n              contactInfo: [\r\n                {\r\n                  number: contactInfo.value.number,\r\n                  name: contactInfo.value.name,\r\n                  email: contactInfo.value.email,\r\n                  type: contactInfo.value.type,\r\n                },\r\n              ],\r\n              manufacturerList: [\r\n                {\r\n                  manufacturer: GlobalVendorDefinition.value.manufacturerID,\r\n                },\r\n              ],\r\n            }).serialize(),\r\n            Institute_Code: Institute_Code.value,\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            changePage(\"success\");\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"dashboard\");\r\n    };\r\n\r\n    provide(\"vendorInfo\", vendorInfo);\r\n    provide(\"manufacturerInfo\", manufacturerInfo);\r\n    provide(\"contactInfo\", contactInfo);\r\n    provide(\"GlobalVendorDefinition\", GlobalVendorDefinition);\r\n\r\n    return {\r\n      goBack,\r\n      changePage,\r\n      redirectToPage,\r\n      createRecord,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","<template>\r\n  <Section sectionTitle=\"Customer Service Contact\">\r\n    <!-- Representative Name -->\r\n    <div class=\"col-lg-6\">\r\n      <Input\r\n        label=\"Representative Name\"\r\n        type=\"text\"\r\n        id=\"contactName\"\r\n        placeholder=\"Enter Representative Name\"\r\n        v-model=\"contactInfo.name\"\r\n      />\r\n    </div>\r\n    <!-- Contact Number -->\r\n    <div class=\"col-lg-6\">\r\n      <Input\r\n        label=\"Contact Number\"\r\n        type=\"number\"\r\n        id=\"contactNumber\"\r\n        placeholder=\"Enter Contact Number\"\r\n        v-model=\"contactInfo.number\"\r\n      />\r\n    </div>\r\n    <!-- Email  -->\r\n    <div class=\"col-lg-6\">\r\n      <Input\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        id=\"email\"\r\n        placeholder=\"Enter email\"\r\n        v-model=\"contactInfo.email\"\r\n      />\r\n    </div>\r\n    <!-- Type of Personnel -->\r\n    <div class=\"col-lg-6 mb-3\">\r\n      <label for=\"typeList\" class=\"form-label\">Type of Personnel</label>\r\n      <select\r\n        id=\"typeList\"\r\n        class=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n        v-model=\"contactInfo.type\"\r\n        placeholder=\"Enter Contact Number\"\r\n      >\r\n        <option\r\n          v-for=\"list in typeList\"\r\n          :key=\"list.value\"\r\n          :value=\"list.value\"\r\n          :selected=\"list.selected\"\r\n        >\r\n          {{ list.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 mt-4\">\r\n      <Btn2\r\n        BtnName=\"Add\"\r\n        :icon=\"'plus'\"\r\n        backgroundColor=\"none\"\r\n        @click=\"add\"\r\n        class=\"text-primary btn-sm\"\r\n      />\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject } from \"vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst typeList = ref([\r\n  { name: \"Biomedical Service\", value: \"Biomedical Service\", selected: true },\r\n  { name: \"Clinical Specialist\", value: \"Clinical Specialist\" },\r\n  { name: \"Service Call\", value: \"Service Call\" },\r\n  { name: \"General Contact\", value: \"General Contact\" },\r\n]);\r\n\r\nconst contactInfo = inject(\"contactInfo\");\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./VENDOR-CustomerService.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VENDOR-CustomerService.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VENDOR-CustomerService.vue?vue&type=style&index=0&id=2eb3437c&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2eb3437c\"]])\n\nexport default __exports__","<template>\r\n  <main>\r\n    <!-- The main form -->\r\n    <Section sectionTitle=\"Vendor Information\">\r\n      <!-- Vendor Name -->\r\n      <div class=\"col-lg-6\">\r\n        <label for=\"vendorName\" class=\"form-label\">Vendor Name</label>\r\n        <div class=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"vendorName\"\r\n            aria-describedby=\"basic-addon3\"\r\n            placeholder=\"Enter Vendor Name\"\r\n            v-model=\"vendorInfo.vendorName\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <!-- Country -->\r\n      <div class=\"col-lg-6\">\r\n        <label for=\"countryList\" class=\"form-label\">Country</label>\r\n        <input\r\n          class=\"form-control mb-3\"\r\n          list=\"countryOptions\"\r\n          id=\"countryList\"\r\n          placeholder=\"Type to search...\"\r\n          v-model=\"vendorInfo.selectedCountry.Loci_Name_Country\"\r\n          @input=\"fetchCountry\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"countryOptions\">\r\n          <option\r\n            v-for=\"country in countryList\"\r\n            :key=\"country.index\"\r\n            :value=\"country.Loci_Name_Country\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- Province/State/Region -->\r\n\r\n      <div class=\"col-lg-6\">\r\n        <label for=\"stateList\" class=\"form-label\">Province/State/Region</label>\r\n        <input\r\n          class=\"form-control mb-3\"\r\n          list=\"stateOptions\"\r\n          id=\"stateList\"\r\n          placeholder=\"Type to search...\"\r\n          v-model=\"vendorInfo.selectedState.Loci_Name_State\"\r\n          @input=\"fetchState\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"stateOptions\">\r\n          <option\r\n            v-for=\"state in stateList\"\r\n            :key=\"state.index\"\r\n            :value=\"state.Loci_Name_State\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- City/District -->\r\n      <div class=\"col-lg-6\">\r\n        <label for=\"districtList\" class=\"form-label\">District</label>\r\n        <input\r\n          class=\"form-control mb-3\"\r\n          list=\"districtOptions\"\r\n          id=\"districtList\"\r\n          placeholder=\"Type to search...\"\r\n          v-model=\"vendorInfo.selectedDistrict.Loci_Name_Area_L1\"\r\n          @input=\"fetchDistrict\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"districtOptions\">\r\n          <option\r\n            v-for=\"district in districtList\"\r\n            :key=\"district.index\"\r\n            :value=\"district.Loci_Name_Area_L1\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <Input\r\n          label=\"Street Address 1\"\r\n          type=\"text\"\r\n          id=\"street1\"\r\n          placeholder=\"Enter Street Address 1\"\r\n          v-model=\"vendorInfo.streetAddress1\"\r\n        />\r\n      </div>\r\n      <!-- Street Address 2 -->\r\n      <div class=\"col-lg-6\">\r\n        <Input\r\n          label=\"Street Address 2\"\r\n          type=\"text\"\r\n          id=\"street2\"\r\n          placeholder=\"Enter Street Address 2\"\r\n          v-model=\"vendorInfo.streetAddress2\"\r\n        />\r\n      </div>\r\n      <!-- Zip / Postal Code -->\r\n      <div class=\"col-lg-6\">\r\n        <Input\r\n          label=\"Zip/Postal Code\"\r\n          type=\"number\"\r\n          id=\"zip\"\r\n          placeholder=\"Enter Zip/Postal Code\"\r\n          v-model=\"vendorInfo.zipCode\"\r\n        />\r\n      </div>\r\n    </Section>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, ref, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\n\r\nconst vendorInfo = inject(\"vendorInfo\");\r\nconst GlobalVendorDefinition = inject(\"GlobalVendorDefinition\");\r\nconst countryList = ref(null);\r\nconst stateList = ref(null);\r\nconst districtList = ref(null);\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst fetchCountry = async (event) => {\r\n  try {\r\n    const selectedCountry = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      vendorInfo.value.selectedCountry = countryList.value.find((country) => {\r\n        return selectedCountry === country.Loci_Name_Country;\r\n      });\r\n      GlobalVendorDefinition.value.vendorAddress.Country =\r\n        vendorInfo.value.selectedCountry.Loci_Code_Country;\r\n\r\n      await fetchState();\r\n    } else {\r\n      GlobalVendorDefinition.value.vendorAddress.Country = null;\r\n      GlobalVendorDefinition.value.vendorAddress.State = null;\r\n      vendorInfo.value.selectedState = {\r\n        Loci_Name_Country: null,\r\n        Loci_Code_Country: null,\r\n      };\r\n      GlobalVendorDefinition.value.vendorAddress.District = null;\r\n      vendorInfo.value.selectedDistrict = {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      };\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"GLOBAL\",\r\n            ServiceCode: \"GLOBL\",\r\n            API: \"GET_GEO_LIST\",\r\n            Max_List: 500,\r\n            Criteria: {\r\n              Type_Code: \"CNTY\",\r\n              Loci_Name_Country: \"\",\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            countryList.value = res.Response.Country_List;\r\n          } else if (res.Type === \"ERROR\") {\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-GET_GEO_LIST-E001\";\r\n              Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchState = async (event) => {\r\n  try {\r\n    const selectedState = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      vendorInfo.value.selectedState = stateList.value.find((state) => {\r\n        return selectedState === state.Loci_Name_State;\r\n      });\r\n      GlobalVendorDefinition.value.vendorAddress.State =\r\n        vendorInfo.value.selectedState.Loci_Code_State;\r\n\r\n      await fetchDistrict();\r\n    } else {\r\n      GlobalVendorDefinition.value.vendorAddress.State = null;\r\n      GlobalVendorDefinition.value.vendorAddress.District = null;\r\n      vendorInfo.value.selectedDistrict = {\r\n        Loci_Name_Area_L1: null,\r\n        Loci_Code_Area_L1: null,\r\n      };\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"GLOBAL\",\r\n            ServiceCode: \"GLOBL\",\r\n            API: \"GET_GEO_LIST\",\r\n            Max_List: 500,\r\n            Criteria: {\r\n              Type_Code: \"STATE\",\r\n              Loci_Code_Country:\r\n                GlobalVendorDefinition.value.vendorAddress.Country,\r\n              Loci_Name_State: \"\",\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            stateList.value = res.Response.State_List;\r\n          } else if (res.Type === \"ERROR\") {\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-GET_GEO_LIST-E001\";\r\n              Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchDistrict = async (event) => {\r\n  try {\r\n    const selectedDistrict = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      vendorInfo.value.selectedDistrict = districtList.value.find((state) => {\r\n        return selectedDistrict === state.Loci_Name_Area_L1;\r\n      });\r\n      Global_Vendor_Definition.value.vendorAddress.District =\r\n        vendorInfo.value.selectedDistrict.Loci_Code_Area_L1;\r\n    } else {\r\n      Global_Vendor_Definition.value.vendorAddress.District = null;\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"GLOBAL\",\r\n            ServiceCode: \"GLOBL\",\r\n            API: \"GET_GEO_LIST\",\r\n            Max_List: 500,\r\n            Criteria: {\r\n              Type_Code: \"ARL1\",\r\n              Loci_Code_Country:\r\n                Global_Vendor_Definition.value.vendorAddress.Country,\r\n              Loci_Code_State:\r\n                Global_Vendor_Definition.value.vendorAddress.State,\r\n              Loci_Name_District: \"\",\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            districtList.value = res.Response.ARL1_List;\r\n          } else if (res.Type === \"ERROR\") {\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-GET_GEO_LIST-E001\";\r\n              Error_Msg: \"GET_GEO_LIST_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchCountry();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./VENDOR-VendorInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VENDOR-VendorInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VENDOR-VendorInformation.vue?vue&type=style&index=0&id=b947b28e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b947b28e\"]])\n\nexport default __exports__","import { render } from \"./VENDOR.vue?vue&type=template&id=5fed88b1&scoped=true\"\nimport script from \"./VENDOR.vue?vue&type=script&lang=js\"\nexport * from \"./VENDOR.vue?vue&type=script&lang=js\"\n\nimport \"./VENDOR.vue?vue&type=style&index=0&id=5fed88b1&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5fed88b1\"]])\n\nexport default __exports__"],"names":["components","CustomerService","VendorInformation","ManufacturerInformation","ModelInformation","Btn2","Btn","Header","UIToast","name","props","tabid","type","String","emits","setup","emit","store","useStore","Institute_Code","computed","state","globalStore","UserInfo","Institute_Info","Code","changeServiceState","serviceState","dispatch","redirectToPage","service","tabcode","value","status","vendorInfo","ref","vendorName","selectedCountry","Loci_Name_Country","Loci_Code_Country","selectedState","Loci_Name_State","Loci_Code_State","selectedDistrict","Loci_Name_Area_L1","Loci_Code_Area_L1","streetAddress1","streetAddress2","zipCode","manufacturerInfo","selectedManufacturer","manufacturerName","_id","listedModels","modelName","contactInfo","number","email","GlobalVendorDefinition","vendorAddress","Country","State","District","manufacturerID","modelID","changePage","async","page","sendSocketReq","request","createRecord","data","Expiry","Type","Request","Module","ServiceCode","API","collection","record","VendorRecord","country","area","city","address_1","address_2","areaCode","manufacturerList","manufacturer","serialize","callback","res","console","log","Response","goBack","provide","typeList","selected","inject","__exports__","countryList","stateList","districtList","fetchCountry","event","target","InputEvent","inputType","Max_List","Criteria","Type_Code","Country_List","find","fetchState","error","State_List","fetchDistrict","Global_Vendor_Definition","Loci_Name_District","ARL1_List","onMounted","class","_createElementBlock","_createElementVNode","_createVNode","_component_Header","title","subTitle","_component_Btn2","BtnName","icon","backgroundColor","onClick","$setup","_component_VendorInformation","_component_CustomerService","_component_ManufacturerInformation","_component_Btn"],"sourceRoot":""}