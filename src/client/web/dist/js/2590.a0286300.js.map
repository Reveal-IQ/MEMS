{"version":3,"file":"js/2590.a0286300.js","mappings":"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","sources":["webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AdditionalInformation.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-AdditionalInformation.vue?c5f6","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-EquipmentAcquisition.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-EquipmentAcquisition.vue?de2d","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-EquipmentLocation.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-EquipmentLocation.vue?e86c","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-GeneralInformation.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-GeneralInformation.vue?fff4","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MaintenanceAndSupport.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MaintenanceAndSupport.vue?6960","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MultipleEquipmentEntry.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET-MultipleEquipmentEntry.vue?9e9e","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-ASSET/ASSET.vue?f615","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn.vue?d9b9","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn2.vue","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn2.vue?1ca1","webpack://client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-FormHeader.vue"],"sourcesContent":["<template>\r\n  <Section sectionTitle=\"Additional Information\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Comments -->\r\n      <div class=\"col-lg-12 col-md-12 mb-3\">\r\n        <label for=\"commentSection\" class=\"form-label\">Comments</label>\r\n        <div class=\"input-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"commentSection\"\r\n            aria-describedby=\"basic-addon3\"\r\n            placeholder=\"Enter Comments\"\r\n            v-model=\"comment\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject } from \"vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst comment = inject(\"comment\");\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-AdditionalInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-AdditionalInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-AdditionalInformation.vue?vue&type=style&index=0&id=a8d4cb22&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a8d4cb22\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Equipment Acquisition\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Purchase Order Number -->\r\n      <div class=\"col-lg-4 mb-3\">\r\n        <label for=\"purchaseOrder\" class=\"form-label\"\r\n          >Purchase Order Number</label\r\n        >\r\n        <select\r\n          id=\"purchaseOrder\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select\"\r\n        >\r\n          <option selected>Select PO Number</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Project -->\r\n      <div class=\"col-lg-8\">\r\n        <Input\r\n          label=\"Project\"\r\n          type=\"text\"\r\n          id=\"projectName\"\r\n          placeholder=\"Enter Project\"\r\n          v-model=\"EquipmentAcquisition.project\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Purchase Cost -->\r\n      <div class=\"col-lg-4\">\r\n        <Input\r\n          label=\"Purchase Cost\"\r\n          type=\"number\"\r\n          id=\"purchaseCost\"\r\n          placeholder=\"Enter Purchase Cost\"\r\n          v-model=\"EquipmentAcquisition.purchaseCost\"\r\n        />\r\n      </div>\r\n      <!-- Purchase Date -->\r\n      <div class=\"col-lg-4\">\r\n        <Input\r\n          label=\"Purchase Date\"\r\n          type=\"date\"\r\n          id=\"purchaseDate\"\r\n          placeholder=\"Enter Purchase Date\"\r\n          v-model=\"EquipmentAcquisition.purchaseDate\"\r\n        />\r\n      </div>\r\n      <!-- Vendor -->\r\n      <div class=\"col-lg-4 mb-3\">\r\n        <label for=\"vendorList\" class=\"form-label\">Vendor</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"vendorListOptions\"\r\n          id=\"vendorList\"\r\n          placeholder=\"Select Vendor\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentAcquisition.selectedVendor.vendor_name\"\r\n          @input=\"fetchVendor\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"vendorListOptions\">\r\n          <option\r\n            v-for=\"vendor in vendorList\"\r\n            :key=\"vendor.index\"\r\n            :value=\"vendor.vendor_name\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- Acceptance Date -->\r\n      <div class=\"col-lg-4\">\r\n        <Input\r\n          label=\"Acceptance Date\"\r\n          type=\"date\"\r\n          id=\"acceptanceDate\"\r\n          placeholder=\"Select Acceptance Date\"\r\n          v-model=\"EquipmentAcquisition.acceptanceDate\"\r\n        />\r\n      </div>\r\n      <!-- Warranty Expiry Date -->\r\n      <div class=\"col-lg-4\">\r\n        <Input\r\n          label=\"Warranty Expiration Date\"\r\n          type=\"date\"\r\n          id=\"warrantyDate\"\r\n          placeholder=\"Select Warranty Expiration Date\"\r\n          v-model=\"EquipmentAcquisition.warrantyDate\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst vendorList = ref(null);\r\n\r\nconst EquipmentAcquisition = inject(\"EquipmentAcquisition\");\r\nconst Global_Asset_Information = inject(\"Global_Asset_Information\");\r\n\r\nconst fetchVendor = async (event) => {\r\n  try {\r\n    const selectedVendor = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      EquipmentAcquisition.value.selectedVendor = vendorList.value.find(\r\n        (vendor) => {\r\n          return selectedVendor === vendor.vendor_name;\r\n        }\r\n      );\r\n      Global_Asset_Information.value.vendorId =\r\n        EquipmentAcquisition.value.selectedVendor._id;\r\n      // await fetchModel();\r\n    } else {\r\n      Global_Asset_Information.value.vendorId = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Vendor\",\r\n              queries: [\r\n                {\r\n                  field: \"vendor_name\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                vendor_name: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            vendorList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchVendor();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-EquipmentAcquisition.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-EquipmentAcquisition.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-EquipmentAcquisition.vue?vue&type=style&index=0&id=e33a0e58&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e33a0e58\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Equipment Location\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Facility -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"facilityList\" class=\"form-label\">Facility</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"facilityListOptions\"\r\n          id=\"facilityList\"\r\n          placeholder=\"Select facility\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentLocation.selectedFacility.facility_name\"\r\n          @input=\"fetchFacility\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"facilityListOptions\">\r\n          <option\r\n            v-for=\"facility in facilityList\"\r\n            :key=\"facility.index\"\r\n            :value=\"facility.facility_name\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- Region -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"regionList\" class=\"form-label\">Region</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"regionListOptions\"\r\n          id=\"regionList\"\r\n          placeholder=\"Select region\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentLocation.selectedRegion.area\"\r\n          @input=\"fetchRegion\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"regionListOptions\">\r\n          <option\r\n            v-for=\"region in regionList\"\r\n            :key=\"region.index\"\r\n            :value=\"region.area\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- District -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"districtList\" class=\"form-label\">District</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"districtListOptions\"\r\n          id=\"districtList\"\r\n          placeholder=\"Select district\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"EquipmentLocation.selectedDistrict.city\"\r\n          @input=\"fetchDistrict\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"rdistrictListOptions\">\r\n          <option\r\n            v-for=\"district in districtList\"\r\n            :key=\"district.index\"\r\n            :value=\"district.city\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n      <!-- Department -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"departmentList\" class=\"form-label\">Department</label>\r\n        <select\r\n          id=\"departmentList\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"departmentId\"\r\n        >\r\n          <option selected>Select Department</option>\r\n        </select>\r\n      </div>\r\n      <!-- Location -->\r\n      <div class=\"col-lg-12 col-md-12\">\r\n        <UITagInput\r\n          v-model=\"EquipmentLocation.location\"\r\n          label=\"Location\"\r\n          customDelimiter=\",\"\r\n          placeholder=\"Enter Location Tag\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\nimport UITagInput from \"../BIOMD-UI/UI-TagInput.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst facilityList = ref(null);\r\nconst regionList = ref(null);\r\nconst districtList = ref(null);\r\n\r\nconst EquipmentLocation = inject(\"EquipmentLocation\");\r\nconst Global_Asset_Information = inject(\"Global_Asset_Information\");\r\nconst departmentId = inject(\"departmentId\");\r\n\r\nconst fetchFacility = async (event) => {\r\n  try {\r\n    const selectedFacility = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      EquipmentLocation.value.selectedFacility = facilityList.value.find(\r\n        (facility) => {\r\n          return selectedFacility === facility.facility_name;\r\n        }\r\n      );\r\n      Global_Asset_Information.value.facilityId =\r\n        EquipmentLocation.value.selectedFacility._id;\r\n      await fetchRegion();\r\n    } else {\r\n      Global_Asset_Information.value.facilityId = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Facility\",\r\n              queries: [\r\n                {\r\n                  field: \"facility_name\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                facility_name: 1,\r\n                country: 1,\r\n                area: 1,\r\n                city: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            facilityList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchRegion = async (event) => {\r\n  try {\r\n    const selectedRegion = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      EquipmentLocation.value.selectedRegion = regionList.value.find(\r\n        (region) => {\r\n          return selectedRegion === region.area;\r\n        }\r\n      );\r\n      Global_Asset_Information.value.region =\r\n        EquipmentLocation.value.selectedRegion.area;\r\n      // await fetchDistrict();\r\n    } else {\r\n      Global_Asset_Information.value.region = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Facility\",\r\n              queries: [\r\n                {\r\n                  field: \"facility_name\",\r\n                  op: \"sb\",\r\n                  value: Global_Asset_Information.value.facilityId,\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 0,\r\n                area: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            regionList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// const fetchDistrict = async (event) => {\r\n//   try {\r\n//     const selectedDistrict = event ? event.target.value : \"\";\r\n//     if (\r\n//       event &&\r\n//       (!(event instanceof InputEvent) ||\r\n//         event.inputType === \"insertReplacementText\")\r\n//     ) {\r\n//       EquipmentLocation.value.selectedDistrict = districtList.value.find(\r\n//         (district) => {\r\n//           return selectedDistrict === district.city;\r\n//         }\r\n//       );\r\n//       Global_Asset_Information.value.district =\r\n//         EquipmentLocation.value.selectedDistrict.city;\r\n//       // await fetchModel();\r\n//     } else {\r\n//       Global_Asset_Information.value.district = null;\r\n\r\n//       sendSocketReq({\r\n//         data: {\r\n//           Expiry: 20000,\r\n//           Type: \"REQUEST\",\r\n//           Request: {\r\n//             Module: \"MEMS\",\r\n//             ServiceCode: \"BIOMD\",\r\n//             API: \"FIND_RECORD\",\r\n//             return_array: true,\r\n//             max_list: 100,\r\n//             find: {\r\n//               collection: \"Facility\",\r\n//               queries: [\r\n//                 {\r\n//                   field: \"city\",\r\n//                   op: \"sb\",\r\n//                   value: \"^\",\r\n//                 },\r\n//               ],\r\n//               projection: {\r\n//                 _id: 0,\r\n//                 facility_name: 0,\r\n//                 country: 0,\r\n//                 area: 0,\r\n//                 city: 1,\r\n//               },\r\n//             },\r\n//           },\r\n//         },\r\n//         callback: (res) => {\r\n//           if (res.Type === \"RESPONSE\") {\r\n//             // Console the Response Packet\r\n//             console.log(\"Response Packet -->\", res.Response);\r\n//             districtList.value = res.Response.records;\r\n//           } else if (res.Type === \"ERROR\") {\r\n//             // Error response received during fetching\r\n//             Type: \"ERROR\";\r\n//             Response: {\r\n//               Error_Code: \"API-CREATE_RECORD-E001\";\r\n//               Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n//             }\r\n//           }\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\nonMounted(() => {\r\n  fetchFacility();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-EquipmentLocation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-EquipmentLocation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-EquipmentLocation.vue?vue&type=style&index=0&id=06900024&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06900024\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"General Information\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Equipment Number -->\r\n      <div class=\"col-lg-3\">\r\n        <Input\r\n          label=\"Equipment Number\"\r\n          type=\"number\"\r\n          id=\"equipmentNumber\"\r\n          placeholder=\"Enter Equipment Number\"\r\n          v-model=\"GeneralInformation.equipmentNumber\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Equipment Common Name -->\r\n      <div class=\"col-lg-4 col-md-12 mb-3\">\r\n        <label for=\"commonNameList\" class=\"form-label\"\r\n          >Equipment Common Name</label\r\n        >\r\n        <select\r\n          id=\"commonNameList\"\r\n          class=\"form-select\"\r\n          v-model=\"GeneralInformation.commonName\"\r\n        >\r\n          <option selected disabled>Select Common Name</option>\r\n          <option v-for=\"name in commonNameList\" :key=\"name\">\r\n            {{ name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Equipment Description -->\r\n      <div class=\"col-lg-5 col-md-12 mb-3\">\r\n        <label for=\"descriptionList\" class=\"form-label\"\r\n          >Equipment Description</label\r\n        >\r\n        <select\r\n          id=\"descriptionList\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"GeneralInformation.description\"\r\n        >\r\n          <option selected>Select Class</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Manufacturer -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"manufacturerList\" class=\"form-label\">Manufacturer</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"manufacturerListOptions\"\r\n          id=\"manufacturerList\"\r\n          placeholder=\"Select Manufacturer\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"GeneralInformation.selectedManufacturer.manufacturer_name\"\r\n          @input=\"fetchManufacturer\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"manufacturerListOptions\">\r\n          <option\r\n            v-for=\"manufacturer in manufacturerList\"\r\n            :key=\"manufacturer.index\"\r\n            :value=\"manufacturer.manufacturer_name\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n\r\n      <!-- Model Name -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"modelList\" class=\"form-label\">Model</label>\r\n        <input\r\n          class=\"form-control\"\r\n          list=\"modelListOptions\"\r\n          id=\"modelList\"\r\n          placeholder=\"Select Model\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"GeneralInformation.selectedModel.model_name\"\r\n          @input=\"fetchModel\"\r\n          autocomplete=\"off\"\r\n        />\r\n        <datalist id=\"modelListOptions\">\r\n          <option\r\n            v-for=\"model in modelList\"\r\n            :key=\"model.index\"\r\n            :value=\"model.model_name\"\r\n          ></option>\r\n        </datalist>\r\n      </div>\r\n\r\n      <!-- Serial Number -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <Input\r\n          label=\"Serial Number\"\r\n          type=\"text\"\r\n          id=\"serialNumber\"\r\n          placeholder=\"Enter Serial Number\"\r\n          v-model=\"GeneralInformation.serialNumber\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Year of Manufacture -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <Input\r\n          label=\"Year of manufacture\"\r\n          type=\"date\"\r\n          id=\"yearOfManufacture\"\r\n          placeholder=\"Enter Year of manufacture\"\r\n          v-model=\"GeneralInformation.manufacturerDate\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-12 col-md-6\">\r\n      <Btn2\r\n        BtnName=\"Search Parent Equipment\"\r\n        backgroundColor=\"#1266F1\"\r\n        :icon=\"'search'\"\r\n        class=\"rounded-pill\"\r\n      />\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst manufacturerList = ref(null);\r\nconst modelList = ref(null);\r\n\r\n// Inject Asset Information\r\nconst GeneralInformation = inject(\"GeneralInformation\");\r\nconst Global_Asset_Information = inject(\"Global_Asset_Information\");\r\n\r\nconst commonNameList = ref([\"concentrator\", \"bp apparatus\", \"gun thermometer\"]);\r\n\r\nconst fetchManufacturer = async (event) => {\r\n  try {\r\n    const selectedManufacturer = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      GeneralInformation.value.selectedManufacturer =\r\n        manufacturerList.value.find((manufacturer) => {\r\n          return selectedManufacturer === manufacturer.manufacturer_name;\r\n        });\r\n      Global_Asset_Information.value.manufacturerId =\r\n        GeneralInformation.value.selectedManufacturer._id;\r\n      await fetchModel();\r\n    } else {\r\n      Global_Asset_Information.value.manufacturerId = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Manufacturer\",\r\n              queries: [\r\n                {\r\n                  field: \"manufacturer_name\",\r\n                  op: \"sb\",\r\n                  value: \"^\",\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                manufacturer_name: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            manufacturerList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst fetchModel = async (event) => {\r\n  try {\r\n    const selectedModel = event ? event.target.value : \"\";\r\n    if (\r\n      event &&\r\n      (!(event instanceof InputEvent) ||\r\n        event.inputType === \"insertReplacementText\")\r\n    ) {\r\n      GeneralInformation.value.selectedModel = modelList.value.find((model) => {\r\n        return selectedModel === model.model_name;\r\n      });\r\n      Global_Asset_Information.value.modelId =\r\n        GeneralInformation.value.selectedModel._id;\r\n    } else {\r\n      Global_Asset_Information.value.modelId = null;\r\n\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"FIND_RECORD\",\r\n            return_array: true,\r\n            max_list: 100,\r\n            find: {\r\n              collection: \"Model\",\r\n              queries: [\r\n                {\r\n                  field: \"manufacturer_id\",\r\n                  op: \"sb\",\r\n                  value: Global_Asset_Information.value.manufacturerId,\r\n                },\r\n              ],\r\n              projection: {\r\n                _id: 1,\r\n                model_name: 1,\r\n                model_number: 1,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            modelList.value = res.Response.records;\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchManufacturer();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-GeneralInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-GeneralInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-GeneralInformation.vue?vue&type=style&index=0&id=03abec90&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-03abec90\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Maintenance and Support\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <!-- Assign Clinical Engineer -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"clinicalEngineerList\" class=\"form-label\"\r\n          >Assign Clinical Engineer</label\r\n        >\r\n        <select\r\n          id=\"clinicalEngineerList\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n        >\r\n          <option selected>Select Clinical Engineer</option>\r\n        </select>\r\n      </div>\r\n      <!-- Assign Support Team -->\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"supportTeamList\" class=\"form-label\"\r\n          >Assign Support Team</label\r\n        >\r\n        <select\r\n          id=\"supportTeamList\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"MaintenanceAndSupport.supportTeam\"\r\n        >\r\n          <option selected>Select Support Team</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"statusList\" class=\"form-label\">Status</label>\r\n        <select\r\n          id=\"statusList\"\r\n          class=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n          v-model=\"MaintenanceAndSupport.status\"\r\n        >\r\n          <option selected value=\"Active Deployed\">Active Deployed</option>\r\n          <option\r\n            v-for=\"list in statusList\"\r\n            :key=\"list.value\"\r\n            :value=\"list.value\"\r\n          >\r\n            {{ list.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3 mb-3\"\r\n    >\r\n      <div class=\"form-check\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id=\"userManual\"\r\n          v-model=\"MaintenanceAndSupport.userManual\"\r\n        />\r\n        <label class=\"form-check-label\" for=\"userManual\">\r\n          User Manual Available?\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <div class=\"form-check\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id=\"techManual\"\r\n          v-model=\"MaintenanceAndSupport.technicalManual\"\r\n        />\r\n        <label class=\"form-check-label\" for=\"techManual\">\r\n          Technical Manual Available?\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject } from \"vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst MaintenanceAndSupport = inject(\"MaintenanceAndSupport\");\r\n\r\nconst statusList = ref([\r\n  { name: \"Active in Storage\", value: \"Active in Storage\" },\r\n  { name: \"Active in Service\", value: \"Active in Service\" },\r\n  { name: \"Storage Repairable\", value: \"Storage Repairable\" },\r\n  { name: \"Storage Parts\", value: \"Storage Parts\" },\r\n  { name: \"Disposed\", value: \"Disposed\" },\r\n]);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n</style>\r\n","import script from \"./ASSET-MaintenanceAndSupport.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-MaintenanceAndSupport.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-MaintenanceAndSupport.vue?vue&type=style&index=0&id=3bd3d5f0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bd3d5f0\"]])\n\nexport default __exports__","<template>\r\n  <Section sectionTitle=\"Multiple Equipment Entry\">\r\n    <!-- <span class=\"badge rounded-pill bg-danger mb-2\">\r\n      <span>equipment fleet</span>\r\n      {{ equipmentCount }}\r\n    </span> -->\r\n    <div\r\n      v-for=\"equipment in multipleEquipment\"\r\n      :key=\"equipment.index\"\r\n      class=\"card mb-3\"\r\n    >\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            aria-label=\"Close\"\r\n            @click=\"removeEquipment\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\"\r\n        >\r\n          <!-- Serial Number -->\r\n          <div class=\"col-lg-4 mb-3\">\r\n            <Input\r\n              label=\"Serial Number\"\r\n              type=\"text\"\r\n              id=\"serialNumber\"\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n          </div>\r\n          <!-- Department -->\r\n          <div class=\"col-lg-4 mb-3\">\r\n            <label for=\"departmentList\" class=\"form-label\">Department</label>\r\n            <select\r\n              id=\"departmentList\"\r\n              class=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Select Department</option>\r\n            </select>\r\n          </div>\r\n          <!-- Location -->\r\n          <div class=\"col-lg-4\">\r\n            <Input\r\n              label=\"Location\"\r\n              type=\"text\"\r\n              id=\"locationTag\"\r\n              placeholder=\"Add Location Tag\"\r\n            />\r\n          </div>\r\n          <!-- Comments -->\r\n          <div class=\"col-lg-12 col-md-12 mb-3\">\r\n            <label for=\"commentSection\" class=\"form-label\">Comments</label>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"commentSection\"\r\n                aria-describedby=\"basic-addon3\"\r\n                placeholder=\"Enter Comments\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-3\">\r\n      <div class=\"col position-relative\">\r\n        <!-- <Btn\r\n          BtnName=\"Add Asset Fleet\"\r\n          backgroundColor=\"#1266F1\"\r\n          :icon=\"'plus'\"\r\n          @click=\"addEquipment\"\r\n          class=\"position-relative\"\r\n        />\r\n\r\n        <span\r\n          class=\"position-absolute top-0 start-100 badge rounded-pill bg-danger mb-2\"\r\n        >\r\n          {{ equipmentCount }}\r\n        </span> -->\r\n\r\n        <!-- <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary position-relative\"\r\n          @click=\"addEquipment\"\r\n        >\r\n          Add New Equipment\r\n          <span\r\n            class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\"\r\n          >\r\n            {{ equipmentCount }}\r\n            <span class=\"visually-hidden\">unread messages</span>\r\n          </span>\r\n        </button> -->\r\n        <Btn2\r\n          BtnName=\"Add New Equipment\"\r\n          backgroundColor=\"#1266F1\"\r\n          :icon=\"'plus'\"\r\n          @click=\"addEquipment\"\r\n          class=\"position-relative rounded-pill\"\r\n        >\r\n          <span\r\n            class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\"\r\n          >\r\n            {{ equipmentCount }}\r\n            <span class=\"visually-hidden\">unread messages</span>\r\n          </span>\r\n        </Btn2>\r\n      </div>\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject } from \"vue\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\n// Multiple Equipment Entry\r\nconst multipleEquipment = ref([]);\r\nconst equipmentCount = ref(0);\r\n\r\nconst addEquipment = () => {\r\n  multipleEquipment.value.push([\r\n    {\r\n      Serial_Number: \"\",\r\n      Department: \"\",\r\n      Location: \"\",\r\n      Comments: \"\",\r\n    },\r\n  ]);\r\n  equipmentCount.value++;\r\n};\r\n\r\nconst removeEquipment = (index) => {\r\n  multipleEquipment.value.splice(index, 1);\r\n  equipmentCount.value--;\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../BIOMD/Style/BIOMD.scss\";\r\n\r\n.btn-close {\r\n  position: relative;\r\n  float: right;\r\n  color: white;\r\n  top: -10px;\r\n  right: -10px;\r\n}\r\n</style>\r\n","import script from \"./ASSET-MultipleEquipmentEntry.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ASSET-MultipleEquipmentEntry.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ASSET-MultipleEquipmentEntry.vue?vue&type=style&index=0&id=60083668&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60083668\"]])\n\nexport default __exports__","<!-- \r\n************************************\r\nCreated By : Reveal Foundation  \r\nAuthor     : Edward Opoku-Agyemang           \r\nDate       : < 03-Sep-2022 >    \r\nVersion    : < 0.0.1 >   \r\nDescription: < Describe the application >          \r\n************************************\r\n-->\r\n\r\n<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\"\r\n      >\r\n        <div class=\"mt-3\">\r\n          <Header\r\n            title=\"New Asset\"\r\n            subTitle=\"Create a new asset with this form\"\r\n          />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2\r\n            BtnName=\"Return\"\r\n            :icon=\"'arrow-left'\"\r\n            backgroundColor=\"none\"\r\n            @click=\"goBack\"\r\n            class=\"text-secondary btn-sm\"\r\n          />\r\n\r\n          <Btn2\r\n            BtnName=\"Dashboard\"\r\n            backgroundColor=\"#2A94B6\"\r\n            @click=\"goBack\"\r\n            class=\"text-light btn-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <GeneralInformation />\r\n        <EquipmentLocation />\r\n        <MaintenanceAndSupport />\r\n        <EquipmentAcquisition />\r\n        <MultipleEquipmentEntry />\r\n        <AdditionalInformation />\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn\r\n              BtnName=\"Create Asset\"\r\n              backgroundColor=\"#27AE60\"\r\n              class=\"mb-3\"\r\n              :showLoading=\"true\"\r\n              @click=\"createRecord()\"\r\n            />\r\n\r\n            <Btn\r\n              BtnName=\"Clear Content\"\r\n              @click=\"clearContent()\"\r\n              :showLoading=\"true\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\"; // Access Vuew Store Variables and Methods\r\nimport { ref, toRefs, provide, computed } from \"vue\";\r\n\r\nimport GeneralInformation from \"./ASSET-GeneralInformation.vue\";\r\nimport EquipmentLocation from \"./ASSET-EquipmentLocation.vue\";\r\nimport EquipmentAcquisition from \"./ASSET-EquipmentAcquisition.vue\";\r\nimport MaintenanceAndSupport from \"./ASSET-MaintenanceAndSupport.vue\";\r\nimport MultipleEquipmentEntry from \"./ASSET-MultipleEquipmentEntry.vue\";\r\nimport AdditionalInformation from \"./ASSET-AdditionalInformation.vue\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    GeneralInformation,\r\n    EquipmentLocation,\r\n    MaintenanceAndSupport,\r\n    AdditionalInformation,\r\n    MultipleEquipmentEntry,\r\n    EquipmentAcquisition,\r\n    Btn2,\r\n    Btn,\r\n    Header,\r\n  },\r\n  name: \"equipment\",\r\n  // Define Props here\r\n  props: {\r\n    tabid: {\r\n      type: String,\r\n    },\r\n  },\r\n  // Emit value can pass within this array\r\n  emits: [\"updatePage\"],\r\n  setup(props, { emit }) {\r\n    const { props_variable } = toRefs(props); // include variables from the props with help of toRefs\r\n    const store = useStore();\r\n    const Institute_Code = computed(\r\n      () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n    );\r\n\r\n    const changeServiceState = (serviceState) =>\r\n      store.dispatch(\"changeServiceState\", serviceState);\r\n    //Redirect to another page\r\n    function redirectToPage() {\r\n      changeServiceState({\r\n        service: \"<App_Name>\",\r\n        tabcode: tabid.value,\r\n        status: \"<Navigate_To_This_Page>\",\r\n      });\r\n    }\r\n\r\n    const GeneralInformation = ref({\r\n      equipmentNumber: null,\r\n      commonName: null,\r\n      description: null,\r\n      serialNumber: null,\r\n      selectedManufacturer: { manufacturer_name: null, _id: null },\r\n      selectedModel: { model_name: null, _id: null, model_number: null },\r\n      manufacturerDate: null,\r\n    });\r\n\r\n    const EquipmentLocation = ref({\r\n      selectedFacility: {\r\n        _id: null,\r\n        facility_name: null,\r\n        area: null,\r\n        city: null,\r\n      },\r\n      selectedRegion: { _id: null, area: null },\r\n      selectedDistrict: { _id: null, city: null },\r\n      location: [],\r\n    });\r\n\r\n    const EquipmentAcquisition = ref({\r\n      selectedVendor: {\r\n        _id: null,\r\n        vendor_name: null,\r\n      },\r\n      purchaseOrderNumber: null,\r\n      purchaseCost: null,\r\n      purchaseDate: null,\r\n      project: null,\r\n      acceptanceDate: null,\r\n      warrantyDate: null,\r\n    });\r\n\r\n    const Global_Asset_Information = ref({\r\n      manufacturerId: null,\r\n      modelId: null,\r\n      facilityId: null,\r\n      region: null,\r\n      district: null,\r\n      vendorId: null,\r\n    });\r\n\r\n    const MaintenanceAndSupport = ref({\r\n      status: \"Active Deployed\",\r\n      supportTeam: null,\r\n      userManual: false,\r\n      technicalManual: false,\r\n    });\r\n\r\n    const departmentId = ref(null);\r\n\r\n    const comment = ref(null);\r\n\r\n    // send Socket Request use to send rrequest packet for an API\r\n    const sendSocketReq = (request) => {\r\n      store.dispatch(\"sendSocketReq\", request);\r\n    };\r\n\r\n    // Function to Send Request and Get Response by this template code .\r\n    function createRecord() {\r\n      // send Request as below .\r\n      sendSocketReq({\r\n        data: {\r\n          Expiry: 20000,\r\n          Type: \"REQUEST\",\r\n          Request: {\r\n            Module: \"MEMS\",\r\n            ServiceCode: \"BIOMD\",\r\n            API: \"CREATE_RECORD\",\r\n            collection: \"Asset\",\r\n            record: {\r\n              assetCode: GeneralInformation.value.equipmentNumber,\r\n              commonName: GeneralInformation.value.commonName,\r\n              description: GeneralInformation.value.description,\r\n              serialNumber: GeneralInformation.value.serialNumber,\r\n              model_id: Global_Asset_Information.value.modelId,\r\n              manufacturer_id: Global_Asset_Information.value.manufacturerId,\r\n              manufactureDate: GeneralInformation.value.manufacturerDate,\r\n              facility_id: Global_Asset_Information.value.facilityId,\r\n              area: Global_Asset_Information.value.region,\r\n              city: Global_Asset_Information.value.district,\r\n              department: departmentId.value,\r\n              roomTag: EquipmentLocation.value.location,\r\n              supportTeam: MaintenanceAndSupport.value.supportTeam,\r\n              vendor_id: Global_Asset_Information.value.vendorId,\r\n              status: MaintenanceAndSupport.value.status,\r\n              user_manual: MaintenanceAndSupport.value.userManual,\r\n              technical_manual: MaintenanceAndSupport.value.technicalManual,\r\n              purchaseOrderNumber: EquipmentAcquisition.value.purchaseOrder,\r\n              project: EquipmentAcquisition.value.project,\r\n              purchaseCost: EquipmentAcquisition.value.purchaseCost,\r\n              purchaseDate: EquipmentAcquisition.value.purchaseDate,\r\n              acceptanceDate: EquipmentAcquisition.value.acceptanceDate,\r\n              warrantyDate: EquipmentAcquisition.value.warrantyDate,\r\n              generalComment: comment.value,\r\n            },\r\n            Institute_Code: Institute_Code.value, //Dynamically changes when another institute logged in\r\n          },\r\n        },\r\n        callback: (res) => {\r\n          if (res.Type === \"RESPONSE\") {\r\n            // Console the Response Packet\r\n            Response: {\r\n              Success: TRUE;\r\n              Collection: \"assets\";\r\n              Message: \"Created Record\";\r\n            }\r\n\r\n            console.log(\"Response Packet -->\", res.Response);\r\n            getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n          } else if (res.Type === \"ERROR\") {\r\n            // Error response received during fetching\r\n            Type: \"ERROR\";\r\n            Response: {\r\n              Error_Code: \"API-CREATE_RECORD-E001\";\r\n              Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n            }\r\n          }\r\n        },\r\n      });\r\n    }\r\n\r\n    const goBack = () => {\r\n      emit(\"updatePage\", \"landing\");\r\n    };\r\n\r\n    provide(\"GeneralInformation\", GeneralInformation);\r\n    provide(\"EquipmentLocation\", EquipmentLocation);\r\n    provide(\"EquipmentAcquisition\", EquipmentAcquisition);\r\n    provide(\"Global_Asset_Information\", Global_Asset_Information);\r\n    provide(\"MaintenanceAndSupport\", MaintenanceAndSupport);\r\n    provide(\"departmentId\", departmentId);\r\n    provide(\"comment\", comment);\r\n\r\n    return {\r\n      goBack,\r\n      redirectToPage,\r\n      createRecord,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>\r\n","import { render } from \"./ASSET.vue?vue&type=template&id=49acc3da&scoped=true\"\nimport script from \"./ASSET.vue?vue&type=script&lang=js\"\nexport * from \"./ASSET.vue?vue&type=script&lang=js\"\n\nimport \"./ASSET.vue?vue&type=style&index=0&id=49acc3da&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-49acc3da\"]])\n\nexport default __exports__","<template>\r\n  <!-- reusable Button Block -->\r\n  <div\r\n    class=\"row d-flex align-items-center justify-content-center button fw-bold buttonBackground\"\r\n    :style=\"'--color:' + backgroundColor\"\r\n    @click=\"emitClickEvent()\"\r\n  >\r\n    <div\r\n      class=\"col-sm-10 bodyText d-flex justify-content-center align-center mt-3\"\r\n    >\r\n      <p class=\"pe-2\">{{ BtnName }}</p>\r\n      <div class=\"iconFont text-light\">\r\n        <font-awesome-icon :icon=\"icon\" size=\"1x\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-2 mx-auto\" v-if=\"showLoader\">\r\n      <img\r\n        src=\"../../../../assets/media/btn_loader.gif\"\r\n        alt=\"\"\r\n        class=\"gifImage\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  BtnName: {\r\n    type: String,\r\n    default: \"Button\",\r\n  },\r\n  showLoader: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  backgroundColor: {\r\n    type: String,\r\n    default: \"#586974\",\r\n  },\r\n  icon: null,\r\n});\r\n\r\nlet icon = props.icon;\r\n\r\nconst emit = defineEmits([\"onUserClick\"]);\r\n\r\nfunction emitClickEvent() {\r\n  emit(\"onUserClick\");\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.gifImage {\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n\r\n.button {\r\n  max-width: 300px !important;\r\n  min-width: 300px !important;\r\n  max-height: 50px !important;\r\n  min-height: 50px !important;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px !important;\r\n  font-style: normal;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n}\r\n\r\n.buttonBackground {\r\n  background-color: var(--color);\r\n}\r\n</style>\r\n","import script from \"./UI-Btn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Btn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Btn.vue?vue&type=style&index=0&id=5b6110f5&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5b6110f5\"]])\n\nexport default __exports__","<template>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn buttonBackground d-inline-flex align-items-center fs-6 rounded-pill\"\r\n    :class=\"class\"\r\n    :style=\"'--color:' + backgroundColor\"\r\n    @click=\"emitClickEvent()\"\r\n  >\r\n    <font-awesome-icon :icon=\"icon\" size=\"1x\" class=\"me-2\" />\r\n    <span>{{ BtnName }}</span>\r\n\r\n    <slot />\r\n  </button>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  BtnName: {\r\n    type: String,\r\n    default: \"Button Name\",\r\n  },\r\n  class: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  showLoader: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  backgroundColor: {\r\n    type: String,\r\n    default: \"#586974\",\r\n  },\r\n  icon: null,\r\n});\r\n\r\nlet icon = props.icon;\r\n\r\nconst emit = defineEmits([\"onUserClick\"]);\r\n\r\nfunction emitClickEvent() {\r\n  emit(\"onUserClick\");\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.buttonBackground {\r\n  background-color: var(--color);\r\n  color: #ffffff;\r\n}\r\n</style>\r\n","import script from \"./UI-Btn2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Btn2.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Btn2.vue?vue&type=style&index=0&id=e5edf4dc&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e5edf4dc\"]])\n\nexport default __exports__","import script from \"./UI-FormHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-FormHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-FormHeader.vue?vue&type=style&index=0&id=7885740e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7885740e\"]])\n\nexport default __exports__"],"names":["comment","inject","__exports__","store","useStore","sendSocketReq","request","dispatch","vendorList","ref","EquipmentAcquisition","Global_Asset_Information","fetchVendor","async","selectedVendor","event","target","value","InputEvent","inputType","vendorId","data","Expiry","Type","Request","Module","ServiceCode","API","return_array","max_list","find","collection","queries","field","op","projection","_id","vendor_name","callback","res","console","log","Response","records","vendor","error","onMounted","facilityList","regionList","districtList","EquipmentLocation","departmentId","fetchFacility","selectedFacility","facilityId","facility_name","country","area","city","facility","fetchRegion","selectedRegion","region","manufacturerList","modelList","GeneralInformation","commonNameList","fetchManufacturer","selectedManufacturer","manufacturerId","manufacturer_name","manufacturer","fetchModel","selectedModel","modelId","model_name","model_number","model","MaintenanceAndSupport","statusList","name","multipleEquipment","equipmentCount","addEquipment","push","Serial_Number","Department","Location","Comments","removeEquipment","index","splice","class","_createElementBlock","_createElementVNode","_createVNode","_component_Header","title","subTitle","_component_Btn2","BtnName","icon","backgroundColor","onClick","$setup","_component_GeneralInformation","_component_EquipmentLocation","_component_MaintenanceAndSupport","_component_EquipmentAcquisition","_component_MultipleEquipmentEntry","_component_AdditionalInformation","_component_Btn","showLoading","_ctx","components","AdditionalInformation","MultipleEquipmentEntry","Btn2","Btn","Header","props","tabid","type","String","emits","setup","emit","props_variable","toRefs","Institute_Code","computed","state","globalStore","UserInfo","Institute_Info","Code","changeServiceState","serviceState","redirectToPage","service","tabcode","status","equipmentNumber","commonName","description","serialNumber","manufacturerDate","selectedDistrict","location","purchaseOrderNumber","purchaseCost","purchaseDate","project","acceptanceDate","warrantyDate","district","supportTeam","userManual","technicalManual","createRecord","record","assetCode","model_id","manufacturer_id","manufactureDate","facility_id","department","roomTag","vendor_id","user_manual","technical_manual","purchaseOrder","generalComment","TRUE","getValues","Site_Info","goBack","provide","render","emitClickEvent"],"sourceRoot":""}