{"version":3,"file":"js/3190.a8f0419a.js","mappings":"kwBA0CMA,GAAQC,EAAAA,EAAAA,MACRC,EAAiBC,IACrBH,EAAMI,SAAS,gBAAiBD,IAE5BE,GAAiBC,EAAAA,EAAAA,KACrB,IAAMN,EAAMO,MAAMC,YAAYC,SAASC,eAAeC,OAWxDC,QAAQC,IAAI,mCAEZ,MAAMC,GAAYC,EAAAA,EAAAA,IAAI,CACpBC,UAAW,KACXC,kBAAmB,KACnBC,WAAY,KACZC,qBAAsB,CACpBC,iBAAkB,KAClBC,IAAK,QAIHC,GAAyBP,EAAAA,EAAAA,IAAI,CACjCQ,eAAgB,OAGlB,SAASC,IAEPtB,EAAc,CACZuB,KAAM,CACJC,OAAQ,IACRC,KAAM,UACNC,QAAS,CACPC,OAAQ,OACRC,YAAa,QACbC,IAAK,gBACLC,WAAY,QACZC,OAAQ,IAAIC,EAAAA,GAAY,CACtBX,eAAgBD,EAAuBa,MAAMZ,eAC7CP,UAAWF,EAAUqB,MAAMnB,UAC3BC,kBAAmBH,EAAUqB,MAAMlB,kBACnCC,WAAYJ,EAAUqB,MAAMjB,aAC3BkB,YACH/B,eAAgBA,EAAe8B,QAGnCE,SAAWC,IACQ,aAAbA,EAAIX,MACNY,EAAW,WAEX3B,QAAQC,IAAI,yBAAuByB,EAAIE,WAE9BF,EAAIX,QAcrB,MAAMY,EAAaE,MAAOC,EAAMC,KAC9BC,EAAK,aAAcF,EAAMC,IAGrBE,GAAWvC,EAAAA,EAAAA,KAAS,IAAO,0BAAyBc,M,OAC1D0B,EAAAA,EAAAA,IAAQ,YAAahC,IACrBgC,EAAAA,EAAAA,IAAQ,yBAA0BxB,G,4tCCjE5BR,IAdQb,EAAAA,EAAAA,OAcI8C,EAAAA,EAAAA,IAAO,cACnBzB,GAAyByB,EAAAA,EAAAA,IAAO,0B,OAsBtCC,EAAAA,EAAAA,KAAU,KACHlC,EAAUqB,MAAMhB,uBACnBL,EAAUqB,MAAMhB,qBAAuB,CAAEC,iBAAkB,GAAIC,IAAK,OAEtEP,EAAUqB,MAAMhB,qBAAqBC,iBAAmBA,EACxDN,EAAUqB,MAAMhB,qBAAqBE,IAAME,EACvCD,IACFA,EAAuBa,MAAMZ,eAAiBA,M,w2BClFlD,MAAM0B,EAAc,EAEpB,S,kICCA,MAAMA,GAA2B,OAAgB,IAAQ,CAAC,CAAC,YAAY,qBAEvE,e,ylBCiCA,IAAIC,EAAOP,EAAMO,K,obCnCjB,MAAMD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,qYCFA,MAAMA,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL-ModelDescription.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL-ModelDescription.vue?c5a9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-MODEL/MODEL.vue?886d","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn.vue","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-Btn.vue?d9b9","webpack://mems-client/./src/components/BIOMD/BIOMD/BIOMD-UI/UI-FormHeader.vue"],"sourcesContent":["<template>\r\n  <div class=\"RevealContainer\">\r\n    <div class=\"container p-4 m-4\">\r\n      <div\r\n        class=\"d-lg-flex d-md-flex d-sm-flex gap-lg-0 gap-sm-5 align-items-center justify-content-lg-between justify-content-md-between justify-content-sm-center\">\r\n        <div class=\"mt-3\">\r\n          <Header title=\"Add Model\" :subTitle=\"subTitle\" />\r\n        </div>\r\n        <div class=\"d-flex gap-2 d-md-block\">\r\n          <Btn2 BtnName=\"Return\" :icon=\"'arrow-left'\" backgroundColor=\"none\" @click=\"changePage('dashboard')\"\r\n            class=\"text-secondary btn-sm\" />\r\n\r\n          <Btn2 BtnName=\"Dashboard\" backgroundColor=\"#2A94B6\" @click=\"goBack\" class=\"text-light btn-sm\" />\r\n        </div>\r\n      </div>\r\n\r\n      <main>\r\n        <ModelDescription :manufacturerName=\"manufacturerName\" :manufacturerID=\"manufacturerID\" />\r\n\r\n\r\n        <div class=\"d-flex justify-content-center py-3\">\r\n          <div class=\"\">\r\n            <Btn BtnName=\"Create Model\" backgroundColor=\"#27AE60\" class=\"mb-3\" @click=\"createRecord\" />\r\n\r\n            <Btn BtnName=\"Clear Content\" />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from \"vuex\";\r\nimport { ref, computed, provide, onMounted } from \"vue\";\r\n\r\nimport Btn from \"../BIOMD-UI/UI-Btn.vue\";\r\nimport Btn2 from \"../BIOMD-UI/UI-Btn2.vue\";\r\nimport Header from \"../BIOMD-UI/UI-FormHeader.vue\";\r\nimport ModelDescription from \"./MODEL-ModelDescription.vue\"\r\nimport { ModelRecord } from \"../../../../store/modules/recordSchema\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\nconst Institute_Code = computed(\r\n  () => store.state.globalStore.UserInfo.Institute_Info.Code\r\n);\r\n\r\nconst { manufacturerName, manufacturerID } = defineProps({\r\n  manufacturerName: {\r\n    type: String,\r\n  },\r\n  manufacturerID: {\r\n    type: String,\r\n  },\r\n})\r\nconsole.log(\"Manufacturer Name in MODEL.vue:\");\r\n\r\nconst ModelDesc = ref({\r\n  modelName: null,\r\n  deviceDescription: null,\r\n  commonName: null,\r\n  selectedManufacturer: {\r\n    manufacturerName: null,\r\n    _id: null,\r\n  },\r\n})\r\n\r\nconst GlobalModelInformation = ref({\r\n  manufacturerID: null,\r\n})\r\n\r\nfunction createRecord() {\r\n  // send Request as below .\r\n  sendSocketReq({\r\n    data: {\r\n      Expiry: 20000,\r\n      Type: \"REQUEST\",\r\n      Request: {\r\n        Module: \"MEMS\",\r\n        ServiceCode: \"BIOMD\",\r\n        API: \"CREATE_RECORD\",\r\n        collection: \"Model\",\r\n        record: new ModelRecord({\r\n          manufacturerID: GlobalModelInformation.value.manufacturerID,\r\n          modelName: ModelDesc.value.modelName,\r\n          deviceDescription: ModelDesc.value.deviceDescription,\r\n          commonName: ModelDesc.value.commonName\r\n        }).serialize(),\r\n        Institute_Code: Institute_Code.value,\r\n      },\r\n    },\r\n    callback: (res) => {\r\n      if (res.Type === \"RESPONSE\") {\r\n        changePage(\"success\");\r\n\r\n        console.log(\"Response Packet -->\", res.Response);\r\n        // getValues.value = res.Response.Site_Info[0]; //Assigning response values to getValues Object\r\n      } else if (res.Type === \"ERROR\") {\r\n        // Error response received during fetching\r\n        Type: \"ERROR\";\r\n        Response: {\r\n          Error_Code: \"API-CREATE_RECORD-E001\";\r\n          Error_Msg: \"CREATE_RECORD_API: Failed to execute query\";\r\n        }\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nconst emit = defineEmits([\"updatePage\"]);\r\n\r\nconst changePage = async (page, props) => {\r\n  emit(\"updatePage\", page, props);\r\n};\r\n\r\nconst subTitle = computed(() => `Create a new model for ${manufacturerName}`);\r\nprovide(\"ModelDesc\", ModelDesc);\r\nprovide(\"GlobalModelInformation\", GlobalModelInformation);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.RevealContainer {\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  overflow: scroll;\r\n}\r\n\r\n.RevealContainer::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n</style>","<template>\r\n  <Section sectionTitle=\"Model Description\">\r\n    <div class=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-2 g-3\">\r\n      <!-- Model Name -->\r\n      <div class=\"col-lg-6\">\r\n        <Input label=\"Model Name\" type=\"text\" id=\"modelName\" placeholder=\"Model Name\" v-model=\"ModelDesc.modelName\" />\r\n      </div>\r\n\r\n      <!-- Common Name -->\r\n      <div class=\"col-lg-6\">\r\n        <Input label=\"Common Name\" type=\"text\" id=\"CommonName\" placeholder=\"Common Name\"\r\n          v-model=\"ModelDesc.commonName\" />\r\n      </div>\r\n\r\n      <!-- Device Description -->\r\n      <div class=\"col-lg-6\">\r\n        <Input label=\"Device Description\" type=\"text\" id=\"deviceDescription\" placeholder=\"Device Description\"\r\n          v-model=\"ModelDesc.deviceDescription\" />\r\n      </div>\r\n\r\n      <!-- Manufacturer -->\r\n      <!-- <div class=\"col-lg-6 mb-3\">\r\n        <label for=\"manufacturerList\" class=\"form-label\">Manufacturer</label>\r\n        <input class=\"form-control\" list=\"manufacturerListOptions\" id=\"manufacturerList\"\r\n          placeholder=\"Select Manufacturer\" aria-label=\"Default select example\"\r\n          v-model=\"ModelDesc.selectedManufacturer.manufacturerName\" @input=\"fetchManufacturer\" autocomplete=\"off\" />\r\n        <datalist id=\"manufacturerListOptions\">\r\n          <option v-for=\"manufacturer in manufacturerList\" :key=\"manufacturer.index\"\r\n            :value=\"manufacturer.manufacturerName\"></option>\r\n        </datalist>\r\n      </div> -->\r\n    </div>\r\n  </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject, onMounted, watch, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport Input from \"../BIOMD-UI/UI-Input.vue\";\r\nimport Section from \"../BIOMD-UI/UI-Section.vue\";\r\n\r\nconst store = useStore();\r\nconst sendSocketReq = (request) => {\r\n  store.dispatch(\"sendSocketReq\", request);\r\n};\r\n\r\nconst { manufacturerName, manufacturerID } = defineProps({\r\n  manufacturerName: {\r\n    type: String,\r\n  },\r\n  manufacturerID: {\r\n    type: String,\r\n  },\r\n})\r\n\r\nconst ModelDesc = inject(\"ModelDesc\")\r\nconst GlobalModelInformation = inject(\"GlobalModelInformation\")\r\n\r\n// const manufacturerList = ref(null)\r\n\r\n// const fetchManufacturer = async (event) => {\r\n//   try {\r\n//     // If there is no event, do not reset the manufacturerID.\r\n//     if (!event) {\r\n//       return;\r\n//     }\r\n//     const selectedManufacturer = event.target.value;\r\n//     if (!(event instanceof InputEvent) || event.inputType === \"insertReplacementText\") {\r\n//       ModelDesc.value.selectedManufacturer = manufacturerList.value.find(\r\n//         (manufacturer) => selectedManufacturer === manufacturer.manufacturerName\r\n//       );\r\n//       GlobalModelInformation.value.manufacturerID = ModelDesc.value.selectedManufacturer._id;\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\n\r\nonMounted(() => {\r\n  if (!ModelDesc.value.selectedManufacturer) {\r\n    ModelDesc.value.selectedManufacturer = { manufacturerName: '', _id: null };\r\n  }\r\n  ModelDesc.value.selectedManufacturer.manufacturerName = manufacturerName;\r\n  ModelDesc.value.selectedManufacturer._id = manufacturerID;\r\n  if (GlobalModelInformation) {\r\n    GlobalModelInformation.value.manufacturerID = manufacturerID;\r\n  }\r\n  // fetchManufacturer();\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>","import script from \"./MODEL-ModelDescription.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MODEL-ModelDescription.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./MODEL.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MODEL.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MODEL.vue?vue&type=style&index=0&id=5ec14d98&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5ec14d98\"]])\n\nexport default __exports__","<template>\r\n  <!-- reusable Button Block -->\r\n  <div\r\n    class=\"row d-flex align-items-center justify-content-center button fw-bold buttonBackground\"\r\n    :style=\"'--color:' + backgroundColor\"\r\n  >\r\n    <div\r\n      class=\"col-sm-10 bodyText d-flex justify-content-center align-center mt-3\"\r\n    >\r\n      <p class=\"pe-2 fsXs\">{{ BtnName }}</p>\r\n      <div class=\"iconFont text-light\">\r\n        <font-awesome-icon :icon=\"icon\" size=\"1x\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-2 mx-auto\" v-if=\"showLoader\">\r\n      <img\r\n        src=\"../../../../assets/media/btn_loader.gif\"\r\n        alt=\"\"\r\n        class=\"gifImage\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  BtnName: {\r\n    type: String,\r\n    default: \"Button\",\r\n  },\r\n  showLoader: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  backgroundColor: {\r\n    type: String,\r\n    default: \"#586974\",\r\n  },\r\n  icon: null,\r\n});\r\n\r\nlet icon = props.icon;\r\n\r\n// const emit = defineEmits([\"onUserClick\"]);\r\n\r\n// function emitClickEvent() {\r\n//   emit(\"onUserClick\");\r\n// }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.gifImage {\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n\r\n.button {\r\n  max-width: 300px !important;\r\n  min-width: 300px !important;\r\n  max-height: 50px !important;\r\n  min-height: 50px !important;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 14px !important;\r\n  font-style: normal;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n}\r\n\r\n.buttonBackground {\r\n  background-color: var(--color);\r\n}\r\n</style>\r\n","import script from \"./UI-Btn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-Btn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-Btn.vue?vue&type=style&index=0&id=e1e01dc0&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e1e01dc0\"]])\n\nexport default __exports__","import script from \"./UI-FormHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UI-FormHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UI-FormHeader.vue?vue&type=style&index=0&id=7885740e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/mnt/d/Dev/MEMS/src/client/web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7885740e\"]])\n\nexport default __exports__"],"names":["store","useStore","sendSocketReq","request","dispatch","Institute_Code","computed","state","globalStore","UserInfo","Institute_Info","Code","console","log","ModelDesc","ref","modelName","deviceDescription","commonName","selectedManufacturer","manufacturerName","_id","GlobalModelInformation","manufacturerID","createRecord","data","Expiry","Type","Request","Module","ServiceCode","API","collection","record","ModelRecord","value","serialize","callback","res","changePage","Response","async","page","props","emit","subTitle","provide","inject","onMounted","__exports__","icon"],"sourceRoot":""}